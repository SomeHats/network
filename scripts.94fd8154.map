{"version":3,"sources":["../node_modules/invariant/browser.js","scripts/lib/core/Scene.js","scripts/lib/core/SceneObject.js","scripts/lib/geom/Line2.js","scripts/lib/util.js","scripts/lib/geom/Vector2.js","scripts/lib/geom/Rect.js","scripts/lib/geom/Circle.js","scripts/lib/geom/path/StraightPathSegment.js","scripts/lib/geom/path/CirclePathSegment.js","scripts/lib/ShapeHelpers.js","scripts/lib/easings.js","scripts/effects/Pulse.js","../node_modules/color-name/index.js","../node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../node_modules/simple-swizzle/index.js","../node_modules/color-string/index.js","../node_modules/color-convert/conversions.js","../node_modules/color-convert/route.js","../node_modules/color-convert/index.js","../node_modules/color/index.js","scripts/colors.js","scripts/entities/lib/ConnectionDirections.js","scripts/entities/lib/ConnectionSet.js","scripts/entities/networkNodes/Consumer.js","scripts/lib/core/SceneSystem.js","scripts/lib/ds/QuadTree.js","scripts/systems/TravellerFinder.js","scripts/entities/lib/PathFinder.js","scripts/entities/networkNodes/Intersection.js","scripts/entities/pal/PalLeg.js","scripts/entities/pal/Pal.js","scripts/entities/Traveller.js","scripts/lib/geom/path/Path.js","scripts/entities/Junction.js","scripts/entities/Road.js","scripts/entities/networkNodes/Producer.js","scripts/systems/DebugOverlay.js","scripts/index.js"],"names":["invariant","condition","format","a","b","c","d","e","f","undefined","Error","error","args","argIndex","replace","name","framesToPop","module","exports","speed","scale","repeatUpdate","Scene","width","height","scaleFactor","_children","_isPlaying","_frameHandle","_lastElapsedTime","_systemsByName","_systems","_tick","elapsedTime","lastElapsedTime","deltaTime","isPlaying","update","draw","window","requestAnimationFrame","_canvas","document","createElement","style","_ctx","getContext","_scaleFactor","_setupVisiblityChange","element","appendChild","systemType","systemName","Object","prototype","hasOwnProperty","call","system","hasSystem","constructor","push","afterAddToScene","getSystem","beforeRemoveFromScene","filter","s","child","onAddedToScene","targetChild","newChild","index","indexOf","addChildAtIndex","splice","removeChildAtIndex","onRemovedFromScene","delta","i","forEach","beforeUpdate","afterUpdate","save","clearRect","beforeDraw","sort","getCurrentZ","afterDraw","restore","cancelAnimationFrame","playOnVisible","addEventListener","hidden","stop","start","newValue","constructorIdCounts","getNextCount","SceneObject","id","_scene","ctx","scene","addChild","isSlopeVertical","slope","Infinity","Line2","displacement","end","point","x","y","fromSlopeAndDisplacement","other","isVertical","fromSlopeAndPoint","perpendicularSlope","isPerpendicularTo","verticalX","subtract","lerp","n","mapRange","a1","b1","a2","b2","constrain","min","max","Math","random","randomInt","floor","sample","arr","length","flatten","reduce","concat","uniq","item","compact","normaliseAngle","angle","atan2","sin","cos","varyAbsolute","base","amount","varyRelative","times","count","fn","result","shuffle","map","entry","Vector2","vector","Array","isArray","magnitude","color","debugContext","beginPath","size","HAIRLINE","moveTo","lineTo","strokeStyle","lineWidth","stroke","factor","amt","sqrt","magnitudeSquared","Rect","left","top","right","bottom","centerX","centerY","center","strokeRect","Circle","radius","arc","PI","radians","distanceTo","StraightPathSegment","line","freeze","position","constrainedPosition","withMagnitude","add","CirclePathSegment","containingCircle","entryAngle","exitAngle","entryPoint","pointOnCircumference","exitPoint","entryLineNormal","perpendicularLineThroughPoint","exitLineNormal","roadCircleCenter","pointAtIntersectionWith","roadCircleRadius","startAngle","endAngle","circle","angleDifference","isAnticlockwise","proportion","abs","circumference","path","segments","segment","toString","reverse","easing","linear","inQuad","t","outQuad","inOutQuad","inCubic","outCubic","inOutCubic","inQuart","outQuart","inOutQuart","inQuint","outQuint","inOutQuint","inSine","outSine","inOutSine","inExpo","pow","outExpo","inOutExpo","inCirc","outCirc","inOutCirc","inElastic","p","asin","outElastic","inOutElastic","inBack","outBack","inOutBack","inBounce","outBounce","inOutBounce","Pulse","startRadius","endRadius","duration","easeRadius","easeOpacity","removeOnComplete","_circle","_startRadius","_endRadius","_duration","_color","_progress","_easeRadius","_easeOpacity","_removeOnComplete","deltaProgress","getScene","removeChild","opacity","fillStyle","fade","fill","LIGHT_BG","TEAL","BLUE","RED","YELLOW","ConnectionDirections","IN","OUT","ConnectionSet","incoming","outgoing","target","direction","addIncoming","addOutgoing","DEFAULT_COOLDOWN","RADIUS","VISUAL_CONNECTION_RADIUS","PULSE_RADIUS","CLOCK_FADE_DURATION","PULSE_DURATION","MAIN_COLOR","lighten","desaturate","CLOCK_COLOR","darken","PULSE_COLOR","Consumer","cooldown","isDestination","_timer","_connectionSet","_visualConnectionCircle","_cooldown","visited","Set","node","canConsumeTraveller","_resetTimer","_pulse","progress","colorMixAmount","bgColor","mix","addChildBefore","DEFAULT_NAME","SceneSystem","time","QuadTree","boundary","getPosition","_items","_nextItemIndex","_subdivisions","_getPosition","debugDraw","subdivision","containsPoint","NODE_CAPACITY","subdivisions","_getSubdivisions","insert","remove","clear","rect","foundItems","intersectsRect","findItemsInRect","boundingBox","fromLeftTopRightBottom","TravellerFinder","traveller","_quadTree","children","findItemsInCircle","PathFinder","getNextRoad","initialNode","destinationNode","remainingNodes","getAllReachableNodes","has","bestCosts","Map","prevRoads","set","_nodeWithShortestDistance","cost","delete","_nextRoadFromRoute","_updateNeighbours","nodes","costs","bestCost","bestNode","get","outgoingConnections","nextNode","road","to","nextNodeCost","altNextNodeCost","expectedTimeFromStartToEnd","finish","from","Intersection","destination","nextRoad","includes","removeFromCurrentRoad","addTravellerAtStart","bestTraveller","shortestDistance","getTravellerAfterPosition","positionOnCurrentRoad","incomingConnections","getTravellerBeforePosition","distanceToEndOfCurrentRoad","Y_SCALE","HALF_PI","getLegRadius","hipHeight","legWidth","PalLeg","owner","config","angleOffset","_stepProgress","_restTimer","_currentStepMaxLift","_owner","_config","_angleOffset","_hipRadius","_kneeRadius","kneeScale","_floorRadius","_lastFootOnFloorXY","_getIdealFootRestingXY","_lastFootOnFloorPalPosition","dtSeconds","stepRestDuration","isResting","isStepping","stepDuration","_getCurrentFootXY","footLeanDistance","stepThreshold","canLiftLeg","fullStepDistance","colorDarkenAmount","legColor","hip","_projectZ","_getCurrentHipXY","_getCurrentHipZ","_getCurrentHipOrigin","knee","_getCurrentKneeXY","_getCurrentKneeZ","_getCurrentKneeOrigin","foot","_getCurrentFootZ","_getCurrentFootOrigin","quadraticCurveTo","lineCap","xy","z","origin","fromMagnitudeAndAngle","heading","timeRemaining","predictedPosition","velocity","predictedHeading","headingVelocity","_getPredictedIdealFootXYAtEndOfOfStep","legMaxLift","liftAmount","kneeMaxOut","hipCenter","MAX_SPEED","ACCELERATION","DECELERATION","generateRandomPalConfig","bodHeight","legLength","bodBob","eyeY","eyeX","eyeRadius","mouthThickness","mouthY","mouthWidth","mouthSmile","buttTop","buttBottom","buttThickness","saturate","rotate","legPairs","Pal","_heading","_speed","_headingVelocity","_target","legConfig","_legs","leg","enoughLegsOnFloor","l","log","anyStepsJustStarted","some","stepProgress","dtMilliseconds","angleToTarget","angleBetween","angleDelta","lastHeading","distance","_accelerate","lastPosition","lastSpeed","avgSpeed","setLineDash","ellipse","bod","_drawBod","clip","faceX","_makeButtLine","buttX","avgLift","sum","bob","_headingVec","MIN_TRAVELLER_COMFORTABLE_RADIUS","MAX_TRAVELLER_COMFORTABLE_RADIUS","MIN_TRAVELLER_SAFE_RADIUS","MAX_TRAVELLER_SAFE_RADIUS","NEARBY_RADIUS","INITIAL_SPEED","ROAD_END_OVERSHOOT","PATIENCE","FORCE_ACCELERATE_DURATION","ENTER_DURATION","EXIT_DURATION","enterEase","exitEase","StopReasons","STOPPED_FOR_DESTINATION","STOPPED_FOR_TRAFFIC_IN_FRONT","STOPPED_FOR_TRAFFIC_NEARBY","Traveller","comfortableRadius","safeRadius","_currentRoad","_destination","_positionOnCurrentRoad","_age","_exitStartedAt","_stoppedTime","_forceAccelerateTimer","_stopReason","_stoppedFor","_pal","_pickDestination","removeTraveller","currentRoad","_move","_getPal","updateWithPosition","getAngleAtPosition","_debugDraw","_checkAtEndOfRoad","_checkExit","predictedStopPoint","predictedStopArea","fillText","round","timeToStop","getPointAtPosition","overshoot","overshootAngle","potentialDestinations","_shouldDecelerate","predictedStopPosition","_getPredictedStopPositionIfDecelerating","nextTravellerOnRoad","safeStopAheadPosition","intersection","outgoingTraveller","getClosestOutgoingTraveller","outgoingTravellerPosition","incomingTraveller","getClosestIncomingTraveller","incomingTravellerPosition","_shouldDecelerateForNearbyTravellers","travellerFinder","stopArea","stopPoint","nextStopPoint","potentialNextPredictedStopPoint","searchArea","withRadius","nearbyTravellers","findTravellersInCircle","otherStopArea","otherStopPoint","intersectsCircle","otherNextStopPoint","currentStopDistance","nextStopDistance","approachAmount","otherApproachAmount","isStopped","_forceAcceleration","isStoppedFor","acceleration","_isExiting","_onReachEndOfCurrentRoad","_onExit","consumeTraveller","_onReachDestination","_exit","stopPosition","_getPredictedPointForPosition","Path","points","lastPoint","shift","addSegment","addSegments","constrained","soFar","lastSegment","equals","newSegments","usableRadius","withinCircle","compacted","Junction","_intersectionsByAngle","_incomingIntersections","_outgoingIntersections","_roads","_intersectionAtAngle","connectTo","isIncoming","isOutgoing","_intersections","_addRoad","angleStr","_createIntersectionAtAngle","getVisualConnectionPointAtAngle","keys","ROAD_DASH_COLOR","ROAD_DASH_WIDTH","ROAD_IDEAL_DASH","ROAD_IDEAL_DASH_LENGTH","ROAD_DASH_SPEED","Road","autoRound","isNode","_currentTravellers","angleFrom","angleTo","_path","straightThroughPoints","connectToRoadAtAngle","nextTraveller","onAddedToRoad","removeTravellerAtIndex","onRemovedFromRoad","bestDistance","lineJoin","dashScale","_getLineDashScale","dashLength","lineDashOffset","wholeDashCount","wholeDashLength","roundDownLength","roundUpLength","CLOCK_RADIUS","Producer","_onTimerEnd","didEmitTraveller","_attemptEmitTraveller","sampleOutgoing","canAddTravellerAtStart","DebugOverlay","canvas","debugCanvas","sceneCtx","drawImage","ROUND","scenario1","producer1","consumer1","consumer2","junction1","scenario2","producer","junction","consumer3","scenario3","northConsumer","middleConsumer","southConsumer","eastProducer","westProducer","mainJunction","eastProducerSplit","southConsumerJoin","scenario4","producer2","producer3","scenario5","pal","root","getElementById","setTarget","offsetX","offsetY","scenario6","addTo","consumer","go","devicePixelRatio","appendTo","addSystem","hot","dispose","location","reload","accept"],"mappings":";AAAA;;;;;;;AAOA;;AAEA;ACRA;;ACAA;AECO,IAAMwH,sBAAO,SAAPA,IAAO,CAACrH,CAAD,EAAYC,CAAZ,EAAuBqH,CAAvB;ADDpB,ACCoB,SAClBtH,IAAIsH,KAAKrH,IAAID,CAAT,CADc;AAAA,CAAb;;AAGA,IAAMuH,8BAAW,SAAXA,QAAW,CACtBC,EADsB,EAEtBC,EAFsB,EAGtBC,EAHsB,EAItBC,EAJsB,EAKtBL,CALsB;AHAxB,AEHA,ACGwB,IHAlBtG,KGMOqG,GHNC,CAAd,CGMkBK,EAAL,EAASC,EAAT,EAAa,CAACL,IAAIE,EAAL,KAAYC,KAAKD,EAAjB,CAAb,CANW;AHCxB,AGDwB,CAAjB,GHCDvG,QAAQ,CAAd;ADcA,ACbA,ACHA,AIHA,ADAA,ILmBIpB,ACbEqB,ACHA0E,YFgBU,GCbK,CAArB,MDayB9F,AEhBG,EAA5B,OFgBgB,EAAoBC,MAApB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,CAAlC,EAAqCC,CAArC,EAAwCC,CAAxC,EAA2CC,CAA3C,EAA8C;AAC5D,AIRK,IAAMuH,EJQP,iBAAyB,YAA7B,CIRuB,CJQoB,QIRhCA,SAAY,CAACC,GAAD,EAAcC,GAAd,EAA2BR,CAA3B;AJSrB,AEhBJ,AKLA,AHYyB,IHJJnG,ACHf0E,IFgBE9F,CIRNgI,KAAKF,GAAL,CAASC,CJQQxH,AEhBE,EEQnB,EAAcyH,KJQZ,AEhBElC,AEQeiC,EJQS,CIRd,CAASD,GAAT,EAAcP,CAAd,CAAd,CFRmB,AEOI,CFPH1G,IAAD,EAA0B;AFiBzC,ACHJ,ACbA,AEMuB,CAAlB,KFND,CAACgF,KFgBK,IAAIrF,CCHFa,IDGF,CAAU,ACHpB,EAA2BC,GCbFT,GDazB,CCbK,CDa+D,ACbpE,EAAgCgF,oBAAoBhF,IAApB,IAA4B,CAA5B,KFgBtB,CAAN;AACD,ACJiE,ACZpE,AGNF,AGDA,SNOYA,IAAV,SAAkBgF,oBAAoBhF,IAApB,GAAlB;AFiBC,AEhBF,AEOM,CFVP,GEUaoH,0BAAS,SAATA,MAAS,CAACH,GAAD,EAAcC,GAAd;AShBtB,AHEA,ATkBsE,AMlBtE,AJEA,AMHA,ADCA,AJcsB,IDZhB1B,IFgBuC9E,CGH3C+F,KAAKQ,GAAL,EHGoE,AGH1DC,GDbY,ACatB,EAAeC,KAAKC,EDbhB5B,ICaW,EAAf,CADoB,QDZE,CAACC,KAAD,sCFgB2C,CAAG;AYnBtE,Ab0BE,AGvBsB,ACYF,CAAf,GFLcP,EFgBf,CAAChG,EGtBLuG,OHsBA,EAAgB,CGtBNC,QAAV,IAAsBD,UAAU,CAACC,QADX;AUFxB,Ab0BI,ACRkE,AUnBtE,ARGwB,AEDxB,AIDA,CNEA,GGDqByE,INyBbvK,KAAJ;AazBJ,Ab0BI,AW3BJ,APiBO,IAAMyH,IJULlI,WAAWO,SAAf,EAA0B,MIVL,SAAZ2H,SAAY,CAACJ,GAAD,EAAcC,GAAd;ASfzB,Ab0BMtH,AU3BN,ATiBsE,AUjB/D,AHAP,AJgByB,IOhBZsN,ARIQvH,KFMnBhF,AGOAwG,KJUY,AIVPG,IJUW3H,ACVoD,CGApE,CAAWyH,CHPgB,EDiBf,ACVwD,CDW9D,GIXYH,GAAP,EOjBU,APiBEC,GAAZ,CAAX,CADuB,IOhBZgG,OAAU,CAACC,MAAD,wCX6Bf,6DAFM,CAAR;AazBN,Ab6BK,ACdiE,AUjB/C,APgBE,CAAlB,IJUH,ICfFvM,ACFAuE,ASTmD,EX+B1C,GEtBIF,KDQuD,AUjBhByB,CAAD,EVW7B,KAM8C,ACR1C,KAAK9D,WAAL,AIHxBwH,CJGyCpK,IAA9B,CIFXqK,KACAC,OACAC,QACM;AOPV,Ab6BM,AYjCN,AXkBsE,AUjBjB,ALWjD,AGXJ,SRYE1J,ACFAuE,CFsBQvF,AMrBAW,CKVR2M,MX+Be,CAAC/N,AEtBO,ASThB,ALUSkL,CNqBD,EAAIjL,ACfiD,CDerD,AW/BJqH,CAAX,CX+BsBpH,ACpBQ,AUZqB,CXgCpC,CMrBS8K,CNqBC7K,CAAV,ACfqD,EDexCC,AMrB1B,CNqBa,EAAgBC,CAAhB,CAAX;Aa5BN,Ab6BM,AChBgE,AUjBjB,ALYjD,AFOG,GOnBgB,CPmBV8H,KHNXzG,CDoBQhB,AMrBAW,SAAS8J,ENqBE,CAAf,GChBgE,GAJlC,AKDRF,EFON,CEPlB,CLKkE,OGEzD9C,MDdqB9B,ACcZ,CAAI+B,GAAJ,GDd2B5B,cAAsB;AUAvE,Ab6BMhG,ACjBgE,AUjB/C,ARMnB,AGOA,AFMkB,COnBf,GJCcgL,AFGA5B,KJUnBjI,AGKwCyG,CENhCgD,GFMoCnD,CJehC,IAAI1H,EMrBEyK,GNqBN,ACjBwD,AGEd,CJgBhDjL,AIhBsC,EHLO,AGKMqI,CENhChH,CLI2C,EGEPiH,CJgBhD1H,AG5BT,CAACyF,GGM4B,CAA/B,AFM0C,CAAJ,CJgBlC,AIhBc,CJgBC,KAAf,EAAsB,EG5BPC,KAAhB,CADH,EAEE,EH2BmC,6CG7BrC;AUAJ,Ab6B2C,AClB2B,AMZpE,ADSE,AFKkB,CAAf,QHJLzE,CKDQyJ,KNqBwC5K,EClBoB,CMZxDkG,CAAZ,CP8BqDjG,ACpB3B,AKDRuK,CCTKrE,CNY6C,AMZpE,EAAkC6E,EDSVpK,INqBwB,AO9BhD,CP8ByC,CO9BS,GDSjB,CAA/B;AOPJ,Ab4BqE,AYnCrE,ADGO,AJE6C,AJMhD,AGIA,AGbJ,IECa2M,GXgCL,CADM,CAAR,CGvBItI,GGIC,IAAIqF,CIbA,APSG,GGIP,CAASK,OAAT,CKZW,CLYOC,OAAlB,CKZE2C,ARQiB,CAAZ,AGIoB5M,EHJLoF,GQRX,ALYX,CKZYc,CAAD,ALYuBjG,MAAlC,CHJO,AGId,CHJA;AUHJ,Ab6BMb,AUlCJ4M,ATcoE,AUdhD,ARSlB,AGID,AFKI,IAAM9E,IMnBE,CT+KbzG,AU9K2CyF,CAAvB,ARSZb,EHyBE7F,ECpB0D,EDoBhE,AGzBU,CFqKN,ED5IS,MK7BLiJ,CKLL5D,CT8KEnE,ES/KI,EACyB6E,ARSpB,CQVL,ANmBQ,CCboB,CKLQC,CADpC,EAC+C6E,APSlC,CFqKlB,AErKM,EHyBV,AC4I6B,AErKJpF,CCSlBiC,EMnBE,EAC+D,GPSvC9B,ACShB,CAAI4B,GAAJ,QDTP,CAAZ;AUHJ,Ab6BK,AUlCDnC,AT8KAnE,ACrKA,ASVkB,AJGlB,AJOA,AEJA,ADYmB,COlBhB,GHAcgK,IECbJ,CHECJ,AHgBPlD,CCbMyB,CKLJ,CAAQlD,CAAR,APSO,ACSL4B,EMlBS3B,AHEX,CGFA,CPSWL,COTGkF,AHEA,CHgBhB,CH4JgB3J,AG5JL,EDTF,CAAU4D,COTjB,EAAsB,CAAtB,CPSO,AEJekE,CKLG,CPSDnD,ACSdzG,CFTA,AESD,EMlBoB+H,APStB,ACSM9H,CH4Jee,AErK5B,ACSS,CCbT,CHIegF,CGJgB,CKLG2F,CT8KlC,AM5K0BhF,CGF1B,AHEc,EGFwB,ARStC,AKP6BC,CAAf,CLOS,AKPvB,GGFA,oBRSA;AWHJ,AHLG,AT8KC,ACrKA,AKPA,AJOD,AEJG,AGJJ,AJgBW,GMpBE,MHKN6E,CN4KC1J,CG7Ja/B,EFRZ,AEQcwI,EGfrB,AFGS,GHIGxC,AKPEyF,CFGD7B,ADYM,CAAS3J,CAAT,CAAV,EFRT,AKPA,EFGS,CAAY4J,CJyKG,GO7KdnE,GP6KmBhE,AIzKDiF,CAAnB,CGJX,CHIiCkD,CGJLpD,GAA5B,EAA0C,CHIFG,CAA7B,CAAP,IJyKF;AYxKJ,Ab6BIpG,AYvCJ,AFKEkN,AT8KE,ACrKD,ASVI,AJGJ,ADUD,ADPG,AIRL,ADG4C,AJgB/B,GAAX,COjBWO,CPiBuB,CMpBrB,CNoBb,CADqB,EJmBbpN,AC4IFkB,MKlKMqJ,KNsBV,CUlCGnF,CJYL,CNsBsB,CAApB,AUtCW,AJgBgBoF,CNMb,CAgBS,AUlCWqC,GT8KV,AU/KN,EDHP,AJgBb,EIZgD,AT8K9C,AKlK4CtM,ELkKd,GU/KrB6M,ALaX,EAA6D5M,IKbzC,CAAC6M,CAAD,ALapB,EAA6E;AON/E,Ab6BI,AUlCAR,AT8KE,AUhLgB,ALayD,ADN3E,ADSmB,CAAhB,QOhBsCQ,CXoCnC1N,AUlCDmN,ALKD7D,EJyKI9H,CUhLqCkM,CAA3B,CXoClB,CK7BUnE,EKLV,CAAcpF,ILKV,CJyKgB7C,AIzKF+H,EKLlB,CAAsB,GLKlB,CAAJ,EAA2B,IKLJ+D,CT8KW7L,MS9KZ,EAAU2C,CAAV,EAAgB,IT8KpC;AYxKN,Ab6BG,AUlCG,AT8KA,ACrKJ,ASZoB,ANQhB,AGNF,CGFG,QHEEqH,CECCrH,ET8KA,CO/KN,GECY,AFDA,CECV,CT8KSzC,CS9KIgE,IAAIqE,IT8KjB,ES9Ka,AT8KO,CS9KIsD,GLKd,EGNUlI,GECYA,APQXW,EEHJwD,AGNP,EAAiBpD,CECH,CAAcE,CAAzB,APQuBD,AKT1B,CAAZ,CEC2CkH,ALKjB,CAAP,CAAP,GFGiD,EEH5B,CKLkBlI,KAAR,CAAckB,CAA1C,ALKb,EAAyC,4BAAzC;AQCN,Ab6BC,AUlCK,AT8KE,AEtKJ,AGEA,ADLE,AGNF1D,AJgBG,CJPP,GIOauF,KELJ6C,CIVCsC,APQFxH,CKTG4F,IFWP,CLoKS9J,CO/KT,CFWc,AEXA,IP+KV,AO/KJ,CP+KgBF,GEtKIqE,ACOJ,KDPZ,CFsKA,AEtKJ,CEHY,CFGgB,CCOnBoC,IELiB2C,AFKV,CCVGvB,ADUCzB,GAAJ,GELF,CDLY,CCKSiD,ADLhB,CAAP,KAAqB,CCKnB,CAAd,EIVE,EAA4C,ELK5C,EAAyC,4BAAzC;AQCN,ADbA,AFQQpF,AT8KA,AUjLD,ARWD,AGEF,ADLE,AGNH,AJeiB,IOjBPkI,KLaJ/M,AFKPgH,GMfUmC,CNeN1G,CELF,CHFS,AEHA,CJyKA1B,CKpKIf,CIVT,CAAWwM,APQFrH,AEHAqD,ADUf,CH+JM,AG/JK,CH+JK9H,CKpKd,EHFS,CAAU4E,CEHV,CKLcD,ALKFoD,GKLN,AHaPI,AJLC,ACOCvB,CMfiB/B,CAAvB,AT8KA,AUjLe,ARWO,EORIiH,ALKF,ADUnB,CCVY,CAAZ,ADUOlJ,CGFO,AHEd,CCVuBmF,GMRvBsE,CDG6B1H,GAAR,ALKS,CKLGG,ALKV,CKL5B,ALKK,CMRU,ANQjB,CMRkBsH,CAAD,GRWmBxH,MAAMC,CAAlB,EAAqBD,MAAME,CAAN,GAAU,CAA/B,CAAjB,CAAP;AUFN,Ab6BA9F,AUlCO,AT8KA,AUlLgB,AJiBnB,AJLC,AGED,ADLC,ADSQ,OJoBNC,AUpCD,ECFwCmN,ALcrC7M,CCGC4E,CHCgBmC,EMdb,CVkCb,AWtCmD,CLc/C,AFI0BhE,CGDYhC,CPqBzBvC,AUlCA+N,CCJsCM,ALcrC7M,CKd4B,CAAvB,EPkBG,CGDuB6I,AHCXxB,CEJlC,ENwBJ,CIpB0B,MAAsBhE,CAAnC,CGDT,4BGbS,EAA0C;AGMvD,ADdA,AFSQuB,AT8KH,AUnLkB,AJkBnBA,ADHD,ADLC,ADQS,COlBN,EPkBL,CADkB,MGCZuE,AFRAX,EKLI6B,GAAJ,CACEkC,ILIQ,CEQd,GGZcR,AHYInD,CLPfhE,GGDkB4D,CEQrB,CGZM,ARK4B/H,CQLbwJ,GLIP,GKJR,CAAsB3E,CADxB,EAEEiH,ERIiD,CAAE,KQJ3CR,MAAR,CAAe9B,MAAf,CAAsB1E,CAFxB,EAGEgH,QAAQR,CLEOvD,KKFf,CAAe4B,ALEP,MKLV,CLK4B,CKD1BmC,OLCN,CKDcV,CLC4B,SKLtC,EAKEU,QAAQT,QALV,EAMES,QAAQN,eANV;AGMR,AHEO,AHMHrH,AJLA,AEHE,ADMc,CAAb,MMbM,GHeLwE,AJLEjE,GODG,MHMT,GAAgB,CAAhB,EJLqBE,MAAME,CAAN,CEHT,EFGmBF,KEHZmD,CFGkBlD,CAAN,GAAUN,EEHfM,CAAd,EFGZ,GEHgC,QAA9B,EAAwC,2BAAxC;AQCN,AHEQ,ATuKJ,ACxKF,ASXK,AJkBHV,AJLA,AEHE,IMVOmI,AFJQ/B,MFsBblC,ENiKCzI,CEtKE6E,CODG,IAAIhG,CHMd,AJLasG,IODH,KTuKV,GAAwB/E,EIzKZ,GMVS,GHsBJmK,CHZEpC,EJyKnB,CEtKO,CAA+BxD,CQb7B+H,ENUiBxH,CAAd,CFGL,AKSqC,ELTCJ,EEHb,CMVX,CAAC0H,CDY4BN,ACZ7B,KNUnB,EFGK,AEHmC,CKEgBC,APC1D,QODkD,EAAxC,CAAN,eLFF;AQCN,AHEO,ATuKH,AUpLqB,AJmBrB5H,AJLD,AEHG,AGYF,AJLG,IAAM0C,KOjBXuF,CJkBMxC,ACIEQ,EP6JDzK,CUnLH,AJkBF,CAAQ,CFRC,CMVX,GAAU,AJkBK6J,AFRA1B,IMVDsE,CVmLZ,AUnLQ,CJkBA,CAAYvH,AFRX,CJyKWvE,AUnLJ8L,AJkBhB,AFRqBrE,CMVvB,CJkByB,EIlBH,CAAC,AHsBO,AJLT,COjBC,CVmLOxH,AMjKCiJ,AFRA3E,CAAnB,CMVgB,CAAC,ANUKkD,GEQR,CIlBO,AJkBKjD,AHD1B+B,CGCT,EAAsC,AFRA/B,CMVJsH,ANUzB,CMVgB,ANUvB,EDOiB,CGCwBzC,AHDpBrD,COjBgB8F,CADlB,EHuBiB,CAAV,CP6JR,AMjKpB,CNiKiD,AO7JR,CDJU,CAAnD,EAAsDnG,CCIRM,CP6JQxG,GMjKK8J,ENiKvC,AMjKkC,ACI1B,CP6J5B,CO7JsDM,CDJU,CAAhE,EAAmE,ICIvC,CDJ5B,ACIA;AKXJ,AHEK,ATuKF,AUrLsB,AJoBrBhG,AFRC,AGYD,AJLF,COnBK,IDFH,ATUkE,KMY9DyE,GCIG,GDJP,ECIYjG,KAAL,CAAW0H,OFOD,MEPV,CAAyBD,mBAAzB,EAA8CE,GAA9C,CAAkD,KAAK1G,KAAvD,CAAP;AKXJ,AHEG,AHMA,ADWC,ADnBA,AGYD,AJPoB,YCLb,IAAInF,KAAJ,CAAU,ECmBA,KAAKyK,IAArB,AGlCAsB,UHkC8B,KAAKrB,GAAnC,AGjCAsB,EJcM,CAAN,SCmB6C,AGhC7CC,KHgCkDtB,KAAlD,CG/ByC,SH+BmB,KAAKC,MAAjE;AOlBJ,AHrBe,ATgBX,AUNG,ARgBL,AGcC,ADnBA,AIZCoB,ALgBmB,IOfV8B,KVMJ/L,AGWP8F,IAAIvE,GHXF,CEUU7D,CAAZ,CFViBuC,AQPFgK,ALkBf,CDDwBtM,ACCb,CDDX,EAAoC,IDP7BwE,CDHmBjC,IUNL,AFDOuF,EPUN,CAAE,EOVS4D,EAA/B,EROe,AUNN0C,CVM6B,MUNnB,CAACH,CVML,AUNI,CVMnB;AYMJ,AZLI,AUPmB,ARgBe,AMhBlC,ALiBS,SHVJ5L,AUPqC4L,CFApCzB,CLiBW/D,EOjB6BwF,CAAJ,EVO1C,CAAa9M,AUPqC8M,CAA/B,CPiBM,GHVzB,CQPmB5B,ALiBV,EHVYlL,QAAQE,OQPOoL,IROpC,gBQPmB,CAAsCH,UAAtC,CAAnB;AIaJ,AZLI,AURmB,AFCnB,ALgBS,COjBN,EPiBL,CAFqB,KHPdjK,CQPCqK,MRON,CAAatL,KQPKiL,CROlB,GAAsBjL,SAASC,IQPIoL,EFmBhBd,ACIQ,KPhB3B,IMY6C,SEnB3B,CAAsCY,SAAtC,CAAlB;AIaJ,AZLI,AMYA,AJJA,AKQA,AJVmB,CAAhB,QHNElK,AEQAoD,IIIE,ACIA,CLRP,EFRA,CAAajD,AEQAzC,CAAb,AKQYyE,IPhBZ,CAAmBrD,AOgBZ,CAAWyH,IPhBlB,COgBA,CFOQoB,CLvBsB7I,GCEV,AKWlB,ENbF,CKuBuB,ECVhBkK,GFToBtB,GESzB,CAAYrD,CAAZ,GAAgBoB,GFT4Bc,EESvBG,GAAL,CAAS4C,CFT2C,MESpD,IAAoB,KAAKH,MADpC,EAEL,KAAKH,MAAL,CAAY1E,CAAZ,GAAgBmB,KAAKgB,GAAL,CAAS6C,OAAT,IAAoB,KAAKH,MAFpC,CAAP;AMNJ,AZLI,ACEA,ASVG,AJuBJ,AJPC,AGeA,ADnBA,AIXA,ADuBD,IIrBkB0E,ADHR7B,KVQJhM,AEQAmE,CGeCR,ADnBAU,AIXAiG,ENeN,CDNO,CAAP,AGEU5C,CFIC/J,CFRX,AEQA,AGesCmC,CLvBzBK,KAAb,CAAmBpB,AKuB0B6I,GDnBvBnC,EIXE,CROxB,EII2BiB,CJJI3H,EURX,ANYE,CCmBtB,ADnB+BwH,GJJ/B,EIIsB,CAAtB,EMZSyF,IFEPhC,IEFkB,CAAC4B,CAAD,WFED5C,MADK,EAEtBmB,UAFsB,EAGtBI,6BAHsB,CAGQJ,UAHR,CAAxB;AIaJ,AZLI,ACED,ASXqB,ARiBrB,AGeCxG,ADnBA,AIRA,ALYG,IAAM2C,KHRJlG,AUTsC,CLgCvC8H,ADnBE5D,AIRAkG,CELuCoB,CAAF,CVS3C,CIIUlE,CMbuCkE,CVSrC,AUT+B,GAAUA,CAAV,CVS1B5L,AKuBjB,EKhCyD,CAArC,ALgCF2H,EDnBIlC,CIRC,CRIX,CAAapF,AKuBzB,EDnB2BoG,GAAL,CAASF,IJJnB,CAAwB,AIId,CAAtB,GJJY,CAAZ,CQHEyD,ALWwB,SAAjB1D,QKXU0C,MADI,ALYG,CAACzC,CKVzB8D,ILUwB,KKZH,EAGrBE,6BAHqB,CAGSF,SAHT,CAAvB;AIUJ,AZLI,AUVoB,ALiCpB1G,ADnBA,ADG0B,COjBvB,QVUErD,AGQPmF,CEeM0C,GDnBG,CDIJ3B,GCJQc,ECmBX,AFfF,CAAW7B,CHRT,CKuBgB,CAAhB,CLvBoBzG,AIIb,CAAYqF,ADILoC,CCJP,EAAenC,ADIb,CCJF,ADIWiC,CCJlB,IDIS,CAAX,EAA4Bd,CHRQ9G,IGQH+H,CHR/B,EGQ0B,CAASH,KAAT,CAA5B,CAD4B;ASD9B,ADFE,ANoBE5C,ADnBD,AILC,ALO0B,CAAvB,SEiBCsF,AGxBAqB,UHwBJ,CAAe,EMVA,CJ3BI,EFqCC5B,AGxBA9D,IHwBpB,EAA0B,ECTdR,GDSmBuE,GAA/B,CCTqC,CDSD,CGxBhC,CAAkC6B,GHwBG1L,KAAzC,EAAgD,IGxB5C,CHwBiDC,AGxBrD,EAAuD,IHwBvD;AOjBJ,ADOmB,AXZf,AUVG,AJwBH,ADSD,AGxBG,ADbF,IGISkN,ICaT5H,CASe,AXZV9D,IMcE6D,AC5BA,ECaE,EGITC,CASe,AJ1BHoF,CD4BCF,GC5BN,CAAUnG,GNebQ,EMfJ,CD4BO,CNdP,AMcwB,GLbA,EKaKoF,GIxBP,GJwBf,IAAgC,EIxB9BiD,EFSwB9B,CFeWhB,MAA5C,CIxBsB,CAACyC,CAAD,AFSb,EAAoCvB,SAApC,CAAP;AION,ADMmB,AXXhB,ACCCzG,ASZsB,AJyBvB,AEfE,ADbF,AJqBI,IAAM+C,IQJTrC,CAQe,ADrBjBsH,GTWQ/H,CSXJ,GAAJ,CCaES,CAQe,CDrBP,CTWR,CAAe,ESXHsH,CAAJ,CTWR,ESXgBA,CAAR,GAAYA,CAAtB,GAA0B,CAACA,ER6CTpH,EQ7Ca,CAAL,CPiBA,GD4Be,CQ7CJ,IAAIoH,CAAJ,APiB1BjF,GOjBkC,CAAnB,KAAyB,GPiBzB,COjB6BiF,APiB5BhF,COjBwB,GAAQ,APiBjC,COjBA,CPiBeC,GOjBuB,CADxC,EPkBE;ASD5B,ADKmB,AVTf,ASbsB,AR+CtB,AEhCF,ADG0B,COlBrB,OCeHiH,CRIFpI,IFNS,ACkCC,GC5BHkB,CFNL,CCkCanC,CSzBE,APPLJ,CAAZ,EAAuBC,CAAvB,ADIcuC,ECJoB,EOAhCiH,CTgCQ,CC5BV,EAAsBlH,CD4BOpC,MSzBZ,ATyBkBC,AC5BNoC,MAA7B,CAD0B,GD6BjB,IAAyC,KAAK9C,KAAL,KAAeS,MAAMT,KAArE;AU7BJ,ADImB,AVRhB,ACkCA,AEjCiC,AIHhC,ALMwB,CAArB,OQFHgK,EHJMtD,OGUS,QANfsD,IHJyBzD,KGUV,ANaHlG,OAAyB,IGvBIsG,uBAAhB,CACvBF,cADuB,CAAzB;AIOJ,ADGmB,ADnBZ,ALiCH,AGrBA,IEZS0B,ICcT8B,EHFMrD,GHqBC,EACLvG,CMfa,KNePC,CAAN,EMpBF2J,AJlBiB,CFsCL,IGtBa7D,CHsBRzB,EMfF,ADnBI,ELkCjB,GCValE,CDWbJ,EGvBkCmF,CEZ3B2C,GJwB8B,ADW/B7H,CAAN,GKnCiB,ALmCP,CKnCQuH,CAAD,AFYM,CAAsBnB,EHuB9B7B,KADf,IAEAxE,KGxBuB,CHwBjBE,AGxBR,CHwBE,GAAU,KAAKqE,GAFf,IAGAvE,MAAME,CAAN,GAAU,KAAKuE,MAJV,CAAP;AOhBJ,ADEmB,ADnBI,AJyBnB,ADcD,AD1BC,AGhBA,AJqBG,IAAM/B,IQHTa,CDf0CiE,ANarCvH,CAAL,GOMe,ADnB+BuH,AJyBvC,AFZEvH,AGhBF,CGGmC,ANa1C,GMbkDuH,CAAR,AJyB9B5C,AC5BAS,GIkBZ9B,ADfsDiE,CAAnC,AHHZ,CAAUzH,CD4BV,CAAYoF,CKNJ,AJtBf,GPyCO/I,MMbA,CAAuBgE,ENaD,IMbOwE,AHPZ,MGOjB,GHPElC,CGOqC,KAAKqC,MAAL,AHPtB,CAACvC,EGOmCpC,EHPpC,EAAeqC,EGO2BsC,IHP1C,EGOxB;AMPJ,ADCmB,AXoBf3I,AUvCmB,AJ0BpB,AFZC,AIAA,ADhBD,AJoByB,COlBrB,QNcE8D,ADKPqC,CCLE,GAASrC,CJyBD7D,AIzBR,QDKWmG,GHoBX,CAAoB,AGpBtB,EAAmBA,GQHjBqH,AXuByBjO,IC1BZ4D,AEMWiD,GHoBxB,GWpBe,ARAjB,CFN6B,AEKH,QD6BIzC,OAAuB;AU5BvD,ADAmB,AXqBhB,AC1BC,ACkCA,AEjCD,AIAC,ALGwB,CAArB,OQFH6J,GVFKvK,ECkCEO,IDlCP,CUKe,CT6BFS,CDlCCd,KAAd,WCkCO,CAAwB,KAAKe,kBAA7B,EAAiDP,KAAjD,CAAP;AU5BJ,ADDmB,AVJhB,ASbI,AR+CJ,AMjCC,IEdS+H,4BCeT+B,EDfoB,CLuCP1J,OAAsB,CMtBpB,ADjBN2H,QAAW,CAACP,CAAD;AEmBxB,ADFmB,ADjBK,ALwCpB,AGzBA,ALIG,IAAM7E,IQJTmH,CDf2C,IAAI,ALwCxC,EKxC0CtC,ALyC/C,CKzC6C,GCiBhC,ADjBsCA,CAAN,ALyCxChD,GKzCkDgD,CAAV,AHF5B,CF2CjB,EKzC2DA,CAAzC,ALyCLpH,AFtBE,GGOR2E,GDeYT,GFtBZ3B,CEsBP,CCf+B,GDgB/B,AFvBe,CAAIC,IEuBd0B,CFvBU,EAAmBzB,CEuBlC,CFvBe,EEuBHzC,AFvB+C,MEuBzCoE,KADlB,IAEA,KAAKC,MAAL,GAAcrE,MAAMmE,GAFpB,IAGA,KAAKA,GAAL,GAAWnE,MAAMqE,MAJZ,CAAP;AOpBJ,ADHmB,ADjBK,AJ2BpB,ADmBD,AE/CC,AJqBF,COpBK,KPoBC3B,OGOG,AC5BA,EJqBM,EGOFgC,AHPb,CIrBc/E,GAAL,CAASW,CD4BT,CAAW,KAAKkE,CNaftI,AOzCD,CAAkB,ID4BP,CAAY2D,AC5BAjB,CIiB9B+K,ALWO,EAA0B,EC5B1B,CPyC0C,AOzCjD,ED4BsCnF,MAAL,CAAY1E,CAAtC,CKVQ,CLUiC6E,MAAzC,CAAP;AMNJ,ADJmB,AXwBf,AMbD,AEXC,ADjBD,AJqBD,OAAK,CQLHgF,GRKO/L,EKJA,ELII,CAAb,CKJa2H,CLIG3H,IAAI4E,EQJH,GRIjB,EAA2B5E,EHoBf1B,AIdO,CDNnB,EKJS,ALIuB,CKH5B+J,MPHiB,CD0BE9J,EEQC6D,OAAuB,AMhCtC,CRwBP,CQtBEmG,CRsB+B,WWzBd,IHCZ,CGAQ,CHGbR,MRqBF,KQrBarF,QAAX,CAAoB2F,gBAApB,EAAsClE,KAHjC,EAIL8D,UAAUvF,QAAV,CAAmB2F,gBAAnB,EAAqClE,KAJhC,CAAP;AIKJ,AZoBI,AC1BA,ASdG,ARgDH,AEtBA,AILD,ALDCW,IOpBSkF,OTcJ1I,AEMEvC,EHqBLP,EGrBF,CAAYqG,CFNZ,EEMe7E,CHqBNvB,AC3BK,AEMF,CAAZ,GFNA,EGYkB,GJehB,CAAiBC,CEQjB,AEvBqBuD,CFuBpB,AEvBH,KFuBQO,CQjDc,IN0BO,EJe3B,CAAgC7D,EUzCzBqL,AN0ByB9H,CAAlC,CJeE,CACE,IEOD,CFPMjF,AEOiBmF,EQjDJ,CAACoH,CAAD,CRiDnB,CADH,EAEE,MFTA,EAEElL,WAAWC,UAFb,KAGK,CAAC,CAAC,EEIT,GFJctB,cAAL,CAAoBqB,WAAWC,UAA/B,CAJT;AYnBJ,ADNmB,AX+BhB,AC/BA,ASfuB,AN2BvB,ADNA,SOpBDiL,IAAI,GAAJ,GAAU,IAAIA,CAAJ,ALAS,GKADA,CAAR,GAAYA,CAAZ,GAAgBA,CAA1B,GAA8B,IAAI,IAAI,EAAEA,CAAN,GAAUA,CAAV,GAAcA,CAAd,GAAkBA,CAD5B;AEsB1B,AFtB0B,ARqDtB,AGnDA,AFoBF,COtBK,QPsBE1E,CD+BD7C,GGnDG,EFoBT,GEpBc2E,EHmDZ,IIlE0B,ADenB,AEFY,CFEA3E,CAAZ,GAAgB,KAAKvF,KAAL,GAAa,CAApC;AOqBJ,ADRmB,AL3Bf,AJkEA,AGnDD,AGwBD,AD1BE,AJsBH,CANM,SDqCC,GIlEG,ACaA,ELqDE2F,EIlEEgB,CCaCtD,IDbIkH,CCaT,CDbA,ACaW3B,CLqDlB,EIlEqB,AJkEA,EM1BrBsB,GFxC0BG,CCa1B,EC0BF,EAEEA,CFzCA,KEuCF,EAGEyB,UAHF,EAIEC,QAJF,EAKE;AIRJ,AFrBO,AJdJ,AJkEGxG,AMvBF,AD9BD,IGCUgI,QRoDH,KAAKxH,SAAT,IFPsBnE,AInBhBiH,EM1BW,KN0BI,IM1Bd0E,CV6CwC,MU7C9B,CAACT,CAAD;AEsBvB,ADRI,AXgCA,AU9CmB,ARqDlB,AE1BD,ADLG,IAAMzE,GD6BT,EQnD0CyE,CCcrCwC,AXgCC9P,AInBAqF,GM3BwCiI,ARqDvC,CQrDmC,EN2BJ9L,CObtC,AXgCaY,AU9CqCkL,ARqDvCpH,CQrD+B,ECc3B,CDduCoH,CAAZ,CRqDzBnH,AE1B4BmD,EM3BagE,CAAvC,EV8CKjL,IGxBL,CD+BZ,EAAsB,AE1B7B,GJmBA,GWhC0B0D,ARQjB8C,CQRM,EAAc7C,CAAd,EAAiBwJ,CRQb,CAAIhI,GAAJ,MQRJ,CAAf;ACSJ,ADRI,AXgCA,AU/CmB,ARsDjBzB,AE1BFV,AIEA,ALRmB,COtBhB,QF8BEmH,ALPPhF,CQROuI,APaDxG,EF0BErD,CC9BL4C,EKMD,CLPF,CACO,CD8BOvC,AMxBE,CJFd,GObA,ENbgB,CMaIiJ,ETuClB,IFPQxP,IAAV,CWhCA,CXgCgB,EQjBS0K,OAAO3E,CAAlB,EAAqB2E,OAAO1E,CAA5B,EAA+B6E,CRiB7C,KQjBc,CAAd;AINJ,ADRI,ATuCC,AGpDD,AD0BA,AIEA,ALPK,OD6BE,EMtBFyB,CGfA0D,APaCxG,CDLO,CAAC1B,CD+BP,AGpDA,GFqBM,CCKA,CH/CI5C,AIqBLwF,AFqBQvD,CKOpB,CGfA,CPaiB3F,CIEC8K,CGfAmD,ARQOrI,CGpCH,ADef,AEFW,CFECpB,CAAZ,ED0BiByD,CC1BD,AFqBH,EAAP,CQRb,AHeA,ALPK,EErBuBhJ,ED0B5B,IC1BuB,GAAc,CAArC;AOsBJ,ADRI,AXgCA,AU/CG,AJbH,AJmEEsF,AGpDH,AD0BCV,AIEA,AD9BA,AJsBK,GADP,COrBW2I,CPuBR3J,IKOIkI,ALTP,CQNO0D,AXgCCvN,AInBFgH,ADLE,ED+BA,CInEC,AJmEA,AKtDA,GH4BP,CAAW,AIEX,CNwBY9D,AKtDA/B,CIeZ,AXgCe,CQjBC0I,ALPTnN,CAAD,CQRWsQ,APaD3J,CAAL,AG5BJ,AJuBG1G,CHwBU0B,AO/CFkH,AJuBZ,ECKcuB,EIEpB,CD9BA,CIeA,ATuCO,AE1BP,EExCE,AFwCwB,CF0BCtD,CQtDP,GJZbwE,AFwCwB1E,CJmBhB,AInBW,CJmBShG,AEOF4F,EE1BE4D,EJmBpB,AU/CNwE,AJZP,CN2DF,AM3DcjI,CADP,AFyCP,EEvCE,IIWkB,ARsDd,CQtDeuH,AJXd5C,CIWa,GRsD8BxE,EIjEhD,CAAYF,CAFP,EAGL,AJgEsDP,KIhEjDoF,AJgE2C,GAAc,GIhE9D,EJgEmEpF,CIhErD,CAHT,EAIL,CJ+DI,CAAJ,GI/DKoF,MAAL,GAAc,CAJT,CAAP;AMqCJ,ADRI,AXgCA,AUhDoB,AJPrB,AJ8DE,AE1BDxF,AIEA/C,AD9BD,AJsBO,SOvBqC,CCgBtC4N,APaDvG,CIEGyB,ALRShM,EOvB+B,APuB7B,CAAF,COvBiCkO,CCgBjD,ADhB+C,AN6B/C,CAAW,AIEX,CAAc,ALRSjO,CQPTgK,ADhBuCiE,CAAN,APuBtB,CAAF,CCMPvH,AIEhB,ALRM,COvBmDuH,AN6B9C,CObX,ADhB+C,EN6B3B9D,CM7ByC8D,CAAd,EN6B/C,CJmBU5K,AUhDuD4K,CAA7C,AN6BM,KJmB1B,AInB+BtH,CAAL,GAASwD,IAAnC,MJmB4BxJ,IAA5B;AYvBJ,ADRI,AXgCA,AUjDoB,AN8BpBqF,AIED,ALTO,COvBH,EPqBL,EAGGyD,GAHH,CAGO,CQPAqH,APaDzG,MAAJ,CAAW,EObX,GAAiB,APaD3D,CObhB,APaW,GAASyD,IAApB,CJoBE9G,CIpBwB,KAAKsD,CAAL,GAASwD,IAAnC,IJoBoBpH,UADpB,cAEYpC,IAFZ;AYvBJ,ADRI,ATuCA,AE1BAqF,ADPK,UQNA+K,ATuCCpK,AE1BF2D,CDPUZ,GDiCJ,EE1BV,CAAW,ADPS,CAAN,CDiCC5C,ACjCV,EQNL,CPagBJ,CAAL,CObQ4J,ANdD,ED2BEnG,GF0BV,CE1BV,EF2BItD,AE3BsB,EOb1B,GPa+BF,CF2BrBP,AE3BgB,GAAS+D,EF2B/B,EE3BJ,CF2BkBzD,CAAd,GAAkBG,MAAMN,YADlB,GAEN,KAAKH,KAAL,GAAaM,CAAb,GAAiB,KAAKH,YAF1B;AU9BJ,ADRI,AXmCA,AUpDG,ALGH,AD2BAP,ADRK,GAHP,COnBW4I,APkBU,MQDdoC,APaDzG,GJsBGlH,AKjDA,KAAKgI,CLiDZ,EItBA,CObA,ENdO,AD2BWrB,CObEuG,ANdD7J,CAAZ,GAAgB,AD2BvB,KC3B4BvF,EMc5B,EDjBsB,CLGC,GAAa,CAApC,IKHSyN,UAAa,CAACX,CAAD;AE0B1B,ADRI,AXmCD,AUrDuB,AR2DtB,AGvDD,AD2BCjI,ADbmB,CAAhB,QOjBLiI,CCiBOgD,APaDzG,GM9BF,AR0DK,GQ1DT,GAAU,AN8BR,GAAgBrI,EM9BH8L,CAAL,ECiBR,CDjBiBA,CAAT,AN8Be7D,CObEoG,EDjBJvC,CAAb,CR0DWvH,CAAZ,CQ1DkBuH,CAAjB,AR0DctH,AE5BtB,CF4BO,CAAP,CQ1D6BsH,CAA/B,GAAmC,ECiBjC,EDjBqC,KAAK,EAAEA,CAAP,GAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuBA,CADtC;AE2B1B,ADnBmB,ADRO,AR4DvB,AE5BCjI,CMhCG,SNgCCyE,MAAJ,uBIwBiBuB,UAA2B;AI5BhD,ADTG,APcA,AIwBC,UAAMpD,QFtFW2C,AEsFH,ADpFGM,oBCqFf,CADY,EAEZ,KAAKzD,MAFO,EAGZ,KAAK6E,UAHO,EAIZ,KAAKA,UAAL,GAAkB,KAAKG,eAJX,EAKZ,qBAAU,CAAV,EAAa,KAAKhF,MAAlB,EAA0B4D,QAA1B,CALY,CAAd;AI5BJ,AF1BO,AF6DH,IE7DS6C,SF6DF,KAAK1B,MH1DO,AG0DZ,CAAYV,KRTXpJ,AUpDU,QVoDW,CUpDpBwL,MAAS,AF6DX,CE7DYZ,AF6DqBrF,CE7DtB,IF6DX,CAAP;AIlCJ,AZ0BI,AUrDkB,ALIlB,AG0DD,SE7DD,CAAC,CAAD,ELGS,CKHJd,ILGSuD,CKHJtC,GAAL,CAASkF,CRDO,AGIZ,CAAYtH,CAAZ,CKHS,CAAJ,CLGW,ELkDrB,CAAC,AUrDkBmB,ELGO1G,GLkDpBkC,AUrDkBoI,EAAL,CLGE,EKHQ,CLGM,CAArC,CKHY,CVqDT,AUrDA,CVqDerI,AUrDpB,GAAyC,CADrB,GVsDOE,WAAtB,CADH,EAEE,sCAFF;AYzBJ,AZ6BI,AUzDkB,ARClB,AGID,CKLI,UVyDE7B,EExDE,KAAK8E,GAAL,CAASW,GFwDhB,CAAoB9D,IExDb,CAAkB,EFwDEE,AIzBhBsD,GF/BmBpB,IE+BK,CF/B5B,CAAP,EFwDoB,CAAmBzC,UAAvC,IAAqDK,MAArD;AY5BJ,AZ6BI,AExDD,AE+BC,WJyBK1B,EIzBEkF,MJyBP,AIzBaM,CJyBC3D,IAAd,CAAmBH,EWxCdtB,APeE,CAAe,GJyBtB,CIzBO,EAAqB6G,IOfJ,CPexB;AQHJ,ADXI,AXwCAvF,AUxDG,AN+BJ,IM/BUyL,MCgBHoC,GXwCCzN,aWxCe1B,EXwCtB,CAAuB,GUxDJ,CVwDnB,KWxCkC,CH6CjBiK,EE7DR8C,ECgB8B8B,KDhBpB,CAAC3C,AF6DuB,CE7DxB,ECgBnB;ACYJ,ADXI,AXwCD,AUzDoB,AF8DnB,SE9D0CnG,CF8DtC,CG7CCgJ,GDjB0ChI,CF8DtCuE,EE9DiC,CAASY,ECiBnD,EDjBuD,CCiBtCnG,ADjBkC,IAASA,CCiBtCF,EH6CtB,CG7CiB,CAAS,ADjBuC8D,AF8DvC,CG7CT,CDjB2C,CCiB/B,EDjByC,GCiBpCoF,ADjBiB,CAAT,CAAvB,OCiBU,GAAiBI,aAA7B,CAAjB;ACYJ,ADXI,ADlBmB,AF+DjB,CE/DC,UCkBET,IH8CD,GG9CJ,CAAajF,KTjBK,CSiBlB,GAAsB,OH+ChB,CADF,EAEE,KAAKpD,CG/CT,KAAKsI,AH6CH,EAGE,KAAKzD,KGjDW,EAEpB,GH4CE,EG5CG0D,AHgDD,KAAK1D,KGlDW,EAGpB,GH+CI,EG/CC8D,CH+CiB,KAAK3D,KG/C3B,CAAiB,KAAK0D,IH2CpB,EAKE,GGhDJ,CAHoB,CAAtB,gBHmDgB,CAAV,EAAa,KAAK1I,MAAlB,EAA0B4D,QAA1B,CALF,IAOAlE,KAAK4D,EAAL,GAAU,CARZ;AIjCN,AV5BI,AMuEC,OAXD,MN5DO,AMuEA,CNvEC,KAAKlF,GAAL,CAASG,CAAT,GAAa,IE+BZE,CF/BiBpB,KAAL,CAAWkB,AE+BC,CF/B1B,KAA+B,KAAKH,GAAL,CAASE,CAAT,GAAa,KAAKjB,KAAL,CAAWiB,CAAvD,CAAP;AU6BJ,ADPI,ADtBG,ARCJ,AE+BC,AIwCE,IExEOqI,MCsBL,GPUGlI,EOVEiK,AHmDL,GH/GahG,CDsEJ3D,KOVT,GPUG,CAAe,COVC,CAAnB,EPUG,CJyBIpE,CWnCiB,APUAgH,CI0CtB,CE1Ee,AFyEjB,EAEE,CGrD2BkH,IPUjC,AI2CW7I,ERlBgC,AUzDlC2G,IFyEL,EAGE,GE5Ee,CAACd,CCsBtB,ADtBqB,AF4EVhB,EGtDyC,QHmDhD,EAIE,KAAKA,UAAL,GAAkB,KAAKG,eAJzB,EAKE,qBAAU,CAAV,EAAa,KAAKhF,MAAlB,EAA0B4D,QAA1B,CALF,IAOAlE,KAAK4D,EAAL,GAAU,CARZ;AI1CN,ADPM,AXmCF,AU1DqB,ANiCtB,AIiDE,SEjFH,CVyDQrI,AUzDP,CAAD,ECsBS8N,CDtBJ,CAAL,IVyDiB,AUzDPrJ,ECsBN,GAAgBsJ,AXmCE1N,AUzDPqF,GAAL,CAASjB,KVyDF,AUzDO4D,CVyDQ3I,CWnC5B,ADtBe,CCsBa,EDtBHkL,CAAnB,CCsBN,GDtB8B,CVyDjB,AUzDjB,CVyDE,AU1DqB;AE+BzB,ADPK,AXmCD5K,AU3DqB,AFmFtB,CEnFI,YV2DIM,qBAAP,CAA6B,IAA7B;AY3BJ,ADPG,AXmCC,aAAO,KAAKjC,MEzDa,QFyDlB,CAAoBqB,WAAWC,UAA/B,CAAP;AY3BJ,AZ4BI,AU1DG,ARCH,IQDSgM,OV0DJrN,EEzDE,KAAK8D,CFyDZ,GAAgB,CEzDT,CAAWkB,AE+BhBE,CF/BK,EFyDclF,CEzDC,EQDJ,CNgCS,EF/BA8D,EFyDX,CAAc7B,EEzDR,CQDboL,ARCwBtI,CAAX,EFyDN,CAAqB,AEzDA,EQDnB,CAACuH,CAAD,CRCwB7H,KAA1C;AU8BJ,AZ2ByC,AU1DnB,AREnB,AE+BC,SMhCF6H,INgCS,CMhCJ,CVyDuCpK,AUzD5C,ENgCa8F,CMhCJ,CAAT,EVyDkDtG,CUzDrCyE,ENgCJ,AIZY,CJYA,EJyBkB,AUzDrBmH,GAAL,ANgCavI,CMhCJ,ANgCD,CMhCR,EAAY,ANgCKG,MMhCCoH,ANgCKvH,CAA3B,EAA8B,CMhCJ,CAAV,CAAZ,CADO,CNiCwBC,CAAL,GAASE,MAAMF,CAA7C,CAAP;AQDJ,AZ0ByC,AU1DnB,ANkCnB,AIZC,CEtBG,MV0Da,CAAhB,KQpCO,KAAKwG,MAAL,CGEJnH,AHFgByG,KGEe,eHF3B,CAAiC,KAAKQ,UAAtC,CAAP;AIWJ,ADRIjH,AXkCD,AQpCA,UGEKkE,SAAJ;ACSJ,ADRI,ADvBG,IAAMgF,MCuBHmC,UAAU,ITtBQ,CSsBHL,ODvBF,KCuBH,CAAkB,GDvBzB9B,ECuB8B4B,KDvBpB,CAAC7C,CAAD,ECuBH,CAAhB;ACSJ,ADRIjI,ADxBmB,AREnB,SQDFiI,CCuBMqD,GTtBGnL,CQDJ,CAAL,GAAS,CCuBP,ADvBF,GCuBkB,ADvBL,CAAC2B,ICuBS+I,CDvBJ5B,CRCM,AE+BhBpI,EMhCK,CAAS,CCuBL,ADvBJ,CCuBgB0K,ATtBAnL,CQDJ,CAAC,ANgCO,EOThB,ADvBQ,CCuBSiL,ATtB1B,CAAP,CQD8BpD,CAAlB,CAAD,GCuBK,ADvBmB,CADhB,CCwBuBL,QAA1B,EAAhB;ACSJ,ADRI,ADzBmB,ARGpB,AE+BC,CMlCG,YNkCI,IAAIjE,OAAJ,AIZU,CJYE,IOTNwD,AXiCNrJ,CIxBiB4C,CAAL,GAASG,COT5B,CACEb,AXgCyB,GWjC3B,CPSkCU,COPhC,APOK,EAA8B,GOP9B+J,EPOmC9J,CAAL,GAASE,COP5C,CAAawE,IPOqC1E,CAA7C,COPL,APOF,COPsBD,CAFtB,EAGE,KAAK+J,OAAL,CAAapF,MAAb,CAAoB1E,CAHtB,EAIE,KAAK8J,OAAL,CAAajF,MAJf;ACSJ,ADHIxF,AX4BA,AIxBD,AIZC,UGQIwL,CX4BClQ,EQpCE,CGQP,IHRY6L,ERoCZ,CAAe3J,GQpCR,CRoCP,AQpCmBiJ,CRoCC3I,KAApB,cQpCO,CAAiC,KAAKoJ,QAAtC,CAAP;AIYJ,ADHG,AX4BCpJ,AUzDG,AFqBJ,IErBUqL,QVyDHpL,cAAN,CAAqB,IAArB,KUzDqB,SAAZoL,SAAY,CAAClB,CAAD,EAAuB;AEiChD,AZyBG,AUzDD,MAAIA,KAAK,CAAT,EAAY,OAAO,CAAP,ERCY;AUgC1B,AFhCE,ARCE,MQDEA,KAAK,CAAT,EAAY,OAAO,CAAP,INgCNvD,KF9BF,GE8B2B,EF9BtB5D,UADP,EAEE,gDAFF;AUgCJ,AFhCE,ARIE,AE4BA,MMhCE,CAACmH,KAAK,CRID,AE4BA,GMhCK,CAAV,ANgCStE,CF5BClE,GQJK,CAAnB,CRIS,CQJa,ARIFiB,AE4BX,AIZqB,CNhB5B,AE4BmB,KAAKA,CMhCG,ANgCR,GAASgE,CMhCG,CAAJ,GAAQ5C,CNgC5B,EAA6B,EMhCImH,GAAL,ANgCMtI,CMhCG,ANgCR,CMhCD,EAAY,ANgCF+D,MMhCQuD,ANgC9C,CAAP,GMhCyD,CAAV,CAAZ,CAAf;AEiCxB,AFhCE,ARIC,AE4BA,AIZC,SEpBK,IAAI,AFoBFnG,CEpBF,IAAS,AFoBFe,CEpBGf,IFoBR,CEpBamH,AFqBlBnH,GErBa,CAAS,CAAT,AFqBRgB,EErBoB,CAAC,AFqB1B,CAAS,CErBgB,CVwDd9E,EUxDoB,CFqBjBkJ,CErBmBe,CAApB,CAAD,GAA0B,CAAnC,CAAP,AFqBa,ERmC4BhK,CQnCZ,KAAKgJ,IRmC8B,MQnC5D,CADK,EAELnF,KAAKiB,GAAL,CAAS,KAAKmE,QAAL,GAAgB,KAAKD,UAA9B,CAFK,CAAP;AIaJ,AZwBI,AUxDH,AFuBE,CE5BI,SV6DG/I,QAAQ,KAAK5C,SAAL,CAAe6C,OAAf,CAAuBH,WAAvB,CAAd;AYvBJ,AZwBI,kBW5FiBkM,aX4FPhM,UAAU,CAAC,CAArB,EAAwB,8BAAxB;AYvBJ,AFhCO,IAAMkL,oBRGsB,MQHb,IN+BNrF,KM/BHqF,MAAS,AN+BsB,CM/BrBnB,CAAD;AEiCtB,AZwBI,AUzDkB,ARIlB,AE4BA,SMhCyC,CAAC,ARItC,CFqDC7J,AUzDoC,ENgClC,EMhCwC0D,ARItChB,GE4BG9F,EMhCwC4J,GNgC7C,CMhCwC,ANgC7Bb,AITC,CEvBsC,ARIzD,CFqDA,CAAqB7F,AErDA,EQJwC+J,GVyD7D,CUzDiEA,CVyDrChK,AUzDmB,ARInB,CAAP,CE4BS,EMhCwC,CAA7B,CAAvB,CNgCiB8F,CJyBnC,QIzBO,CAAP;AQEJ,AZwBG,AU1DmB,ARKlB,AE4BD,AITC,CExBG,SFwBGuD,GNnBC,CAAC,CAAD,GAAK,KAAKlH,AMmBE0B,KNnBnB,AMmBwByF,GAAL,CAAS,KAAKH,eAAd,KAAkCtF,KAAK4D,EAAL,GAAU,CAA5C,CAAnB;AIWJ,AV7BG,AMmBC,aAAO,KAAKyB,MAAL,CAAYK,aAAZ,GAA4BF,UAAnC;AIWJ,AFlCO,AFwBJ,IExBU+B,4BAAU,SAAVA,OAAU,CAACpB,CAAD;AEmCvB,AFnCuB,SAAuBnG,KAAK8C,IAAL,CAAU,IAAI,CAACqD,IAAIA,CNiC7C,GMjCiD,CAAT,CV0D5CjK,GU1D0DiK,CAA5B,CAAvB,QV0DmBhK,UAAuB;AYtBjE,AZuBI,AU3DmB,ANkCnB,CMlCG,SV2DGC,GIzBC,IAAIyF,CJyBG,KAAKrI,CIzBZ,CAAY,CAAC,KAAKqF,CJyBX,AIzBP,CJyBsBxC,CIzBD,KAAKuC,CJyBnB,AIzBP,CJyB8B1C,AIzBrC,WJyBc,CAAd;AYtBJ,AZuBI,AIzBD,wBIT8B,ORkCnBE,UAAU,CAAC,CAArB,EAAwB,8BAAxB;AYtBJ,AFpCO,AFyBH,IEzBSoL,SFyBF,KAAKlC,eAAL,GEzBc,AFyBS,CAA9B,QEzBSkC,SAAY,CAACrB,CAAD,EAAuB;AEqChD,AZuBI,AU3DF,AFyBC,MEzBG,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Ad,CAAf;;AOPP,AHCA;;ADCA,AEAA,ACDA,IJIqBkG;;AMLrB;;ADIA,AJAA,AMFA,AHAA,ICEMmE,KLEJlE,QKFiB,GLEE;AKDnBmE,SLEAlE,IKHiB,OLGE,gBKFPmE,WADK,EACqBC,eADrB,EACyD;AACxE,ACLJ,AEDA,ANGA,IAAMjC,IGGIkC,WHHW,MGGM,IAAI5C,GAAJ,CAAQ0C,WHHnC,CGG+CG,oBAAZ,EAAR,CAAvB;AACAD,mBAAerK,GAAf,CAAmBmK,WAAnB;AIPJ,AJQI,AJHJ,AMFA,AHCA,IFCqB/B,yBGIfiC,eAAeE,GAAf,CAAmBH,eAAnB,CADF,EAEE,+BAFF;AAIA,AHHF,QGGQI,YAAY,IAAIC,CHHV,EGGM,EAAlB;AACA,AJPJ,AKJA,AEAA,ANOgB,AQThB,IPMqBnC,IEOXoC,YAAY,ILJhBzE,AKIoBwE,GAAJ,EAAlB,GLJgBvE,WAAgC;AAChD,AGKF,cHLUA,MGKEqC,GHLV,KGKF,EAA4BC,WAA5B,EAAuD;AMdzD,ATUM,AKIFgC,AJRJ,AKJA,AJMgB,ACMyC,ACVzD,SFEE5Q,IFIS,CKIG+Q,CHNE,EGMZ,CAAcR,AHRO,IAET,OGMZ,EAA2B,CAA3B,YLJ4BvE,EAA1B;AACE,AOZR,ePYaO,WAAL,CAAiBF,MAAjB;AWZR,ACAA,AZaQ,AKIJ,AGdJ,AOHA,AbUI,ACKqD,AOdzD,SPSEwC,EEOS4B,IFF8C,GALhC,EAKgC,MEE/BrM,GHNpB,CGMF,EAA4B,EHNrB5G,WAAL,KAAqBgR,WADvB,EAEE,wDAFF;AFIE,AKG0B,AHH5B,ACCqD,SAJvDM,IHGS,UGC8C,GAJ9B,CAI8B,EDAnD,KGGuBuB,AHHlB7S,UFDqByO,CKIQ+E,AHHlC,CAAiB/T,CFDjB,SECA,KAAgCsR,SGGT,CACrBkC,EHLJ,EAEE,UGEuB,EAErBG,SAFqB,CADG,8CHH5B;ASbJ,AFCA,ATaQ,AKEwB,AJThC,AKHA,AOLA,ANKA,ALaG,ACHsD,AObzD,SPUE7B,CEMYjB,KLHDtB,AKEmB,OFFyB,GAHf,CHGlC,CAAiBH,EGAgC,IHAjD,OKGMyB,IADkB;ALDxB,AKCwB,AEXhC,IAAMkF,MFYc/B,IEZJ,CFWgB,EEXhC,uBFYoBA,IADY;AOhBhC,AZgBM,ACRN,AOLA,ADGA,AQNA,AZeI,SAAKtC,QAAL,GAAgBA,QAAhB;AHEI,AKIF8B,AEdN,AJSI,SAAKzB,OHCK,IAAIzU,CKIG2W,AFLjB,GAAoBtC,CHCV,EKIR,CAAsBd,KAAtB,EFLF,wBHCmDxB,SAAzC,CAAN;AWfR,AFAA,ATOI,AaTJ,ANQA,AJSG,AOfH,AIFA,+BZmBoB;AFAjB,AKIG,AEdN,ALWI,UGGMwB,UAAS0C,WHHL,IGGR,CHHaxQ,CGGiB,KHHhC,EAAuB,mBAAvB;AUnBJ,APuBQ,AGpBR,ADMA,AQTA,AboBI,aAAO,EGGIqQ,GHHCrQ,MAAZ,EGGsBmR,kBAAX,CACLL,SADK,EAELP,WAFK,EAGLC,eAHK,CAAP;AAKD,AElBP,ALWG;ASnBH,AFCA,AIFA,ANUA,AGRA,IJKqB2B,AFHAnC,0BDaT/L,EHEEoI,KGFa,GHEC;AACxB,AKSEgE,ACjBJ,ACDF,AJOI,WHEKlE,AGFAwC,MEWQyC,ELTb,AGFA,CHEc3T,AGFAwR,IHEd,AMRUtO,CNQS0L,AMRrB,EAAuBzL,CAAvB,CHME,CGNgC,AHMRqD,CHExB,GKSE,CAA6B6J,AFX/B,KEWE,EAAmC8C,SAAnC,EAA8CK,KAA9C,EAAoDH,SAApD;AO7BN,AHGA,ATkBG,AKSE,AClB+B,AETpC,ADSA,AQZA,AZmBI,UAAI,KAAK/B,aAAT,EAAwB,MDGV7O,OAAc;AKThC,ALUI,ACHE,WDGGF,ECHE+O,IDGP,GAAc7O,KAAd,CCHE,CAAmBvB,OAAnB,CAA2B;AQlBjC,AFEA,AJ4BI,ACpBgC,AOXpC,ALcA,ADDA,ALUG,ACJ8B,AOjBjC,SJKE4O,CDwBQ,IAAIhT,GFZkC2U,EEYtC,CAAU,ECpBgB,GAJlB,IHY0CD,CGRxB,QHQY,CAAsBhL,CEY5D,CAAN,GFZ4C,CAAf;AEa9B,ACrBiC,ACGpC,AJKiC,GEnBd,MCSjBwJ,AHUI,cGR8B,GAFF,MNapBpB,QAAc,eMXQ;AMVpC,AZsBI,AKWF2E,AJxBF,AYTA,ALcA,ADAA,AQfA,AbyBE,ACLG,IFVCvE,ODaGL,QAAL,CAAc3O,GCbO,CDarB,CAAmB4O,EKvBJ,AJUnB,IDaI,iCKYAgF,KAnCe,EAoCfC,KApCe,EAqCsB;ALbtC,AKcC,AC1BA,AHSD,QEiBKC,CC1BCtL,QAAL,ED0Be3F,CC1BC,OD0BhB,cC1B4BK,CAAZ,EAAeC,CAAf,CAAhB;AKVJ,AFIA,AJiCI,AJ3BJ,AKCG,AOXH,ANeA,INLM8L,AMKAuG,AOlBeiR,ITwCb1S,KJ3BO,CMKCzP,CNLhB,II2BmB,AEtBE4D,EAAL,EFsBZ,CEtBsB,CAA1B;ANJA,IAAMgH,2BAA2B,EAAjC;AWXA,APuCI0E,AJ3BJ,AMKA,AQlBA,IdaMzE,AMKAsG,MFsBIvU,OAAN,CAAc,CJ3BG,AMKA,ENLrB,MESS+D,CIJHwQ,KJIqB,CEkBD,GLfD,GOPJ,ELOGhT,OAAc;AFClC,AKeE,AEvBe,ALQjB,ACHA,AWnBF,MPcsBuF,IFuBZwL,AFlBFvQ,CDGDV,CKRY,CPQV,IKeQsR,AHff,CCHc,EILM7L,ALQN,GGeOgM,AFlBFzC,CDGnB,EGee,AEvBE,AOdL,CTqCalB,ILfX,AKeC,CAAb,GFlBY,CHGK3B,AGHazJ,AChBlBuN,IDgBA,CAAd,GHGO,CAAP,EInBoC;AOLxC,ACAA,AHKA,AToBG,AKeG,AJ3BN,AYbA,ANgBqB,ALSlB,ACHC,AWpBY,AVIZ,IHOEpD,ASJeqT,EHOW/M,IFwBtBlC,AFlBF,CAAC,AChBAf,IGUY,CJMPvB,EEkBI,EDlCd,CAAea,CCkCT,CExBsB2D,CJMvB,CAAchE,CEkBG8B,AJ3BE,CGPxB,CAAsBhB,CHO1B,GMGqB,EFwBasB,GChBftB,AFlBf,CDgBK,CAA4BvP,GEkB/B,EAAsC,AFlBnC,CAAL,EAAyC,CGEJ,MHFW,KAAP;AEmBrC6Q,AJ3BR,AKWI,ACTiB,AHTlB,IHOGzE,EMEqCsG,IDSjChB,ICTW,KFyBFnB,EJ3BI,CMEoBmC,CFyBnC,CJ3BR,AKWwBnD,MCTH,IDSamC,WAA9B;ADiBIZ,AChBJ,AOzBJ,ANeqB,AQjBrB,Ab4BE,ACHE,AWtBY,SPedzP,CJOM,IIPD8C,CJOMiK,GIPX,CFyBiBhB,AEzBPrI,IFyBJ,KEzBaA,CJOb,EGEM2M,CHFgB1D,EIPlB,GAAkB,CAACjJ,GJOQ2J,CGEnC,EAAuB,GCTa+D,OJOpC,EIP0B,AJOwB,KIPA1N,SAAS0N,ODS3D,ECT0B,CAA5B,IACAC,QAFmB;AF2Bd,AJ3BP,AMAqB,AJSf,CITN,GNAMrG,SESK8B,IFTQ,EESb,CAAY,KAAKC,IFTA9B,OAAJ,CDWM,ACXM,EESzB,CFTa,EAAiBC,CESKvK,COfqB,GPexD,KFTa,CAA4B,GAA5B,CAAnB;AUfA,ACCA,AZ0BI,AKgBC,AJ3BL,AKWI,AHFE,AOhBwD,AIR9C,IbeVwK,CIqBF,KCVMmF,AQ7BR8R,Gd6BS,AGFArV,GWxBK,EbeI,CalBUvS,ER6BT,MHFf,CW3BiCC,EbkBf2Q,CDWN,KAAKf,ACXH,AGRFlM,CHQa,GAAX,ASPcigB,CTOlC,AalB8B,CR6BE7P,AQ7BqB,CVUrB,CJmBrB,CAAP,CUlB0D,IIXhC,CAGd,ER0BK,CAAuB,IAAvB,EAA6B8B,WAA7B,CAAjB;ANCD,ACXH,AKWI,AHFE,AOjB4B+N,AIRlB,AVQZ,IHQE/S,AMyBeiG,MO3CnBpT,GAEc,CJQ8C,CPiBjD,CW3BqB,EbkBd,CESd,GW3BiCkkB,MAAL,CAAYxnB,CbkBtBqQ,CKYlB,KAAK0E,CLZS,CAAY,CalBE,CAAuB,CbkBrC,EAAiBlG,CalBH,CAElB,EbgBI,CAAsB,GAAtB,CAApB,GKYM,CAAyB8G,QAAzB,CAAkCD,QAAlC,CADF,EAEE,yCAFF,mBFnBsBnS,KAAtB;ACoCA,AQ3CJ,ALWA,AD0CE,AQxDF,AZ4BK,AOlByD,ANC1D,WAAKgQ,OG6CKoD,EH7CV,GG6CF,AH7CmB,EG6CUC,IFVjB/B,EEUZ,EAAmDgC,AL5BtC/U,IGkBX,EAAoB,CHlBM,CAAE,GK4B9B,EAAwE,AH5CpE,aCkCF,EDlCOsR,sBAAL,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC7P,MAAM9E,KAAxC,EAA+C8E,MAAM7E,MAArD,CADe,EAEf;ACkCF,ACbA4U,AEnBJ,ADyC0E,AH3CpE,IHOe5C,OI2BV,EAAES,EDlCMmC,CEqBLsC,GDaKf,MDlCUvL,ECkClB,EAAkBgL,IDlCvB,ECkC6BM,ECb/B,MDaO,EAAP;AM7CJ,ACCA,AP6CG,ACbCc,AEnBJ,ANcE,ACAE,AOnBA,AINAjW,AVQE,GChBa,IDcE,CAAjB,EDmBMiT,AOnBF+Q,CINGgE,IR8BE5R,OIxBO,AINhB,GXyBqB,AWzBA,KXyBKlD,CWzBA6U,GR8B1B,CAA6BlU,EQ9B7B,EJMwBiC,IAAR,CJwBhB,AIxB6BiO,EPmBR,EAArB,GOnBoCE,KAAP,EAAb,CAAhB;ALsCFjP,ACbC,ACoBuE,AG5CtE,AINAhV,AVSD,SGqCDqX,CGxCQ/L,CINCxD,MJMM,ELfE,EKeEgc,CH4CqD,COlDtE,EP8CsB,AGxCT,CH4CyD,AOlDhD,CJMtB,KIN2BjgB,GAA3B,aT4CA6N,IArDe,EAsDf8C,SAtDe,EAuDfK,IAvDe,EAwDfH,SAxDe,EAyDf;AACAhD,AJ3BF,AYxBF,ALcA,ADsC0E,AQvD1E,AZ+BI,AW9BY,STqDP4D,AEFPgC,CJrBMrE,SIwBkE,CN5B5D1O,CAAZ,CMyBqB,CNzBEC,AM4BiD,AJxBrD,CFJnB,AEIM,EFJiE,AEIjD2O,EEuBpB,CAAyB5Q,GFvBrB,CAAuB+D,GEuB3B,CAAiC,AFvB7B,CAAJ,EAAkC,OAAO,IAAP,EEuBO;AI1D7C,AJ2DM,AJ5BmE,AOTzE,ADqC0E,AJvBtE,AOnBAyd,AIPD,QbqBiC7S,CM0BlCqG,CFEUhC,AFvBJtC,GOnBG3L,GTc8D,ASdrE,CAAW,CVhBMwI,GK0DE0F,EFvBF,CAAb,EEuBoBC,AFvBJtC,EEuBlB,AEAoE,GAF1C,CAE0C,AJvBlE,CAAuB7M,COnBRwP,GPmBf,CAAJ,AOnBA,EPmBkC,AOnBTvT,OPmBgB,AOnBzC,CAAiC,GPmBC,cOnBQ,sBTcS8N,gBAAkB;AI6BnE,AGrCN,ALcI,AOnBE/E,UL0CMoK,AFvBJzC,GOnBGiR,UPmBU,AOnBf,CPmBE,AOnBc,CL0CK1P,CFvBHrB,MDHV9Q,ACGN,CAAuBiE,EEuBM+O,ADxCpB,EDiBT,CEuBmB,AFvBvB,CEuBqCE,AH1BZ,CAAE,ACGO,GGIuC,IDmBlD,AFvBkB,CEuBvC,GFvBgC,OOnBQyO,SAAxB,EAAmC1f,KAAnC,CAAhB;ADdN,AJyDM,AJ9BmE,AKUI,AEjB7E,ADoCI,AJtBA,AOnBE0f,ANCW,SGwCRxM,CFCG7B,ACpBWnE,AHHfyB,KIsBJ,EDnByE,CCmB3DiE,EGzCA5S,GHyCd,AJtBiB,CAAb,COnBF,CPmBkB6O,EEuBM0B,IFvBtB,CAAuBvO,EEuBMkP,EFvB7B,CAAJ,EEuBsCI,AFvBJ,OAAO,IAAP,eEuBhC,sBCpB6C,IAAInE,GAAJ,EAA0B;ADqBvE,AGrCN,ADoCI,ALzBF,AQhBG,OAHD,EH4CKgG,CFCC/B,MEDN,GAAeyB,MAAf,CFCsB,IAAhB,IAAwBxB,mBAAmBD,YAA/C,EAA6D;AAC3DlB,AJhCiE,AKWrEhD,AEhBJ,ADoCI,AJtBA,ACnBA,SGyCKkG,CHzCC5T,EDmBA,EGEEkG,EHFE7L,CGEV,CDqBcwW,ACrBF,AFrBE,GC0CV,AEDJ,AJtBM,CEuBYY,ACrBlB,AHFgB,CCnBGvG,CGyCCoI,MFChB,CD1CU,CC0CczB,CD1C5B,EGyCA,COlDc7R,OX4BR,AW5BsB,CX4B5B,GEuBI;AIrDR,AJsDQ4Q,ACrBJ,AEhBJ,ADoCI,AQzDJ,AZmCG,AOnBC,AITA,AVSA,IWhBEyT,KRyDGxQ,EHzCA7D,CWhBK,CTqCH,AIrBAxI,CKhBX,GLgBI,CL0CcqJ,CEDd,CHzCA,CC0CI,AD1CWtB,CC0CGkC,AEDAuB,IHzClB,GEsBE,CDoBE,EAAwBtB,GEDG2B,CFC3B,KEDc,CAAlB,MDlBI,KAAK9F,cAAL,CAAoBrB,QAApB,CAA6B1I,GAA7B,CAAiC,iDQhCfxD,KAAtB;ALFJ,AJsDO,AJlCkE,AKchC,AEjBzC,ADoCI,AGzCD,AITC,AVSAA,SGyCK8T,CNxCPzG,CaVO4W,CVSChU,GEuBAyB,EQhCN,CAAYxW,ERgCDsV,ACkBX,AHzCA,CAAe/R,EHQsD,AMiClDuU,AOlDnB,GbUc,AaVMhT,EVSpB,CAAuB,CHQ8C,EajB3C9E,IPkDMmY,COlDZ,GRgCd,AQhC4BrT,CRgCF0N,CCkBb,IAAuB2F,AOlDFjY,AVSR,EEuB1B,CAD+B,ICmBY2Y,IOlDjD,KPkDA;AEpDJ,AJsDK,AJnCoE,AKchC,AEhBzC,ADoCI,AOlDA,AVSE,IKZAsG,CJ8CF,ECbI,CADF,CADK,ACsBFrG,CNrCP1G,AKeE,CQ5BK2W,CVSCpmB,IHO+D,CahBrE,CAAY1C,CbaG,CAGsD,CMkCrE,GAAoB6X,AOlDpB,GAAqBhT,IZsBZD,EYtBkB5E,GZsBaoT,CK4BP8E,EErDI,AKGhB,ELHzB,CPyB0D,AYtBlBrT,CPkDhB,AL5BoC,CK4BxD,IOlD0C5E,AVSxC,EAAgC,SUTlC;ALFJ,AJsDG,AJpCsE,AKmBtE,AEpBH,AOtBA,ADQI,AVSI,GCzBW,CIabkf,AMLFta,MdqBFuN,CabOxN,GAAL,CAAShF,EVSAiV,CWjBb,EDQI,CAAehQ,GbesD,EGNjE,CHI0B,AEczBwC,AW3BgBpH,AVSFiU,MDkBI,AClBnB,CAAsBxR,IUT1B,CLHqC,ALYjC,CUT8BmC,CLHtC,KKG4C5E,Ube6B,CafrE;ALFJ,AJsDE6V,AEDE,AL5BF,ACKE,AOjBF,AIVE/U,AVSG,IOlBc4kB,AFMfvG,KFqDGtG,CJvBCzT,GW3BC2D,KX2BO,AOjBwB,EL3BvB,CSiBf,EX2BmB2K,CW3BD,GPkDlB,COlDsB9O,EPkDI,EErDI,EAAlC,AKGgC5E,CPkDG8Y,AJvBjB,CAAkB1R,IAAlB,CAAd,IW3BA,KToDAoO,OEF0B,EFnEX,AEmEf,EFGApR,KAtEe,EAuEfuS,MAvEe,EAwET;AIzDV,AJ0DI,AJxCA,AODJ,ADoCI,AQ1DJ,AZmCI,AOlBsC,AITvC,AVSE,IKZCyI,AMLA8J,GXaF,CCkDI1W,CELCuG,CNnCA3J,AEYD,CAAC,IE4BMuH,CU/DG,AZmCJtD,CFZV,GAAe,CIwCf,GF5BK,CYnCH6V,AZmCiBrV,OM9BW,EAAlC,AMLkB,ER0Dd,CQ1DoB,CZmCf,CIuB8B,AJvBFzO,EFZPC,CAAX,EAAcC,AMmCWgT,AJvBnC,CFZU,AEYf,EFZgClH,AEYS,GIuBN,CAAYzG,ENnChC,CAAf,AEYgD,KIuBhD,AJvByC;ASrC7C,AHQA,AJ0DI,AJxCA,AYxBJ,ALuBA,ADoCG,AQ1DD,AXiBE,IKZE0U,AINAlO,EECEgY,IduBC/W,CIwCEoD,OU/DS,ENKE,CJ0DDH,EI1DrB,AINyB,CRgEd,CAAc7C,CQhEzB,GRgEW,CAAP,EAA4B,CJxC5B,GAA+B,KcvBF,GAAb,EAAkB,GAAlB,EAAuB,GTyCE,ASzCzB,CAAlB,EduB4CnN,CAAX,EAAcC,CAAd,EAAiB+L,wBAAjB,CAA/B;AUnBF,ACNF,APkEM,AJxCF,AKkBA,AEnBJ,AOtBE,AZmCE,AOpBsC,ANEvC,SMJDhF,CLkDUiK,AJxCHjE,AEYCxP,GGMC,IDsBQ2S,AKhDuB,CJ0B1B7K,AHNE,CFZd,CUpBUtF,ADUc,CCV1B,CVoBmB2M,ASRqB,CCZjB1M,ARgCFiO,CQhCrB,EAAkCpJ,ALsChC,CDsByBgM,EF5BX,CE4BC,AJxCf,AEY0BrT,CE4BG0P,CM5D/B,EAAkD,CN4DjC,CAAb,CF5BY,CAAoBpL,IAApB,CAAd;AQhCgD,ACLpD,AHQA,AJ0DM,AJ7CmE,AKuBtE,AO1CH,AECE,AZmCE,IStCEqf,AHQAnH,AINAlO,EECEgY,IZmCAvmB,GUpCO,EAAf,GECoB,ENKE,AN8BJ,CM9BlB,AN8BmB,CStCK,ATsCpB,EAAkB,MDRV8B,AYpBAokB,CTwDIzS,IAAV,AHpCqCnD,EU9BZtB,APkET,GSxD0B,CCPf,Ab2BwB,CAAE,CU9BnC,CAAc,AGGlB,EAAkB,CHHd,CAAxB,CGGoB,EAAuB,GV+DrC,CU/Dc,CAAlB;AHFF,AHQA,AJ0DMW,AJzCH,AYvBH,ALuBA,AOtBE,AZmCI,AOrBF,AIR4C,ILD1CiJ,AINApK,ALuBAoK,EOtBE4N,GLcCpE,ILiDI3O,AF5BF/C,GM9BO,ADiBA,ECjBlB,AJ0DkBqD,AGzClB,AOtBoB,CZmCd,CAAY5T,AOrBd,ELiDE,ASxDwB,IX4BxB,CAAmBH,AW5BUiN,IDRF,CVoC3B,CUpCN,CVoCgC,CAA1B,AW5BwB,EADkB,ICNf,GAAb,EAAkB,GAAlB,EAAuB,IAAvB,CAAlB;AJCkD,ACHpD,AHQA,AJ0DM,AQhEN,ALuBA,AOtBElL,AZmCI,AOrBH,AIT6C,ILA1C8W,AINA2M,ALuBA3M,IOtBE7W,EV+DE2N,ASzDE1S,GX6BD0T,EW9BqC,CCL9C,CAAe2V,ENKI,AJ0DF/kB,AQhEEgN,ALuBA,GCjBrB,ADiBA,EHyCM,EAAoB,AU/DxB,CR4EO4H,AJzCH,CUpCwB,ACOlBlZ,GDPZ,ERgEiCwW,AS1De,IT0DtB,CEaE,KH5DHxK,QAAkC;AQlB3D,AHQA,AJ0DK,AQhEL,ALuBA,ADsDI,AQ5EF,AZmCI,AW/B0C,AVY5C,IQnBE4a,AHQA/K,AINArK,ALuBAqK,MMjBa5b,CPuEVqY,EH5DE,EDmBE,CW/BmC,EVYhCxD,CKXK,AINA,ALuBA,ALaf,CM9BgB,CINtB,AN6EI,CK/EoB,AJyBxB,CIzBA,AHQA,CFuEsB,GH5DX,CAAeE,CUXP/U,MAD6B,UPyE1C,AH7DK,CG4DW,AH5DsB+L,EG8DtC,EDtC4C,EFxBvC,CG8DAyM,AH9DP,OG8DE,CAAaU,gBAFG,EAGhB,KAAKb,UAAL,GAAkBY,SAHF,CAAlB;AI7EgD,ACDpD,AHQA,AHmCI,ACwCA,AQhFFpU,AZmCG,ACnBF,IQnBG+hB,AHQApH,IMLE1a,EJPN8gB,AL+CMxO,ACwCA,KAAK+B,CQhFX,CAAekQ,KHHO,CAAC,CAAD,ALmFpB,CE3EuB,CGRC,AHQ5B,AHmCwB,ACwCA,AQhFtB,EHHsB,CAAxB,CN2CI,CK1CgD,GALgB,EAKhB;AAAA,ACApD,APkEI,ACvBA,AOzCJ,ALuBA,AOtBExkB,ADIEmkB,IFPEnC,ACEApV,ALuBAmG,IOtBE9S,EJPN+gB,ANsEQ,ACvBFxO,IDuBMnY,AGzCEwH,CMlBHuiB,CCJX,CAAeK,EV+DP,AGzCWhf,CHyCD,CQhEG,ALuBP,GKvBhB,ALuB0B,AMlBtB,CNkBJ,AMlBuB,CCJrB,GHH6Bsc,AN2CJ3hB,CQpCC6jB,EHPwB,GAJN,CGW1C,CRoCA,CQpCgC,CHXctW,AGW9C,EAAmC,CHXO,AGW1C,EHPgD,AGOVzS,CFPKmH,APkErC,CAAN,GS3DA,EFP2B,AEOkBlH,CFPK,AXuCpBuK,KahC9B,IbgCwD,CWvCL5L,CAAD,EAAIC,CAAJ;ADAF,ACAE,AHStD,AJ0DG,AJ3BC,AKIA,AOzCJ,ANiFI,ALlGiBuU,ACqDjB,AW/BA,ILCEsM,AINAjO,KDH0D7S,CDH9DmnB,AJuFM,AJ7CE9R,CGKDqC,AQpCAzR,CZrBAhD,CUa2DhD,AXwCzD,CWxC2C,AEQlD,CLCa,AF2EJwa,AO5EA1V,GbgCG2O,CQ/BhB,KKDI,CP4EA,ALjGkBa,ACoDG,AW/BF,CDLK,ACKxB,CP4EqB,CO5EC,CDL1B,ACKI,CRoCA,AHL0BQ,CGKDpQ,AQpCAvD,CHRuB,GAHN,CGW1C,ERoCA,AQpCgCC,CHXcwS,AL+Cb,AIbhB5H,ETSV,CU3CmC,AV2CNS,CEDpC,CQvCgD,AGQhD,KJuB4C,MJaH,OLJlC,CAAkDd,OAAlD,CAAP;AUxCgD,ACAE,AHUtD,AJzBmB,AJwDhB,AKIG,AECN,ADuCM,AQhFJ,AZmCE,AORA,AIvBD,CFT4B,APf/B,EOeuE,CAAxC,AHUzBmV,ADoCA7D,CI9CN,CGKQ0N,IJPNxD,AR0CM/R,AOREmR,EJaEvQ,CCwCDwD,GIrFyC,EIKhC,AbnBCjF,CSYF,EAEiC,CRwChD,EGKoBoD,AHLF,AORE,EHqDlB,GDxCuBe,ACwCF,CCvCK,ECpCE,GAAlC,IDoCMuE,EOzC2B,GAAb,CL2Bc,CK3BI,AL2Bd,EAAa,CK3BjB,CRiFZ,CADmB,AQhFgBqN,ERkFnC,AGvDkCliB,CJalB,ACwCG,CDxC4B,CAAC,AC2ChD,AQnFY,CTwCI,ASxCtB,CTwCI,CIbkB,EHwDXoR,AGxDqCxN,CFclB,GAAiB,IEdzB,CAApB,IHwDI,GAAqBqO,YAAY,KAAKT,OAAL,CAAaa,YAH3B,CAArB;AKpFN,AN6CM,AOzCN,AL0CE,AOzCAxU,AZmCI,AORF,IEhCEiiB,ACIApV,EL0CEtH,EOzCAtF,EL2BAsgB,EJaExQ,AHLAZ,GKMO,COzCf,CFDiB,AECFuV,CVgEFvU,AKrCC,CAAZ,GEhCoB,GN6CDJ,AHLA,CSxCvB,AGKE,AZmCQ,EAAgBT,EUpCFxC,IVoCd,CGKuB4F,AHLAlQ,EUpCd,CAAa,CL0CF,ALNpB,CAAJ,CUpCa,AL0CF,CK1CjB,AVoCwC,CKMN,GAAjB,CAAf,ELN6C,IAAP,GGKjB,GAAkCgQ,gBAAnD,EAAqE;AK5CvE,AFUJ,AHmCQD,AOzCR,AL0CE,AD2CI,AQpFJvS,AZmCI,AOX0C,IDnB1C8a,AINA9N,EL0CEiG,EOzCAhT,EJLCuK,EJyFC,AJjDA2E,IYnCR,CJLE,AJyFWoE,AQpFE,CFDG,AL0CA,EG9CD,CFUI,GAAvB,CN8BuB,CGKCxD,AHLd,EAAgBT,EIiDhB,CMrFerC,GVoCf,CGKF,AC4CyB,AJjDAzK,CIiD3B,AQpFoB+hB,CFDN,CAAY,ANqFI,CJjD1B,CAAJ,CQxCwB9jB,AEIV,CFJD,AEInB,AL0CiC8E,ALNO,EQxCP7E,CAAd,AIKF,EJLmB6E,AIKCmf,EZmCU,EKML,EG9CvB,ARwCqB,CQxCpC,AH8CgB,EAA2B,AOzC9B,CAAf,EPyCkB,CAAlB;AGhDkD,AFapD,AHmCQlS,AOzCR,AL0CE,AD2CM,AQpFNxS,AZmCI,AOZ0C,AN3C3B8P,IQqBAoS,AHIfnH,AINA7N,EL0CE+J,EOzCAhX,IZmCEkP,GIiDG8E,CQpFX,AXnBOlX,CWoBL,CFFgB,AL0CA,ECpCE,GAAtB,EN8BuB,CAAb,EAAgBuS,CGKCS,AF3DL,ESkBGjD,ENqFjB,CJjDE,CAAuBtK,CIiDC,AQnFrBkiB,EFFO,CPyCiBhS,AOzCJ,AVoCvB,CAAJ,CIiDiC+B,CMrFnB,AL0CalP,ALNO,CFAqC,CYpCvC+F,CEElC,EAAoBkZ,CFFJ,CAAuB,AVoCI,EKML,CK1CtB,AL0CA,CK1CpB,AVoCwC,CKMK,EOxCzC,CPwCgB,CAAlB,AD2CgC,AQnFC,ETuC3B,AC4CA,AQnF6BvE,QAAQ,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,CAAV,EAAwBkC,WAAWkC,KAAnC,EAA/B,CADF;AJLC,AVwC0E,AKMtE,AECL,AD2CM,AQlFNrkB,AZiCI,AOb0C,MFmBxCkX,EOvCAjX,EdgCeyN,EECbyB,GIiDGgF,CQlFX,CdgC2E,AchC5D,CPuCG8C,AJ9DCnH,ODwDE,CAAb,EAAgBR,GKMO/J,GLNvB,CAAuB/C,CYjCPkiB,GZiChB,CKMgCzR,ALNpC,EIiDE,AJjDgC,GIiDG,AQlF1B,EAAoBwR,EPuCjB,ALN2B,CKM7C,AD2C8C/Q,CC/CC,CAIK,CLNd,GIiDG,AQlF1B,CRkFsC3N,AQlFrD,QRkFM,uBNlD2C,IAAI4H,GAAJ,EAA0B;AQ5B7E,AHmCK,AC4CG,AJjDH,IM9BCqN,AINe0I,GPmCjB,QCkDSnQ,CE/EK,YF+EV,GAAqB,CAArB,ME/EkB,CAAR,CAAlB;AGCE,AHAF,AR4BI7F,AOQF,AD2CM,AQlFN,ALkB8C,AI/C3BsW,ILgCf/I,KDoCG,IMnEAle,Cb2DGmJ,CQ5BK,AF+EJsN,CK9ETxB,CX2BA,CAAY,EW5Bd,EAEEL,AX0BA,EW5BF,CL+EM,CK3EJ,AEnCkB,EP8GI,KAAKgC,GE/EP,CAAP,CAAjB,EF+E0B,CAAaa,YAA/B;AK3EJ,AXyBA,AKOA,AECAjP,AD2CG,AQlFL,AZiCE,AObA,aTWO,AKOAgN,AHLA,CFFC,IAAD,AOOF,ALLL,AW/DiByR,Cb6DjB,OKOA,GIlBsB,KAAKvc,QAA3B,yCEf2C,EAC3C,mFFcqC;AEdrC,AHFJ,AR4BG,AKOA,AOnCD,ALoCEwP,AD2CC,AQlFH,AZiCC,AOdsC,IDhBnCiE,GFkEF,CKjEE+E,KL8EK,CK7EP,AFcWvY,IDZV,EIJSjH,CAAZ,AHgBuC,CEfnCwf,CCDmBvf,CAAvB,ALkCO,EKlCgE,EDErE,ODXaV,OAAc;AAC3B,ACUA,AHGFmb,AILuE,ALqCrEhE,AD2CE,AQlFJ,QHGYgL,ACDsB/U,ILqCxB,AD2CAsH,IMhF6D,CDErE,QADUyN,EHIa,IF2EI,GK9E3B,EJmCqB5c,AD2CWkP,MC3CxB,EAAqB,GAArB,CAHH,IC9BJ,CF4E0B,GAAyB9O,UAAzB,CACvB,KAAKuO,eMjF0C3H,ONiF/C,EADuB,CAAzB,MMhFmE,kBFRhDvM,KAArB;AACA,ACSA,AHIFob,ADgCEhE,AD6CE,AQpFJ,ALkBI,QEhBmB5P,EJqCf,CG7CD0Z,CCSL,ALkFIxM,EGnEE4L,GCxBN,CAAY7hB,ECQS+I,IACrB,CDTA,CAAoB,GDwBC+Y,EHmEE,CE9EK,EDgCThb,ED8CSoO,CGnECjM,MFqBD,AD8CL,CAAaiN,CGnECxS,CFqB/B,EAA2B,GAA3B,AErBJ,CFiBG,CEjBwC,IHmEzC,IACA,CEjFH,IFiFQuR,MAAL,CAAYkB,UAAZ,CAAuB,IAAvB,CAFF,EAGE;AI7FgB,AFctByG,AIPuE,ALuCrEhE,ADgDI,AQvFN,ALkBM,UFqBE,KG9CsBrX,AJ8FnByT,IGrEE/L,ECzBuBzH,MDyBfid,CPcb,CQvCsB,CAAexL,AFcjB,ARuBlB9D,IUrCoB,AH8CTrI,ADgDf,CI9FgB,CVqCA6G,CMyDW,MChDH,EErBjB,CFqBL,AErBgCkU,CTYc,COSnB,EFFa,CEExC,CALD,MDsDC,CADyB,CGrEqBC,CHuE9C,CAFyB,EAGzB,CGxEK,CAAP,kBHyEI,KAAK5M,OAAL,CAAagB,aADf,EAEE,KAAKhB,OAAL,CAAakB,gBAFf,EAGE,GAHF,EAIE,CAJF,EAKEH,gBALF,CAHyB,CAA3B;AI9FgB,ACSpB,AHEC,AR2BD,AKOA,AEEA4C,AD0DI,AQjGN,AZgCE,AOdG,CDnBP,MEPI,GL6CI/E,CLPChF,AEEA,IKOM,AD0DFgG,AJjEA/U,IAAI,CAAb,EAAgBA,GFFhB,CAAoB0H,AKOA,AHLA,EIiEhB,CNnEJ,CAAwB0H,AKOxB,CC4DyB,AJjEAgB,GFFzB,EAA8BxC,GOSN7G,MPTxB,AEEA,EAAyC/G,CKOR,ELPjC,EKOW,AD2DL,AJlEwC,CIiErB,CC1Dc,CD4DjC,CAFmB,CC1Dd,CANN,ADmEC,KAAK+U,aAAL,GAAqBa,YAAY,KAAKT,OAAL,CAAaa,YAH3B,CAArB;AIxGL,AVsCA,AKOC,AOvCqE,ALyCrE+C,AD8DG,AQrGL,AZgCI,AOdAgJ,UJmBE/N,GHLG7D,MAAL,AOdSjH,CFqBK,ALPFlJ,CAAZ,IAAiBpE,EOdA+H,EJmBI/B,IInBrB,CPcA,GGKF,OEE6BmF,SAAS,IAAtB,EAA4B,GAA5B,CAPX;AIhCL,ANsCA,AEEAiS,AD8DC,AQrGJ,AZgCK,AOdD,CK5CL,GNmCqB8D,OH4BZ3I,CEEG,CLPD/D,cAAL,GGKF,AHLwB,CGKCnQ,AHLvB,KKOmB,CAAb,CFFR,CAAiC,AEET8G,SAAS,GAAzB,CARH,GFMoC;AACvC,AOzCmE,AL2CrEkS,AD8DD,AJrEE,AOvB2C,UGrB9CpK,EPiDU0C,IEEI,OK3CyD,CPyCjD2B,EOjDN,GPiDWkB,EOzC4C,SL2C5CrN,SAAS,GAAtB,EAA2B,CFFnB,CAAgCmM,CEExC,CATP,GFOoDvP,MAArC,CAAlB;AMvCF,ANwCE,AO1CmE,AL4CrEuV,AOvCJ,ALQgD,IKR1CiN,MHbJvC,ACCAvU,EPkDMkC,IMzCJ,AJ0CY,AOvCE,GHbP,KAUP,CN0CIA,ASvCF4U,IFLmE,GAPjD,EEYN,CTuCA9R,EO5CuD,AEKjD,Ed6BH,COUQtN,SAAS,GGhDJG,AHgDlB,EAA2B,GAA3B,CAVP,GGtCmD,ALgDpD,GAAuC8M,gBAFzC,EAGE;AKhDJ,ACKA,AXiCA,AKWID,AO9CiE,AL6CrEoF,AOvCF,AZgCE,AOzB4C,MKPxCiN,IHVNvC,ACEA9U,AVwCM,GQzCG,AHgDE,ELPAsB,EYhCM,CJTHrE,MEGyD,CFH9D,CAAahE,ALiDAuJ,COhDU,CDI9B,AToCA,EAAwB,CS1CQ,AXuCtB,EWjCV,EN4CI,CLXWlC,COUOtI,GOvCM,GAAb,EAAkB,CJT1B,AHgDwB,CGhDUG,CIS1B,CPuCN,COvC6B,CPuCF,EOvCrB,CJTR,AHgDE,AOvCX,CJTE,AVsCA,AODK,CKlCgE,CZmCjC,qCAApC;AUrCD,AVsCC,AKWI8M,AEDJoF,AOvCF,AZgCI,AO1B0C,MKNxCiN,Kd6BC/W,EEGEe,GKOK,COvCG,Kd6Bf,GMuEG9O,CJpED,CAAmBtB,EGQEsR,CC4DW,IJpEhC,CAA2B,IGQI8C,CEDRtN,AOvCG,GAAb,EAAkB,GAAlB,CPuCmB,COvCI8e,GPuC1B,EAA4B,AOvCzB,CAAjB,GPuCc,CAZP,KFaD;ALVJ,AKWG,AO9CH,AL6CAxM,AD6DA9X,AQpGF,AZ+B+B,AO1Be,MKLxCykB,IFNCha,AN0GDvG,CNvEC8J,MAAL,AYnCA,AVqC4CiB,CY/B5B,CPuCD,AD6Df,CM1Ge,SVqCyCO,KAAZ,EAAf,KUrCH9O,AEMG,CFNd,CL6Ca8E,CK7CC7E,AEMb,CFND,CEMmB,CFNF8L,EEMhB,EAAuB,CPuCF,CK7CtB,CAAf,CL6Ce,AOvCC,CAAlB,CPuC4C,GAA3B,CAbV;AI7BL,AXiCD,AKWE,AO9CD,AL6CAzI,AOvCF,AZ8B+B,AO1Be,MKJxC0gB,CT+BJ,CMnCMnC,CTkCJ,CUpCG9U,CL6CE,OOvCS,EHJEyS,IJ2CNnT,KI1CRkF,EJ0CG,CAAa,CK7CpB,CDGSjM,ECHsB,KEMF,CHHzB,CAAckT,CGGF,EAAkB,GAAlB,CPuCW,CAAC,AOvCW,GPuCnB,CI1ChB,AGGY,CHHe,AJ0CE,AOvCnC,CFN4CxY,CAAX,CL6CX,CK7CyBC,AL6CtC,CK7CwB,CL8C5BoX,CK9C6CrL,OL6CzC,CACK,EI3C2BuF,IAAR,CAAaiO,OAAO,CAAP,CAAb,ACHA,CDG3B,ACHJ,CDEkB,AJ4CC,CAAC,EI1ChBjO,CJ0CQ,EAAa,EI1ChBjM,CJ0CG,CADL,EAEJgS,II3CC,CAAckB,CJyCX,CAEG,UI3CN,CAA2BtH,GAAG5L,IJ2CjB,CAAC,EAAR,CI3CN,CAFJ,AJ6CsB,EAAZ,CAFH,CAdF;AK9BL,AL+CAkN,AD2DA,AQpGF,AZ8BG,AO3B2C,MKHxC6R,IFNCrX,QEMW,CFNhB,GAAiBL,EL8BZ,MK9BL,WFHAsE,AIS6B,GAAb,EAAkB,CJRlC/O,EIQgB,EAAuB,GJPvCyJ,CIOgB,CAAlB,SJNgB;AAAA,ACKd,AN0CA,AO9CA,AL+CA2H,AD2DA,AJtED,AO5B6C,QEJtCwO,ECJDjV,GP8CEiF,EECI,CK/CX,EDIgB0N,CCJF7S,OP8Cd,CMzCIuE,ACLJ,GDKO5L,QAAH,CAAYkT,AJ0CQ,GAAb,EAAkB,GAAlB,CAlBN,GIxBD,CAAyB,iBAAQjH,IAAR,CAAaiO,OAAOA,OAAO9d,MAAP,GAAgB,CAAvB,CAAb,CAAzB,CADY,GAEZwP,GAAG5L,QAAH,CAAYkT,YAAZ,CAAyBjH,KAAKjM,QAA9B,CAFJ;AN2CD,AOpDsE,ALqDrE0Q,AD2DA,AQpGFzW,ALC8C,QKDxCC,QPyCQ,AOzCd,CAAe,Ud4BR1B,OAAe,AOaD,EOzCGqmB,CPyCV,EAAY,GAAZ,CAnBP,COtBQ,EAAmBC,QAAnB,CAAf;AJPE,ACQA,AX4BA,AYnCD,ALgDClO,AOzCF3W,ALA8C,QEAxCwH,AGAAvH,EJRE0d,CVoCDrQ,CW5BL,EAAU,EJyCE,AOzCd,Cd4BE,Ac5Ba,Gd4BC,KUpCO,KAAK6T,MIQJ0D,IPyCG3N,CPbD,CAAV,EAAa,Ac5Bd,EAAmBsN,Gd4BA/W,CUpCX,CAA0B9K,CHiDV,GAAzB,AOzCC,CJRQ,AIQvB,CJRE,AHiD0C,CPb5B,EAA6B,AOa/B,CApBP,IPO2C2K,MAAL,GAAc/O,KAA3C,CAAd;AUnCAof,ACQE,AX4BH,AOaCnJ,AD2DA,AQpGFxU,ALD8C,QKCxCC,ERoGE6U,EKpGC0N,IGAT,CHAI,AGAW,CPyCC,CGjDDpB,CCQE5Z,IAAb,IDRF,CAAuBkK,CJ4GG,GI5G1B,EAA6BtF,CIQPyY,AZ6BRrV,MKYa0H,ALZI,EQrC/B,AIQa,EAAmBuN,KRqG9B,CADwB,EC3Da,AD6DrC,CAFwB,AQpGb,CAAf,CRuGI5iB,CC9DY,EAA+B,ED8DtCyF,CC9DO,CArBT,CDmFH,CAAS,0BAAe,CAACyL,OAAD,GAAW,KAAKpQ,KAA/B,IAAwCoQ,OAAjD,CAHwB,CAA1B;AKnGC,AJyCDsB,AD+DA,AQxGFrU,AZ6BE,AO/B4C,KEA5C,GGEIC,ERwGE8U,AJ3EAtF,CS7BC,IAAIwQ,CGAb,CAAe,IHAN,ALwGU,CC/DC,CIzCC,AT6BA,EAAnB,CI2EsBtM,IDjEd/F,GCiES,CAAa7J,EDjEVqI,ASvCEyY,GRwGL,CAAmB5X,IQxGvB,EPyCkBiK,AD+Dd,AQxGe4N,CTuCoB,ACkElD,OAAO,CQzGI,CAAf,EPyC6C,ADgE9BhQ,MChEK,EAAiC,GAAjC,CAtBb,QDsF4BA,iBAA/B,CADe,CAAjB;AI/GA,ACQE,ANuCF,AEEAH,AE5C4C,UCLtC0M,CL+CD9T,CMvCEiV,KAAL,EJyCa,CIzCA,GDPbpW,EL8CF,CAAoBlG,GAApB,CAAwB0H,IAAxB,CMvCoB6U,CNuCUrW,CK9Cd,MHgDY8K,EFF5B,UEEwC,CIzCzB,GJyCA,EAA+B,GAA/B,CAvBV,GGzBgCpL,EAAnC,IACA,KAAKkV,CCOHhP,KAAK2P,gBDPP,CAA4BlR,GAA5B,CAAgCkN,UCO9B,CAAqC2E,CDPvC,CAFF,OCSI,CADW,4BAERrC,MAFQ,IAGXtO,GAAGgQ,+BAAH,CAAmCY,OAAnC,CAHW,GAAb;AAKD,ANmCF,AEEC1N,ADiEA,AQ1GF7U,AZ6BE,AOjC4C,KEErC,GGEHC,ER0GE+U,AJ7EF,CSzBG,ATyBF,KI6EO,AQ1Gd,AZ6BYvG,CY7BGmW,IR0GI3P,CCjEC,ELZb,CFFFlV,Ac3BL,AZ6BqB2P,KFFe,AM+EtB,CACV,KAAKwF,GJ9EF,CAA6B1F,GUxBd,CVwBf,CAAL,CKY+B0H,CLZU,KI8EvC,EADU,AJ7EoCzH,EI+E9C,ECnEyC,GAAzB,ADmEX0F,ECnEyC,CLZP,EKYvB,CAxBb,SD2FH,EAFU,EAGV,KAAKC,oBAAL,EAHU,CAAZ,gFE3GFmG,oBAAoB,kBAClBlB,gCADkB,EAElBC,gCAFkB,SAIpBkB,aAAa,kBAAOjB,yBAAP,EAAkCC,yBAAlC,SACbiB,eAA4B,YAC5BC,eAAmC,YACnCC,yBAAiC,SACjCxD,SAAiBuC,qBACjBkB,OAAe,SACfC,iBAAgC,YAChCC,eAAuB,SACvBC,wBAAgC,SAChCC,cAAiC,YACjCC,cAA2B,UAC3BC,OAAmB;AEnBjB,ACUE,AXuBF,AYvBoB,ALqCpBhJ,ADqEA,AQ9GFlT,QAAMC,EJNEqhB,AViCAtT,AYxBNN,AN2GM2H,EK1GCmN,EJqCG,EOzCZ,CHII,ACAkB,AN0GP,AQ9GAqC,GHIE,CXuBE,CMmFC5P,CInHhB7I,EIKJ,Cd2BwBkB,KMmFT,CNnFI,AMoFf,GNpF6B,EUhCf,AJoHTgI,CCtEgB/P,EPdakI,CWvBV2S,MJqCM,EPdhC,COcU,CIrCK,CACX,AJoCiC,EDsEnC,CCtEQ,CAzBL,AD8FQ,EAEX,KAAK7K,KIrH8BxJ,GAAnC,IACA,IJoHA,CIpHKkV,CJkHM,EAGX,GK3GIjP,ECHsB,AN8GrBwD,GK3GImM,CCHqBhU,GAAJ,EACR,KFRlB,CAA4B8C,GAA5B,CAAgCkN,EJqHhC,EAHW,CAAb,OIlHE,CAFF,ECYM,CAAqC2E,SAArC,CADF,EAEE3Q,GAAGgQ,+BAAH,CAAmCY,OAAnC,CAFF,CADW,CAAb;AAMD,AXkBD,AOcAvK,ADyEA,AQlHFhY,AZ6BE,AO1BA,QKHIC,Ed2BEgO,AMuFAwH,CJrFD,CO1BC,EFsCI,CLZDjX,CY7BX,ALGYnE,CH+GG,AQlHAmqB,EZ6BA,CAAb,CO1BM,CH+GYvP,AJrFFzW,AO1BA,IKHlB,AZ6BsB,CFFG,IMuFV,AJrFYoQ,CIsFvB,GC1EkB,CAAV,CD0EH6F,CC1EgB,CAAb,MLZV,EAAyCjW,CFDvC,CADqB,CEEvB,CFAE,CAFqB,AEEuB,EFC5C,AMqFA,EADW,EAEX,KAAKkX,AGjHD,CAAN,UT2BW,CAAT,EAAY/I,EMsFZ,EAFW,EAGX,KAAKgJ,QNvFL,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,KAAKrI,AMuF5C,EAHW,CAAb,GNpFE,CAHqB,CAAvB;AU9BA,AVmCA,AY5BAI,ALWK,AOdP1N,AZ6BI,AO1BH,GFWD,KOdMC,EJJAohB,AVmCEnT,EEFE1L,EU1BA0D,EEHV,CFGE,AEHaue,CFGD,CV0BG,CQjCf,AVmCgB5X,EUnCA,AEOhB,EPzCgC,AHmEZ8B,EY7BtB,CJJuBqS,GRiCN,CFEY7S,AEFA3P,CAAZ,CAAb,CFEc,CAAewO,WAAf,EAA4BiB,CUnC5B,CAA4B/H,GAA5B,CAAgCyX,QVmChC,CAAhB,GUnCgB;AAChB,ACaA,AN/CA,AOyCA,ALsCH,AD6EG5d,AQtHFC,AZ6BI,CKtBN,OIEQmiB,AGTAliB,EJJAqhB,AJ0HAld,EJzFE5B,CGnEC,AOyCA,GNmHP,AQtHF,CRsHawS,AQtHE8P,CTtCDvX,EKkCZ,ARiCc,CSpBG,AL6GF9M,CI1HC,AJ0HhB,EAAkBuU,AJzFhB,CSpBF,CGTF,AZ6BsB,CQjCCiM,ACaE,CL6GDvgB,CMlHpB,ANkHF,GD5JO,CAAoBuL,QAA3B,OO2CI,CFTY,CAA4B/F,GAA5B,AESPqH,CFTuCoQ,YAAhC,CESZ,CAAoBzR,QAApB,CAA6B1I,GAA7B,CAAiC;ADKnC,AXsBFzD,AKrED,AO0CsC,ANkHrCA,AQtHH,AZ6BK,CY9CN,SdgDQkE,AMuFA2R,EK7GG4M,AToBChiB,GUxBFkR,EDIJ,CAAWyQ,CXsBb,CY1BW3R,AVwBK,KAAK1B,CIyFrB,CK7GE,AL6GmBuG,CK7GE8M,IL6GG1hB,CE1CfG,AF0CX,EAA6ByU,EK7G3B,AToBc,CAAkB7S,EM+CI,AIvEhC,ANiH4B9B,CMjHFgN,ANiHhC,CJzFgB,CIyFqB+H,AJzFnC,KUxBI,ANiHoChV,CMlHL,ANkHrC,EAA6CgV,KAAK/U,CAAlD;AIzHA,ACaC,AHmED,AR7CAX,AY5BqC,ANmHrCA,AJzFE,IKYekY,GKtCb,CADF,CADK,CZ8BH5M,AY9BJ,ANqHIwK,CI1HC0L,CRiCC/R,CM+CC,IF0CP,AJzFWP,CM+CCgN,CR7CZ,CMuFc,ENvFE/N,GUnChB,CAAoBzP,CJ0HpB,EE1CO,CAAiB2T,AR7CAzK,AEFlB,CAAmBnH,EQjCzB,CAA4B,ERiCtB,CAAJ,CM+CK,AR7CS,CQ6CiBI,AN/CA6O,AO3BhB1J,CT6BjB,IQ6CO,CAAP,IC1E2C,CP2BCxI,CQjCP,GRiCJ,CAAgBiF,IAAhB;AQhC/B,AFgFH,AR7CC,AYxBD,AN+GCzC,AQtHJ,AZ6BK,AO3BD,IKFEglB,MRsHEzgB,AGpHEgc,ECNA1f,IIIQ,KRsHd,CI1HgB+c,EJ0HE5I,AGpHE,CKFlBgQ,Id+BW7d,IMuFcS,CI1HzB,AIIY,Cd+Bd,CUnC8B,AVoC5B5H,CchCkB,Ed+BpB,EAEE,AMqFgB,EAAlB,EGpH8B,CT+BvByK,AS/Ba,EAAa,KT+B/B,AS/BoCrI,CT+BvBiD,KS/BK,CT+BlB,CAAoB3E,AS/BwBsF,CT6B9C,EAGE,KAAKyE,AShCa,CAApB,MTgCE,CAAapF,MAAb,CAAoB1E,CAHtB,EAIE,KAAK8J,OAAL,CAAajF,MAJf;AWrBA,AX2BAxF,AMkFAA,AQtHF,ALEE,MKFIilB,EHSAhT,EX2BAzG,AMkFAhH,AGpHAgc,ITkCJ,ISlCY,CHoHZ,AGpHA,GHoHgB,AQtHI,ETvCY,GC6JX5M,OAAL,CAAaT,OK7G7B,CL6GA,CK7G8B,CGTG,GAAb,EAAkB,GAAlB,EAAuB,IAAvB,CAAtB;AJHI,ACaA,ANhDF,AEuFF,ADsEEnT,AQtHF,AZ6BE,AO9B2C,MKCvCklB,IRsHAzgB,AJzFE2K,EQjCAkS,ACaCrP,CNhDA,EEwFPvR,CIxCE,AJuCJ,ADsEE,ED7JY8M,AEyFZ7M,CIzCcsR,AJuChB,EAIE,EOpDqB,CHSF0Q,CToBE,CQjCD,IRiCM7T,EGpEnB,CKmCkBoS,ALnCE/U,QAA3B,EHoEA,CSpBc,EGToB,GAAb,EAAkB,CHWnCoW,EGXiB,CJJD,CAA4B7R,AIIJ,GJJxB,CAAgC7P,AII/B,CHSP,AGThB,EHYM,EDhBgB,CAAlB,EAA0D,0BCgBnCmL,GAHX,CAAZ;ADZE,ACiBH,AXuBDhM,AK3ED,AE0FC,ADmED,AQtHD,AZ6BE,AO/B2C,KES3C,CGPImlB,EPkDJ7R,EPdIpP,AEPA,CShBG,ATgBFkL,GQjCK3H,AHuDV,KPfA,EUxCiB,CIIG,CZ6BpB,EAAmB,OAAOiI,EM8CdiC,ME9EN,AF8EkB,EN9CL,GY7Bc,GAAb,EAAkB,EFMRhM,CENV,EAAuB,IAAvB,CAAtB,CFM0D,OFThCkb,YAAlB,CACE,IHoDY5J,GGpDPxM,OADP,EAEE,OAAKA,MHoDb,CGpDQ,CAAapF,MAAb,CAAoBlE,QAApB,CAA6Byc,aAAa5X,QAA1C,EAAoDpD,KAFtD,EAGE/B,MAAMmF,QAAN,CAAe7E,QAAf,CAAwB,OAAKsJ,OAAL,CAAapF,MAArC,EAA6CzC,KAH/C,CADW,CAAb;ACkBF,AH8DF,ARvCA5C,AY9BA,AENF,ALH6C,MKGvColB,IdoCA9Z,CQuCCoQ,CG9DEzJ,CCPA,GDOL,ECPUxE,CDOEwE,AXuBd,EcpCmB,CdoCHhF,CWvBd,AH8DF,GAAoB0E,IAApB,IRvC4B/J,OY9BrB,CZ8BS,AY9BoBnB,EZ8BpC,AcpCgC,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAArB,IFMS,CAAkDd,OAAlD,CAAP;AFHI,ACWFsM,AH8DF,ARvCAjS,AY9BD,AL2CC,AOjDF,AZ6BE,MY7BIqlB,IdoCAhhB,AEPA+K,CShBGiS,AH8DFzF,KRvCL,CUlCS6F,AVkCE,GWvBT,CGbiB,CdoCHhX,CEPC,CAAb,CQ3BA,CAAc,AR2BEiE,EShBG,CXuBZ,CAAarJ,GQuCxB,CN9CI,CAAyBsK,CM8CC,ARvCnB,CQuCX,ARvC+BjP,CAA/B,EAAkC,IcpCF,CJELkd,AVkCYnT,EcpCpB,EAAkB,AZ6BjC,CAAwCgF,EFOV,AcpCf,CdoC4BpK,CcpCL,AZ6BtC,CAAJ,EQ3BkB,AIFC,AZ6BgC,CY7BrD,CJE2CxE,ACWGmL,AXuBV,CAAoBrL,CAAtD,CWvBE,EDXgB,EAA8B,EAAE8G,UAAF,EAA9B,CAAd;AACD,ACWF,AH8DD,ARvCA,AcpCF,AZ6BIiI,AOlCyC,UDgFvC,CAAC,KAAKiM,GN9CGne,IAAX,CGrE+B,IGmHjC,CRvCa2J,CQuCW,AF2CxB4O,IACAC,CNnFA,CACEhW,CMoFO,ENrFT,EAEE,KAAKyK,OAAL,CAAapF,MAAb,CAAoB3E,AETD0O,CFOrB,EAGE,KAAK3E,KEV2B,CAAb,CFUnB,CAAapF,AEVsBuK,MFUnC,CAAoBjP,CAHtB,EAIE,KAAK8J,AEXc,CAAgCgF,IAAhC,CAAnB,CFWA,CAAajK,MAAb,GAAsByI,QAJxB;AQwCE,ARlCFjO,AKjFA,AEuFA,ADyES,AJ3FR,AOhCD,UT4CIwL,AM8EJyK,GE5COmG,AHnHA,CLiFP,EM+ES,CDhKT,YGmHE,CC9EoB,KAAK1U,QAA3B,4CH0HkB,KAAKiM,MAAL,CAAY3N,QACrB,mEG3H4B;ACMnC,ACWF,AH8DC,ARlCF,AKjFA,ASwCD/F,AZ6BE,AOjCqC,QEiBjC2R,AGbA1R,EZ6BAkP,EQ3BEmS,EDNK5Z,EKIb,CAAesd,ILJwB,EPiCpB,CAAb,EQ3BgB,AR2BAvW,IY7BtB,GJE2BuS,CR2BrB,CAAyBtR,IUxBZ,CDQjB,EAA4B,OTgBxB,CAAwCF,IAAxC,CQ3BgB,AR2BpB,CQ3BgDiB,CR2BG,EQ3B/B,CAAgC7P,KAAhC,CAAlB,EAA0D;AACxD,ACWF,AH8DH,AItEC,ALwCA,AD0EA,AQvHFZ,AZ6BIyP,QY7BExP,EPiCNiY,EIpBSvG,ACRD,CNkHC,CIrHGnK,ACWR,ECRQnN,AELZ,CHacsX,AGbCsT,CP6Cb,CLhBa1nB,CShBEmlB,CCRT,AL4BW,CG/BA,AEGD,ALwChB,CLhBE,QY7BJ,GRuHqB5M,GAAGrV,CAAf,EK1GK,AL0GauV,CIpHnB,MJoH0BtV,CK1GU6hB,AL0GjB,GAAWxM,CAAX,GK1Gb,AL0G4B,CAACD,CK1GU,ACR7C,CAAN,CNkH4CpV,CAAH,CJ1FpByO,EI0F2B6G,MIpHxB4K,CJoH+BlgB,CAAf,GJ1FN,CI0F0BoS,AJ1FvC,EAAgBnD,IQ1B/B,CACE,AJmHD,CAAP,KK1GwE7D,CDT3DtB,CCSD,CAAV,CTgBmB,CAAgCgF,GQ1B/C,CR0Be,CQxBb,ARwBN,OQxBWhF,OAAL,CAAapF,MAAb,CAAoBlE,QAApB,CAA6BN,MAAMmF,QAAnC,EAA6CpD,KAF/C,EAGEgb,aAAa5X,QAAb,CAAsB7E,QAAtB,CAA+B,OAAKsJ,OAAL,CAAapF,MAA5C,EAAoDzC,KAHtD,CADW,CAAb;AAOA,ACKH,ACRF,ALuCC,AD2ED,AQvHD3C,AZ6BG,AOlCC,KEgBF,GGXIC,EPiCNkY,CIpBS,GFlBDmI,EFiDN,AO5CF,CJQWkB,AIRI0D,EPiCE,CAWf,KGpCI,CAAc,GDbG3E,CKKvB,OLL+B7Y,QCaF9G,ADbUuB,KCanB,CDbhB,CCagCwb,CDbW,WCa3B,EAA8B,EAAEnW,WAAF,EAA9B,CAAd;AACD,ACKD,AJ8BF,AO3CFxH,AZ6BE,AOlCI,QKKAC,EPiCNmY,ALJMjJ,EShBGwC,EAAL,EGbJ,CHacA,AGbCwT,EHaX,AFlBSzd,IPkCM,CAAb,EKcJ,ALdoB+G,COlCDgO,EFsCM,AOjC3B,CP2CE,IPHY,AEXR,CAAyB/M,UOlClB,CAA2B4Q,GPkClC,CAAwC9Q,IAAxC,CAAJ,EAAmD,GOlCC+Q,KAAzC,CAAP;ACcH,ACKC5O,AX2BF,AcxCF3R,AZ6BIyP,AOlCC,OCZH,CIiBIxP,CHaCmhB,EX2BA9T,KcxCP,CdwCE,AcxCa8X,CHaX,CTgBW7nB,CFWC,CAAd,EEXE,GShBmB,GGbvB,WN0EoB,iBG7DwBuO,EAAxC,ETgBmBqD,aAAa,CAAb,EAAgBQ,eAAhB,CAAgCH,IAAhC,CAAnB;ASfD,AH6DD,ARlCD,AOGC,ALdC,AOlCC+Q,UFgDGxa,CC+BAmF,OD/BL,CC+BA,AC/EWxD,EFgDK,CCgCbjK,KChFgB0E,GGSXyL,CJsER,EC/EE,GGSkBxB,MLuCQ3L,CAAZ,EAAeC,AD2EC,CC3EhB,CKvCoC,ALuCpD,YCiCG0b,eAFH,CAEmB,IAFnB;AEjEA,AC5CA,AHgHA,AIxEA,ALuCA,AD2EA,AQtHF,AZ6BE,AOlCC,MKKGiJ,IP2CC1R,ALdDxE,CM+CCsM,AIxEAlO,EFIEoQ,AJ8GA,IC3EP,CF5GiB1L,ACuLLyB,EC3EGL,CO3CI,EN4EnB,AN/CiB,CIyFV,AJzFH,CQrBJ,AEJA,ANkHmBtN,CE1CC,AIxEAG,ALuCpB,ALdoBuI,GUzBpB,CJwEA,AIxEwBb,GNkHjB,CMlHP,ANkH4B1H,AJzFxB,CAAyBwJ,CUzBCtD,CNkHvB,CACL,MQvH8B,CFIhC,EEJmB,EAAkB,AZ6BjC,CAAwCoD,EY7BzB,EAAuB6U,AZ6BtC,CI0FMpO,AJ1FV,EAAmD,EY7BhC,CAArB,gBRuHI,CACE,KAAKjC,YADP,EAEE,KAAKN,MAAL,CAAYwC,OAAZ,GAAsB,KAAKtC,YAF7B,CADK,CAAP;AI7GD,ACIA,AHgEA,AIxEA,ALuCC,ADgFD,AQ3HD,AZ6BInE,AO3CyC,MKcvC6V,IP2CCjN,OAAL,ELda9a,CKcE,GLdb,GY7BsB,eP2CGkD,CAAZ,EAAeC,CAAf,CAAf,GO3CqC,GAAb,EAAkB,GAAlB,EAAuB2jB,EZ6B1BlV,GY7BG,CAA1B,SZ6BoC,CAAb,EAAgBQ,eAAhB,CAAgCH,IAAhC,CAAnB;AKeF,AO3CF,AZ6BG,AO5C0C,MKevC+V,IP2CCrN,QAAL,GAAgBrW,KAAK4D,AO3CG,EP2CR,CPJT,EOImB,CAA1B,iBO3CqC,GAAb,EAAkB,GAAlB,EAAuB4e,KAAvB,CAA1B;AdwCE,AOIA,AO3CFrkB,ALhB6C,QF2DrCsY,AO3CFrY,GduCCiL,KcvCP,CAAema,EduCb,COIkB,EPJFjX,OcvClB,OduCE,CACE,IADF,EAEE,oBAAU;AACR3N,AOEF8E,AO3CJvF,AZ6BE,AO9C2C,QKiBvCC,GdyCG,EEZAwP,CKcG4D,EPFE7I,AczCd,CAAe8a,IP2CI/f,EPFV,AEZP,CFYoBH,GYtCf7G,ALuCa,GPDX,CAAoBkC,CADf,EYrCQ,AEHtB,OJOqBkC,AFoEA,OEpE6B,YJmHD;AIlH/C,AFoEA,ARlCIjC,AYtCJ,ALwCEqD,AD+EF,AQ1HF/D,AZ6BC,AO/C4C,QKkBvCC,EJOEwhB,AJmHAtL,CE/CD9D,ARlCE,AYtCF/E,ELwCI+F,GPFG7I,AczCd,CFGE,AEHa+a,GFGC,ALwCExhB,CGpCCpB,EVkCV,CAAayC,COAF,CDkFhB,CIpHqBuC,AJoHpB,GNlFI,CAAoBjH,CQkC3B,ARpCY,CMoFH,CQ3HX,CJOmB,EAAjB,CJoHc6S,GMxHU,CAAV,EAAa,CDgCK,IChCA9F,ENwH9B,IAA6B,GMxHjB,EAA6B,ANwHPkG,KMxHYrG,ENwHjB,CAAakH,GMxHD,GAAcjW,KAA3C,CAAd,ANuHA;AIlHA,AC4BA,AHwCD,ARlCK4L,AYtCJ,ALwCE0K,AO3CJ7U,ALnB6C,QKmBvCC,EJOA,AC4BE0iB,AChCF,KFIK5B,AEJAzT,CEHX,CAAe,EdyCEd,EYtCX,GLwCgB6G,CPLR,AYnCO,CDgCG,IChCE5F,CDgCGgF,AJQAoC,KGpCvB,AIPkBuQ,CJOS3D,EEJ/B,EAAmC,IFI/B,CAAJ,CHiCkB,CGjCwB,AIP7B,EAAuB4D,MHmCd,CAA+B,CAA/B,CAAtB,GGnCa,CAAf;AJQI,AC4BF,AXMInb,AYtCF,ALwCA+I,ADgFF,AQ3HFjT,ALpB6C,QKoBvCC,EHmCA,ALwFEmW,CKxFDuM,EChCEgB,EFIE,CIPX,CP2CetQ,AO3CA,GJOC0N,CVkCGrU,GWNjB,AChCE,ALwCkBuG,EIRA,ILwFM,GKxFC,AXEf,AOEM,EDoFaS,CQ3HTyR,CHmCF,ID5BX,AJoHiB,CIpHU1D,AJoHEpL,MQ3HzB,EJOJ,AJoHiB,AQ3HUiP,CJOlC,AJqHCvqB,KADuB,CACjBob,UQ5HI,CAAf,ER2H4B,EAEvBjQ,GAFuB,CAEnB,KAAKwN,MAAL,CAAY3N,QAFO,CAA1B;AInHC,AC4BD,AXMIqE,AYtCH,ALwCCuM,AO3CJ3W,ALrB6C,QKqBvCC,KHoCF0iB,GGpCJ,CAAe,CdyCC/V,AOEAyG,OAAOsD,EIPLjE,KXAJ,GOEM,COtCI4S,EZ4BNpe,QAAqB,ESQnC,GAAsCyb,EGpC3B,EAA4B4C,UHoCahK,OGpCzC,CAAf,SHmCE;AAGD,AXIKxX,AYtCL,ALwCGgQ,ADkFF,AQ7HF,AZ2BuC,AOjDM,UHmJrCuC,KNpFKpJ,EOEEmG,OAAOU,EPRR,GM2FV,ICzFgB,CDyFXL,MAAL,CAAYwC,GEpDQ,IFoDpB,GAAsB,KAAKxC,MAAL,CAAY6C,eAAZ,GAA8BJ,aADtD;AIrHA,AFmEA,ARjCI9L,AOEFoM,AO3CJ,ALvB6C,UC8BrCkH,AFmEF,KAAKlC,GD/BKpI,EPFE,KUlCK,AHoCAoD,EC+BrB,EAAuB,CEnEGiL,IFmEEjG,CDtCV,MPKK,CAAP,CAPJ,GQwCW,CAAkBW,SEnEpB,CAAgCzZ,KAAhC,AFmEE,CEnEvB,AFmEyD,IAAlC;AElEvB,AFmED,ARjCK2H,AOEF4I,ADmFF,AQ9HF,AZ0BE,AOlD2C,WC+BtC6N,EJuHE3K,AJpGA,GKiBK/C,ELjBA1D,GFeK,EOEEuD,QARD,AD2FOhN,CIvHzB,CAA2Bub,ARmBpB,CIoGA,AJpGqBva,CIqG1B,MIxHF,ARmBmC0I,IQnBI+N,OJwH7B1H,AJrGH,EAAyCtY,GQnBhD,EV0BY,CEPL,CAAgD,YIqGrD,CACE,KAAKqW,YADP,EAEEsC,mBAAmB,KAAK1C,YAF1B,CADK,CAAP;AItHA,AVkCIrJ,AOEFiK,ADwFH,AQnID,AZyByD,AOlDZ,aCgCpCmJ,ERmBLzW,KKiBcmM,ELjBPpE,GQnBT,AELGlP,CZuCmB,COECyU,GKzCW,KVwBhC,CAAqB,GKQL,CIEAzE,ETVUjB,SSUY,GTVjB,CAAkBtM,IAAlB,CAArB,CADqD;AQjBxD,AC6BC,AXLY,AY7BZ,ALyCE6R,AO3CJ,AZwByD,AOlDZ,OTyDzC,AEPK,CFKP,AELA,EUtBMrG,CDkCDqU,UClCY,GLyCGhP,EKzCE/F,GDkCtB,CAAwB/P,CJOG8W,CKzCV,EDkCjB,CAA6BtE,AClCE,KAAKtC,IDkCpC,GJHkB,EK/BlB;ADmCAsC,AXMD,AOCG4E,ADwFJ,AQnIA,AZ0BC,AOrD4C,gBE+DjCiO,KJOOvP,MC8BZ0F,CD9BmBpE,CIPxB,CAAwB,IAAxB,SHqC6B;AGpC9B,AHqCC,AIvEA,AL6BkB,ADoGpB,AQnIA,KP+BE,KK7BM1G,CJuED2N,IAAL,IAAa7C,QIvEU,MJuEvB,eItEE,CADqB,EAErB,CAFqB,EAGrB,oBAAS,CAAT,EAAYpM,mBAAZ,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,KAAKW,MAA5C,CAHqB,CAAvB;AJwEA,AInEA,AN6HF,AQnIAtN,ALpBE,QKoBIC,EFMEiO,CJmED8N,CC7FC,IKoBR,ALpBY3hB,CKqBV,GFKgBwS,CH1BV,CD6FN,AC7FgB,GD6FG,IAAnB,EInE2BsB,GAAX,CAAenB,CELtBsY,UFKO,CFAS3iB,CEAmBsL,KEL5C,CJKsD,CIL1BoX,OFKZ,CAAhB,AH1BM,CAAN,GKqBA,EAA0C;AJM1C,AFmEA,AD9BA,AO1CEpF,ALrBH,UC0BOla,AHqCDwS,CC8BA0D,CMxEK,CAAC,CAAC,CP0CZ,EO1CW,CP0CE,CO1CI,EJKA,CFmEjB,AMxEW,CAAD,CdnDY,CQ2HH,AMxEI,CJKD0F,AILE,CNwExB,EMxEuB,EAAM,EAAN,CAAb,CADgC,EP4CxC,ELnBgC,iBKoB9B,CGvCa,CAAqChf,KAArC,CAAjB,SHuCU0Q,OAAO2E,QAAb,EAAuB,aAAK;AGtChC,AVxDA,AYwDAjY,ALuCM,AO5CJoiB,AZwBF,UUnBIle,ALuCQ+J,ALpBR,GQnBG,AVxDA,EcmDMqW,AZwBJxV,GF3EGrE,CYwDZ,ELuCuB,CAACpJ,GP/FjB,CAAagE,AO+FQ,CAAL,CLpBvB,EAAwB,EF3ExB,AO+FkCiO,IIVpBtD,CTViB,EKoBUiI,CGvCjBjS,ERmBY8I,KSUS,AJUX,EGvCDpO,CAA1B,AHuC6C,CAA7B,CGvCasF,AHuC9B,GLpBkB,MQnBqBrF,CAAtC,CAAP;AACD,AC6BC,AHsCA,AR3HD,AYwDCX,ALuCM,AO/CoC,GAA1C,CADF,MHsCQ9B,AHsCAoe,AInEFhR,GLuCS,CACL,IIXM,CC7Bd,GAAgB6C,CD6BGmU,CHsCC,KAAK5G,CInED9T,QAAR,EAAhB,CD6Bc,AHsCd,CGtCsCzJ,AJa5Boa,OIbI,CAAgCvI,CJWtC,EAGE,MIdI,CAAd,SJcegD,UAAU,CAAf,EAAkBA,UAAU,CAA5B,EAA+B/E,QAA/B,CAHF,CADK,EAML,4BAEEsK,SAFF,EAGE,gBAAK,CAACvF,OAAD,GAAW,CAAhB,EAAmB,CAACA,OAAD,GAAW,CAA9B,EAAiC/E,QAAjC,CAHF,CANK,CAAP;AITN,AHsCA,AInEA,ALkDK,AL/BL,KKiBI,CADF,CADW,CAAb,EILI/P,ATVEkR,USUQ,CAAC,CAAf,EAAkB,CTVG,CACnB,GUpBWjI,CVoBPsH,CSSmB,AHsCf6N,AC9FD3U,IG2BT,CD6BkB,AC5BhB3H,EVmBA,CUpBF,AVqBI,CIsGuB,AGtJU,CG6BnC,CJiEF,EAAuB,EIjEhByK,OAAL,CAAapF,AVmBNyK,MUnBP,CAAoBpP,CAFtB,EAGE,KAAK+J,KJgEP,EIhEE,AVkBE,CUlBWpF,AVmBT,KAAKqJ,CUnBT,CAAoB/N,CAHtB,EAIE,GVkBI,CAAcoE,CUlBb0F,GViBH,EAEE,EUnBJ,CAAajF,EVmBJkJ,IUvBX,IVuBM,CAAc1J,GAFhB,EAGE,KAAK0J,QAAL,CAAcrJ,MAAd,CAAqB3E,CAHvB,EAIE,KAAKgO,QAAL,CAAcrJ,MAAd,CAAqB1E,CAJvB,CADF,EAOE,KAAKoO,YAPP,CADmB,EAUnB,IAAIN,QAAJ,CACE,eAAKqB,sBAAL,CACE,KAAKpB,QAAL,CAAcrJ,MAAd,CAAqB3E,CADvB,EAEE,KAAKgO,QAAL,CAAc1J,GAFhB,EAGE,KAAK0J,QAAL,CAAczJ,KAHhB,EAIE,KAAKyJ,QAAL,CAAcrJ,MAAd,CAAqB1E,CAJvB,CADF,EAOE,KAAKoO,YAPP,CAVmB,EAmBnB,IAAIN,QAAJ,CACE,eAAKqB,sBAAL,CACE,KAAKpB,QAAL,CAAc3J,IADhB,EAEE,KAAK2J,QAAL,CAAcrJ,MAAd,CAAqB1E,CAFvB,EAGE,KAAK+N,QAAL,CAAcrJ,MAAd,CAAqB3E,CAHvB,EAIE,KAAKgO,QAAL,CAAcxJ,MAJhB,CADF,EAOE,KAAK6J,YAPP,CAnBmB,EA4BnB,IAAIN,QAAJ,CACE,eAAKqB,sBAAL,CACE,KAAKpB,QAAL,CAAcrJ,MAAd,CAAqB3E,CADvB,EAEE,KAAKgO,QAAL,CAAcrJ,MAAd,CAAqB1E,CAFvB,EAGE,KAAK+N,QAAL,CAAczJ,KAHhB,EAIE,KAAKyJ,QAAL,CAAcxJ,MAJhB,CADF,EAOE,KAAK6J,YAPP,CA5BmB,CAArB;ASWA,ACxBA/O,ALQA,AD8GA,AQ/HF,ALvBE,UGgCIwL,AHhCEiV,CEwDDqC,GCxBL,UHhCoB,KAAKpb,IEwDzB,CAA4BxJ,GFxDR,CAAc,CEwDlC,IFxDuCwJ,QAAL,CAActF,MAAd,GAAuB,CAArC,CAApB;AEyDA,AHsCA,ADhBD,ADwEC,AQ/HFnC,AZ4DE,AOnFA,QKuBIC,ER+HA,AGtJAugB,CD8FClE,ANXAzN,ES3BE,EL8FE0F,CExDT,AMvEF,CHiCE,AHsCWwE,AMvEE,ILvBb,EAAiB,CT9BgB,AEiHjC,CImEA,EAAqB,AJnEA5J,EQjDduC,EF4DP,EAA2B2K,EE5DR,CIXGgJ,GZ4DtB,KMWA,IMvEa,EAAuBE,iBAAvB,CAAf;AJYE,ACsBD,AXtFC,AY8DAxlB,ANsHE,AQ/HJC,AZ4DE,AOnFE,QKuBEC,EFSAgE,CFECid,CJoHG1hB,CNpLD,AEiHA2P,GY5DT,CJWE,AIXa,CJWD5R,AVhEA+P,CY8DZ,CNsHgB,EIpHhB,CAAiBoE,CVhEV,CMoLcuC,AJnErB,EQjDA,CVhEsB,KAAKxG,AS+BvB+S,GKsBkB+E,MdrDtB,CMoLE,EGrJchlB,GAAZ,CAAgBkgB,IKsBP,EAA4BuE,ALtBrC,CAAuBtd,QAAQlI,IKsBtB,CAAf,ALtBM,CADF,4CAE0CghB,YAAYjgB,GAAZ,CAAgBoH,QAAhB,EAF1C,aAE4ED,QAAQlI,KAAR,CAAcmI,QAAd,EAF5E;ACmCF,AF4DA,AR5HD,AY8DC5H,ANsHE,AQ/HJC,AZ4DC,AOhFE,QKoBGC,EJWA,AEFAoL,CJ8DCkR,CFwDGpQ,GIpHCrM,CIXX,CAAe,CNuEb,CI9DA,EFEA,AF4De0c,AFwDE,CMtHDxP,CFEC,GJoHKwJ,QMtHM7O,EETN0d,GNuEtB,CACE,EI/Dc,EAAhB,CJ+DOtf,GMxEM,EAAuBkf,GNuEpC,EAEE5I,QFsDe,CQ/HJ,CR+HX,AQ/HJ,ENyEgBI,kBAAZ,CAA+B,KAAKd,sBAApC,CAFF,EAGE5C,iBAAiB,IAHnB;AE3DE,AFgEF,AIlEAhZ,ANsHE,AQ/HJC,ALpBE,QKoBIC,EN2EA/D,AIlEAkI,CH7BCqD,EC+BE3H,EJoHEN,CMtHT,AETF,CN2EauP,AIlEA,AETE,EJWX,AD/BF,CC+Bc9O,AD/BA1C,CHmJC4D,CMtHCqJ,EH7BhB,CHmJS,AGnJU9C,CD+FnB,AFoDoByE,EIpHlB,AFgEoB,CEhECuF,AEFZ,CAAatM,ENsHf,AGnJT,CC+BE,AFgEyBsX,CFoDC,EMtHjB,AETW2I,CFSS5kB,CAA/B,CNsHiC8S,CMtHC,GJkEZ,EIlEiB/I,GET1B,EAAuB0a,EFSF,ANsHzB,CMtHsC9f,ANsH7C,MMtHgC,CAAoB1E,CAAtD,EETa,CAAf;AJYG,AEFDX,ANsHC,AQ/HJ,ALpBG,CKtBJ,SFmDQyF,GAAJ,AH7BO,CG8BL,GH9BF,EG8BOgF,OAAL,CAAapF,GL6EP3E,GK7EN,AL6EiBC,CK7EGD,CADtB,CL8E8B,CK5E5B,KAAK+J,CDqBcvM,MCrBnB,CDqB6C,ACrBhCmH,MAAb,CAAoB1E,CAFtB,EAGE,KAAK8J,OAAL,CAAajF,MAHf,EAIE,CAAC1D,KAAK4D,EAAN,GAAW,CAJb,EAKEuI,WAAW,CAAX,GAAenM,KAAK4D,EAApB,GAAyB5D,KAAK4D,EAAL,GAAU,CALrC,EAME,KANF;AFGD,ACqBC,AH2CA,AI3DA1F,ALuEA,AE3GD,UEoDOgQ,AChBFxE,CJ2DCoR,ADYAtE,GKvEL,ILuEA,GAAe,CIvDG,EXtFc,GWsFTgK,CH2CvB,CAAuBhG,WAAvB,EDY2B5b,CAAZ,EIvDG,AJuDYC,CIvDYzC,AJuD3B,CAAf,IIvDkB,CAAlB;AACA,AH2CA,ARjIA,AO6ID,ADwCC,AQ/HJ,IAAMunB,OHgCGnD,AH2CAzF,ERjIE,AMqLA,GQ/HO,EdtDFrP,AMqLA0G,GEpDZ,IM3EEuR,IHgCF,CAAwBpnB,EXtFjB,CAAoB6N,CcsDb,EHgCd,AL+FA,CK/F+BhO,AGhCX,IdtDpB,CWsFA,EAAsC,CAAtC;AACA8R,AH2CD,ARjIA,AYsEChQ,AN+GD,AQ/HD,MAAMwkB,IFgBAtgB,MDgBM6e,EGhCM,CFgBhB,cDgBA,QGhC6B,GAAb,EAAkB,GAAlB,EAAuB,IAAvB,CAAlB;AHiCE,AChBA/iB,AEhBF,AZrGmByO,MYqGbiX,GZpGCvW,CUoHD7D,GDgBG0E,KGhCS,CFgBhB,GDgBA,AChBgBlD,EFnGM,CRjBD,QUoHMlF,CHrCiB,OGqC5B,AEhBa,EFgB7B,CEhBgB,EAAkB,GAAlB,EAAuB,IAAvB,CAAlB;AJlFE,ACmHD,AChBC,AEhBF,ALtB8C,MKsBxC+d,OJnFG,KAAKlb,AImFI,AZtGCgE,OQmBV,CAAapJ,GEmGP8B,ELsEJsR,CGzKT,GEmGA,CACEzY,ALqE6B,GKtE/B,EAEE,AElB2B,GAAb,EFkBTyK,AElB2B,GAAlB,EAAuB,EFkBrC,CAAapF,CElBC,CAAlB,IFkBI,CAAoB3E,CAFtB,EAGE,KAAK+J,OAAL,CAAapF,MAAb,CAAoB1E,CAHtB,EAIE+iB,YAJF;AFlGD,AEwGC1jB,ALgE+B,AOrFjC,UFqBMwL,IAAJ,UZ5EgC,CQiI7BxL,KAA+B,SFoDT;AEnDzB,ARjIA,AY4ED,ANyGC,AQ9HF,ALxB8C,MKwBxCykB,IN0EEnI,GRjIC,AMqLA,KNrLK9O,AcuDI,MN0EI,KAAKkO,AFqDvB,CADK,ENrLA,AMuLL,CNvLyBvP,IMuLpBiJ,IEtDP,ARjIA,AcuD6B,ALxBhB1N,GKwBG,EAAkB,GAAlB,ALxB4B,EKwBL,CRgIrC,GQhIc,CAAlB,CRgI6B,KAAKkM,OAAL,CAAa8C,UAFjC,EAGL,KAAKC,UAHA,CAAP;AEnDA,ARjID,AO2IC,AD8CD,AQlID,ALzBejP,MKyBTgd,ULzBwC,EKyB5B,aN0ENpI,ADUA,KAAK9D,KAAL,AOpFmB,CN0E7B,ADUqBnG,CIrDoD,CH2ClD,AM1EP,EAAkB,GAAlB,CPoFN,CAAoBoG,AOpFS,GPoF7B,CAAV,AOpFgB,CAAlB,CPoFsC,iBCVpC,MDUA;AIrDyE,AJsDzE,AOpFF,AL1B8C,MK0BxCsM,IH8BepX,AJsDb+K,OItDmE,CG9BzD,MJVmB,MH+FjC,KAAKF,KAAL,CAAW5a,AOrFgB,GAAb,EAAkB,CPqFhC,CAAkB,COrFJ,EAAuB,IAAvB,CAAlB,gCH8BiD,IAAIgQ,GAAJ,EAA0B;ADxCtC,AFqFnC,ADUoB,AOpFtB,WN0EO4O,IDUoB7D,GCVzB,GAAezc,ADUgBuc,GAAN,CCVzB,CAAoBzY,EDUkB,CCVtC,ADUuC2Y,EAAEnE,GKhE7B,OLgEQ;AItDpB,ACTA,AL+DoB,AOnFtBvU,AL3BEyH,OF8GE,COnFExH,CPmFiDkC,CItD/CgP,CCTD7D,IL+DH,AE9GO7O,CK2BX,CFoBE,AEpBa8lB,CH6BC,AJuDZ1iB,EIvDF,ACTc,CAAd,CH/CA,CF+GOG,AE/GU,GK2BnB,EPoFI,CAAWH,KAAK8W,GAAL,CAAS,KAAKJ,CD6CI,IC7CT,CAAWpW,MAApB,CAAX,CAFF;AG7FA,ACyCA,AH6CA,AItDD,AN6GC,AQjIFnC,AL5BmB,QK4BbC,EH6BAyN,ALoGA,GI7IG,EJ6IE6G,AG7JmB,CK4B9B,CAAekR,CH6BDhV,GAAR,AFzD6B2P,CEyDjB,GLoGhB,CQjIF,CH6BuBzO,ALoGA,EKpGjB,CAAJ,CFzD4B,CCiB1B3U,ACwCwB,AFzDkB0K,OCiBnCka,ACwCwBzQ,AFzDL,CAAX,GCiBf,CAAY,ACwCY,KDxCP4P,qBAAjB,EAAwCvd,GAAxC,CACE;AAAA,ACwCJ,AH6CA,ADUA,AD6CE,AQjIJxD,AL7BmB,OAAjB,CK6BIC,EPoFE2Y,KG/FO,AJ4IJ,CQjIX,CAAe8M,GRiICvR,EI5II4M,IIWpB,MPoF8B,KAAKxI,KIvDtB,AJuDiB,CG/Ff,AH+F0BM,CG/FClW,GCwCxBgP,AJuDY,AD6CnB,CC5CP,AD4CwCxQ,CI5I7B,ACwCF,CDxCP,ACwCeqP,ELoGV,CACL,KAAKkD,MAAL,CAAY3N,KKrGL,CAA6B2H,ELoG/B,EAEL,GKtGO,CAAX,CLsGS6F,GKtGyC,KAAK5B,EAAvD,GLoGS,CAAP;AI5IE,ACyCL,AH6CC,ADUE,ADgDD,AQpIH,AL7BE,OCgBE,CADK,CAAP,IDfO,EFkHH6G,EElHJ,CT7DiBrL,CO+KT2L,YAAJ,GAAmB,CAAnB,IACAN,IAAIM,YAAJ,GAAmB,KAAK,OAAKP,KAAL,CAAWpW,MAAX,GAAoB,GAAzB,CAFrB;AG7FH,AH6FG,AOnFJnC,AL7BC,OF+G6B,CAA5B,AOlFIC,QAAN,CAAeukB,SAAf,QFmBc;AJwDZ,AIvDA,ANiHA,AQpIFxkB,QAAMC,EFmBE2jB,GNiHC,GQpIT,CAAea,CRoIDtQ,QQpId,GFmB2B,KAAK0P,WNiH9B,UMjHyB,EAAzB;AJwDA,AIvDA,ALmEA,AD8CD,AQpID7jB,QAAMC,EFmBA2jB,GLmEGnL,GOtFT,CAAeqM,SFmBb,AEnBF,EFmBwB,MLmEM,CAAClM,II1DZ7S,UAA2B,KJ0D5C;AIzDA,AH8CA,AIvDE,ALmEH,AOtFD,aH4BS,ACTAgI,KDSKyU,CCTV,IDSK,CAAWtF,MF1DV3X,QAAsB,IE0DvB,CAA8BQ,QAA9B,CAAP;AACD,AH8CC,AIvDE,AHlD4B,aGkDvB+H,WAAL;AJwDH,AIvDE,AEnBH,MAAM+W,WAAW,uBRmIY,AQnIC,GAAb,EAAkB,GAAlB,EAAuB,EAAvB,CAAjB;AFoBC,ANgHC,AQnIF7kB,ALhCE,QKgCIC,ELhCEygB,GHmKC,GQnIT,CAAemE,CJhHI/D,AJmPLpN,MAAL,AGnKa,CHmKD3N,AQnIrB,EPqFOgT,EErHoBtR,IHmKlB,CACJvB,GADI,AGnKa,CHqKhB,AGrK8B1C,GAAd,CAAkB,CFqHT,SErHUkE,GHqK3BuO,IGrK0B,EAAUzX,CAAV,EAAoC,YHqKtE,CACE,KAAKsV,WADP,EAEE,KAAKJ,MAAL,CAAYwC,OAAZ,GAAsB,KAAKtC,YAF7B,CAFG,EAOJ1N,GAPI,CAQH,iBAAQ+P,qBAAR,CACE,KAAKS,UAAL,GAAkB,KAAK/C,OAAL,CAAagD,UADjC,EAEE,KAAKjD,MAAL,CAAYwC,OAFd,CARG,CAAP;AC7CA,AD0DD,AG/KG,UFqHI9B,EErHEoM,UFqHUzH,IErHIva,MAAM,CAAN,GAAU,GE2DfuH,AJ0DkB,CErHb,GFqHtB,AErHuC,ME2DI,CF3DC0B,QAAL,CAAcjJ,IAAI,CAAlB,CAArC;AE4DF,AJ0DA,AOrFFwB,ALhCI,QKgCEC,EPqFE+Y,EErHA,CE2DC,AF3DAwH,GKgCT,CAAe,CH2BDgC,KAAL,CAAW/F,AF3DhB,EFqHoB,AErHF,KFqHO1W,GCZP,EMzEEwe,GPqFA,CAActL,EI1D7B,CAA8BlT,EG3BxB,EAAoB8e,IH2B1B,CAAP,AJ0DsB,CAA2B,EOrFpC,CAAf,EPqFwDxM,OAAhC,CAAtB;AIzDD,AH8CC,ADYA,AOrFFrY,ALhCM,QKgCAC,EPqFEiZ,GCZC,CCzGCxR,EKgCV,CAAe,CNyED3B,KDYO,GCZZ,CAAcrF,CAArB,CIvDO,OElBe+kB,SAAT,EAAoBZ,EPqFC7L,MOrFrB,CAAf,MLhCM,EAA4C,CFqHE,KAAKd,CErHA,IAAP,GFqH7B,CAAnB;ACXD,AIvDC,ALmEA,AOrFFlY,ALhCM,QKgCAC,EPqFEkZ,CKnEDjO,KElBP,CAAe,ALhCFxD,EGkDX,GAAgB0G,ELmEI,AErHhB,KFqHqB8J,OKnEzB,AElBsBwN,CFmBpB,ALkEF,EDyDyB,EM5HzB,EAEE,EEpBW,EAAoBb,QAApB,CAAf,OFoBc;AACRpkB,ALiEJ,ADyDA,AQ9IFT,ALhCK,QKgCCC,GFoBG,ALiEFiY,EDyDE,CAAC,EM1HI1N,AEpBd,CAAe,EPqFb,ADyDakL,IM1HN,ALiEUwD,CKjEG9T,MAAb,CAAoB3E,CADf,GN2HJ,CCzDsB,AOrFRokB,EPqFtB,EDyDkC,IQ9IrB,CR8I0B1P,CQ9IPqP,SAAnB,CAAf,IR8IoC,EAA3B,IAAqD,CAA5D;AMzHI9jB,ALiEJ,ADyDD,AQ9IDV,QAAMC,GFoBG,ALiEFmY,KKjEO5N,AEpBd,CAAe,MFoBN,CAAapF,GLiEpB,GKjEO,ALkEL,CKlEyB1E,CAFf,IElBUmkB,QAAT,EH0BW9e,AG1BQ0e,SAAnB,CH0B+C,AJ4D3C,AOtFnB,KPsFwBvM,QAAL,GAAgBiB,WAA/B,IAA8C/E,SADhD;AI1DA,ACNIlK,ALkEJ,AOtFFlK,ALhCI,QKgCEC,EH0BAsS,AJ4DE6G,EEtHA,EAAE1R,EKgCV,CAAe,IFoBI8E,ALkEA,KI5DG,AJ4DE6L,CKrEV,GDSZ,AHkDa,GDUI,CAAa1S,EOtFRkf,QPsFL,AOtFJ,CPsF4B,COtFTC,IPsFc/e,KOtFjC,CAAf,EPsFmB,CAAjB,GEtHM,CAAJ,EAA+C,OAAO2B,OAAP;AE2DjD,AHkDA,AIxDIyC,ALkEJ,AEtHE,UE0DE4Y,AHkDA,ADUA3J,CCVC,CC5GC,EAAEoH,ED4GEtE,GIxDKxP,CJwDf,CDUe,CCVC,CDUhB,EI5DmBtM,AJ4DA,MKtEP,EDUZ,iCF1DM,CAAJ,EAAmD,OAAO,IAAP;AD6GnD,AIxDEgK,ALkEF,AOtFJ,aN4ES8R,ADUA7C,ICVL,CIxDYzM,EJwDA,IDUZ,CAAiBkK,OKvEP,KLuEV,CCVoB,CDUW1C,ICVNrO,CFiEI,ICvD7B,GCVoB,CAActF,CAAtB,EAAyB,KAAKsF,QAAL,CAAcrF,CAAvC,CAAZ;AGjDF,AHkDC,AIxDGqD,ALkEH,ADuDD,AQ7IF,ALhCI,OFoHF,II1DKse,EJ4DE,ADuDA,EMzHInV,GNyHCkI,QM/HA,GDYZ,CAAwB3W,GF1DZ+hB,IE0DZ,CAAgC,ALmHzB,GAA4Brf,IAA5B,AG7KiBZ,CH6KgB,EG7K5B,CAAgBkgB,EH6KiB9K,IG7KjC,CAAuBjO,GE0DU,KF1DFlI,KAA/B,CAAV,EH6KsC,AG7KW,EH6K5C,EAA+D,GAA/D,CAAP,YG7KE;AE2DA,ACNE6K,ALkEF,ADuDH,AQ7ID,YH0BU+O,CJ4DDC,UI5DYtJ,CJ4DjB,CAAiB,CAACgH,OI5DSrE,GCbjB,ELyEV,EAAgC0B,SAAhC,KI5DiB,GAAkCrO,QAAnD;AACA,AHkDF,AIxDIwE,ALkEH,AOtFH,ALhCI,YE0DI6O,AF1DE/S,CD4GD,KAAK6V,IAAZ,EGlDkB,CAAhB,AF1DmBsE,CGoDC,CDMD,UF1DY7d,KAA/B;AE2DA,AHkDH,AIjEa,AL2EZ,AOtFF,ALhCI,OG2CA,CAFF,GL6EK4V,CI5DCa,AF1DE9S,IFsHR,CAAW7H,MI5DMskB,CJ4DjB,AEtHoBrb,CFsHD,OEtHS/E,GE0D1B,EAA6B,AF1D7B;AE2DEogB,ACLL,ALgEoB,AOrFrB,ALhCI,YAAMpC,GFqHkBnI,IAAIxc,MI3DXod,AJ2DO,CAAWhF,CErHdvS,KAAKF,CE0DxB,EJ2DsB,AErHH,CFqHJ,AEpHf4D,GH2KsB,GG5KH,EAEnBib,YAAYre,MAAZ,GAAqB,CAFF,EAGnBuF,QAAQvF,MAAR,GAAiB,CAHE,CAArB;AE2DEoQ,AJ0De,ADwDnB,AQ5IH,CAlCD,MPsHI,MDwDO,KAAKmB,MAAL,CAAY3N,CKlHCgK,OLkHb,CAAqB7J,CKlHxB,ELkHG,CACL,iBAAQ+P,qBAAR,CACE,KAAKpC,UADP,EAEE,KAAKH,MAAL,CAAYwC,OAAZ,GAAsB,KAAKtC,YAF7B,CADK,CAAP;AKjHG,AJ0DJ,AD6DC,AG7KE,YAAMxN,mBAAmB,EDuGhB,mBCtGPsB,QAAQlI,KAAR,CAAciB,CADS,EAEvBiH,QAAQlI,KAAR,CAAckB,CAFS,EAGvBigB,YAHuB,CAAzB;AEuDD,AHiDD,AFsEA,AQjJJ,IAAMgF,GHmBF,GHwDMtJ,MM3EQ,QN2EM,CM3ElBsJ,IN2EuBlK,KM3EX,GAAM,IN2EpB,GIvD+B;AJwD/B,AIvDA,AN6HA,AQjJF,ALxBI,MKwBEmK,IN2EA,AIvDElU,CJuDD2K,CM3EK,GLxBD,EG4CI,KJuDb,AIvDkB9O,EJuDA,MM3EA,GAAR,EAAa,CFoBV,CAAoBuW,AEpBvB,CAAZ,KLxB6BlD,QG4Cd,EAAb,EH5CS,CACLxa,gBADK,EAELC,UAFK,EAGLC,SAHK,CAAP;AEmDF,ACNA,AN6HD,AQjJDtG,ALpBG,OA/BmB,CKmDhBC,ALnDJ,EGuEI,EAAEyR,CDMCa,GG1BT,CAAeqT,GAAf,MH0BE,aJyDiB7f,GK/Db,CAAJ,EAA6B,IL+DOmQ,GK/DA,KAAP,CL+DwB9B,WAAmB;AIxDzE,AHiDC,ADQA,UCRMyI,ADQAvD,eAAe,KAAKvT,CCRC,KAAK8W,EDQhC,gBCRA;AACA,AIvDA,AL+DA,AOnFF,ALpBE,MKoBIgJ,IFoBAnU,AL+DEyH,AEvGA0H,GKoBKxkB,EFoBF0nB,OEpBW+B,ALpBF,EFuGE,GCPlB,EDOuB5N,GCPlBnS,IM5EI,CFoBP,AL+DJ,AOnFmC,EFoBnC,CJwDE,CAActF,AIxDmB,AHxCTigB,CD+F1B,CM3EW,CN6ET,AM7EJ,KN6ES3a,GCjGW,CAAlB,IDiGE,CAAcrF,CAFhB,EAGE,KAAK6a,iBAHP,EAIExM,SAJF,CAIY,sBAJZ;AAKA,AI3DE,AEpBJ,YFoBUgB,YAAY,GJ2DT,AM/EH8V,IAAV,CN+EkB9f,CM/EF,KRgJU,EEjEb,CAActF,CAAzB,EAA4B,KAAKsF,AI3D/B,OEpBJ,CN+E8B,CAAcrF,CAA1C,EAA6C,KAAK8a,UAAlD,EAA8DzM,SAA9D,CACE,KAAKgN,qBAAL,GAA6B,MAA7B,GAAsC,KADxC;AAGAc,AI7DEnL,AL+DF,AD6DA,AGpKA,UAAMlS,CFuGD0Y,EK/DE5F,AN6HL,KAAKoB,AGrKO,CFuGd,GAAgBwC,CEvGG1W,CHqKjB,CEhEiBuP,AFgELhJ,GGrKd,CFuGA,GK/DE,CAAyBgK,AN6HzB,CEhEF,AFgEuBrP,CEhEM,AFgE3B,GACA,GEjEF,CI7DE,CN8HKgT,IKzHkB3N,ELyHvB,CAAY6Q,OKzH+C,ELyH3D,CAAsBlW,CADtB,IAEC,KAAKiT,OAAL,CAAapO,MAAb,GAAsB,KAAKoO,OAAL,CAAaV,SAFpC,CADF;AKtHA,AHwDA,AI7DE,AL+DF,ADiED,AQpJD4S,ALpBE,OKoBGxmB,GHyBCkT,AF7CEhS,CDqGDuc,ADEA1E,EK/DElN,GHxCK,KGwCV,AHxCe3K,EKoBnB,CFoBoBN,AEpBE,ALpBpB,EE6CoB,CJ0DpB,CCFA,CAAuB8O,CGxDvB,AJ2DE,EKhEA,CAAyBgB,EEpB7B,EAAmC,CNiFjC,CAAiC,GI7D/B,QEpBoC,MPoFrB,KAAKmI,ECHtB,MDGiB,GAAgBiB,WAA/B,IAA8C/E,SADhD;AIzDA,ACLE,ALgEF,AOpFAwR,ALpBA,QKoBIG,EHyBAhD,AF7CA7C,CFwGC/H,IKhEI,ELgET,AOpFA,CAAcje,CFoBZ,CLgEYof,AOpFE0M,ELpBAxmB,GE6CGY,EGzBnB,ALpBA,EKoByBlG,EAAE+rB,EHyB3B,AJ2D2BtgB,KOpF3B,KPoFc,CAAwBI,QAAxB,IAAoCqO,SAAlD;ACFA,AI7DC,ALgED,AOpFD,ALpBC,GKkBF,IFiBE,GJkEMrU,CDGDgG,AExGA0B,EGwCE,GJ6D+BvL,GDGtC,AExGA,GFwGgB6J,AExGA,CDqG6B/B,CCrG7C,MFwGA,KCHA;AGvDA,AHwDAjE,AI7DE,ALgEF,AOpFH,CAVD,SN2FQgd,CGxDCsF,AJ2DA9J,IKhEI,CLgET,CAAW9Z,CCHX,CACK,CI9DH,IJ8DQoB,ADEV,CAAmB,CCHnB,GGxDA,CAAwBpB,KHyDRoD,EGzDhB,CAAgC,EHyDXmb,GFiES,EEjEd,CAAW,KAAKlB,QGzDa,IHyD7B,CADhB,EAEE,KAAK/V,QAAL,CAActF,CAFhB,EAGE,KAAKsF,QAAL,CAAcrF,CAHhB;AGvDE,AH4DH,AIjEE,AL+DkB,ADgEnB,AGvKAmgB,YE6CQzH,CL0HD,EChEmBZ,CEvGhB/Z,EHuKEiV,CChEkB1X,II1DX+J,AF7CnB,CHuKO,AGvKW,CFuGQ,ADgEPA,CChEkBqO,ODgErC,CK1H8BrE,CJ0DJ,CAAP,OEvGU,CE6CW2C,qBAAtC;AACA,ACLH,AL8DoB,ADiEpB,AQnJH,ALpBM,IKoBAwT,GPkFF,KIzDM9M,AF7CA1R,IKoBQ,ILpBAlI,IE6CI,CAAhB,AGzBA0mB,ALpBI,CAAczF,CE6CC,KF7Cf,CAAqBP,CKoBb,GAAM,KLpBd,CAAJ,EAAqC;AE8CrC,AJyDH,AOlFD,ALpBM,MKoBA0E,MHyBExL,KGzBS,ALpBNgH,ME6CQ2C,IF7Cb,CAAgBrb,OE6ClB,AF7CE,EE6C2B,GGzBH,GAAb,EAAkB,EAAlB,EAAsB,IAAtB,EAA4Bye,KAA5B,CAAkCnmB,KAAlC,CAAjB;AH0BM+iB,AGzBN,ALpBK,MKoBCqD,GLtBF,MAEO,EKoBM,QHyBIhN,QAAf,OGzBwB,GAAb,EAAkB,ENoFR,AMpFV,EAAsB,GAAtB,EAA2B+M,KAA3B,CAAiCnmB,KAAjC,CAAjB;AH0BMuS,AH2DJ,AMpFF,ALpBM,aDwGGyI,ICxGEoF,IKoBFwE,ENqFL,CIpMoB,AN8BJ,EK0GE7U,CF7ChB,CAAgB,CKoBtB,EAAmBqW,IHyBb,IGzBN,EAA6B,GNqFf,CAAV,EAAa,CAAb,EAAgB,YCzG0BlG,QDyGjB,CAAT,ACzGE,EDyGUpF,ACzGyBpT,QAAQlI,KAA3C,CDyGF,ACzGd,EDyG0C,CAA5B,EAA+B,CAA/B,EAAkC,KAAKoc,IAAvC,CAAhB,CADK,CAAP;AG1DG,AH6DJ,AIrMC,AN8BA,AQiFAqE,ALpBI,YKoBI,CF/GD,AN8BA,AQiFE,CAAC,GAAD,ALpBAG,CG3FG5V,AN8BAkJ,CQiFG,GAAN,CAAD,CRjFD,CM9BA,AN8BYwC,AQiFE,CF/GD9Q,AE+GE,CLpBlB,CAAgBsC,CKoBC,EAAM,CF/G3B,ALgMUhD,ADlKH,EQiFc,CRjFQ,AQiFrB,ALpBJ,EFqGmB0P,AOjFU,CAAC,ERjFAR,CQiFD,EAAM,GAAN,CAAzB,CPiFkC,COjFG,CAAC,ERjF9C,CQiF6C,EAAM,GAAN,CAArC,EAAiD,CAAC,GAAD,EAAM,GAAN,CAAjD,CADmB;AH2B1B,ACxIF,ALgMC,ADlKD,AQiFCuO,ALpBG,OEsCH,GJ+DM5I,KOjFK,OPiFO,KAAKpB,MAAvB;AACA,AOpF2B,GAA7B,EAGGgO,KAHH,CPoFOhO,AOjFEnY,KAHT,CPoFE,GAAc,qBAAU,CAAV,EAAa6W,SAAb,EAAwB,KAAKsB,MAAL,GAAczT,MAAM0P,SAA5C,CAAd;AIvDA,AJwDA,AOjFH,ALpBK8L,CKaN,SPwFU1G,GIxDCjH,OF7CO7K,CFqGG,CAAC6R,IIxDlB,EF7CsBhZ,GAApB,GFqG4B,KAAK4X,MAAlB,CCIO,GDJqB,CAA7C;AIvDD,AH4DC,ADJA,AErGC,OATD,GDkHI,CDJCpS,ICII8V,IDJT,GAAgB,EKjMgB,AN8BR,GCmKH9V,ECIjB,KAAwB,CDJZ,CAAcG,ECI9B,CDJgB,CCIkB,ADHhC,OCGuC,CAAP,SDHxB+P,qBAAR,CAA8BuD,WAAWpF,SAAzC,EAAoD,KAAK8D,QAAzD,CADc,CAAhB;ACKA,AIrMA,ALmMD,ADrKC,AQkFJ,IAAMmO,KAAK,INsFL,AItMK,AN8BA,IEyKLpL,CIvMU1N,AN8BAgG,AQkFV8S,EAAK,GAAM,GNwFT,KF1KG,CM9BA,CAAoBpa,CN8BC,CAA5B,MM9BA,MJyMM,CADF,EAEE,CAFF,EAGE,oBACE,KAAK4P,cADP,EAEE,KAAKA,cAAL,GAAsBd,aAFxB,EAGE,CAHF,EAIE,CAJF,EAKE,KAAKa,IALP,CAHF,CADF,CAFF;AAgBD,AIpNA,AN8BA,AQkFD,ALpBE,MKoBE1f,ILpBE,CAACgkB,EKoBIlgB,KAAX,EAAkB,CLpBDygB,MAAV,CAAiBlgB,GAAjB,CAAL,EAA4B;AKqB9BP,ALpBI,UKoBI,GLpBCogB,UAAL,CAAgB,CE4CfrgB,KAA+BwO,AGxBlB,GAAV,EAAe,CHwB2B,EGxB1C,EAAoBrS,OAAOoqB,WLpBSpG,KKoBpC,CAAR,GLpBoB,EAAmC3f,GAAnC,CAAhB;AE6CFR,AGxBF7D,ALpBG,SKoBI8D,CHwBDiE,IGxBN,GAAejE,EHwBb,GGxBF,GPkFKD,KAA+B;AIzDlCA,AJ0DA,AOlFF,MAAM8lB,IHwBAhQ,AJ0DEK,GOlFK7Z,IHwBX,GAAc,AJ0DE,EOlFIypB,EFjHY,AN8BT,GK2GvB,SGxBW,CAAwB,MAAxB,CAAb,EPkFiC,KAAK5N,QAApB,CAAhB,ECiBgD;AG1EhDnY,AH2EA,AIpNA,AN8BA,AQmFF,ALpBE,UE4CIijB,AH2EE/F,GIpNC,AN8BA,AG+DA,IAAP,CE4CA,ACzIY1P,AN8BAiG,GK2GG,EH2EI,CAAC,GMnGZqS,CHwBR,AL3GO,CEsLkB1N,EFtLA,AQmF3B,CFjHS,AN8BP,CM9B2BjM,AEiHb,ENmGK,GAAe6K,GIpNlC,SJoNA,MMnGF;AHyBE,AH2EA,AIpND,ALmMChX,ADrKD,AQmFDC,ALpBC,QKoBKumB,EPkFA9M,GCkBF,GMpGJ,CAAeoM,CNoGNlK,GDlBP,AOlFF,CPkFkB,EAAhB,KI1DanU,IAAb,CAAkBzH,GAAlB,EAAuB,CH4ErB,GACA,CG7E0ByiB,IH6ErBrK,CG7EP,KH6EE,GAAc8E,UADd,GAEA,MAAMlG,YAAN,GAAqBkG,UAArB,GAAkCA,UAHpC;AAKD,ADrBCld,UAAIkE,SAAJ;AIzDA,AJ0DAlE,AOlFFC,QAAMwmB,EPkFA9M,OAAJ,AOlFF,CPmFI,AOnFY,KPmFP3T,QAAL,CAActF,CADhB,EAEE,KAAKsF,MOpFT,EPoFI,CAAcrF,CAFhB,EAGE,KAAKiZ,GAAL,CAASpU,MAAT,GAAkB,GAHpB,EAIE,KAAKoU,GAAL,CAASpU,MAAT,GAAkB,GAAlB,GAAwB,GAJ1B,EAKE,CALF,EAME,CANF,EAOE,IAAI1D,KAAK4D,EAPX;AIzDA,AJkEA1F,AO1FFC,QAAMwmB,EP0FAnb,OO1FN,CAAgB,CP0Fd,GAAgB,ED9KO,KG+DV,aF+Gb,OO1FF;AHyBE,AJkEAtL,AD9KA,AG+DA/C,UF+GIuO,GD9KG1J,AG+DAiE,CF+GP,ID9KYjD,CG+DZ,CAAc,CH/DP,CAAS,EG+DhB,GH/DqB0Q,aAAL,GAAqB1R,KAAK4D,EE0Ld4W,AF1LrB,IAAyC,KAAK5I,IE0LN1N,UAA2B,KF1L1E;AE2LA,AF1LD,AQoFDgf,ALrBE,UD2HIhf,GC3HG,IAAP,KD2HgBsW,YAAYla,MAA5B,EAAoC;AG7EpC,AH8EE,ADZF,AE/GD,WF+GMoW,ICYI8D,CDZT,CACG1e,CK7Oc+lB,KL4OjB,CACU,GCWWxG,kBAAZ,CAA+BnX,QAA/B,CAAP;AG7EF,AH8EC,ADZS,AO1FZ/F,QAAMR,KAAN,EP0FiB,0BAAekZ,EAAE9E,YAAF,GAAiBsC,OAAhC,IAA2C,CAAhD;AIjEV,AJiEU,AOzFb,CAdD,MPsGI,EAEGzX,OAFH,CAEW,OD/Kc;AE4LzB,ADbW,AD9KX,UE2LM0e,GF3LC,EC8KW3E,GD9KNjF,CC8KUtX,GCaJ8J,CDbA,CAAShG,AEvOR,GFuOD,CAAP,GD9KX,EE2L6Bsc,YAAYla,MAAzC;AG7EA,AH8EA,ADdW,AD7KZ,AQqFHkkB,AL9II,OFoOA,GI9DMpD,AH8EA7F,GCpPC,KAAK3V,IEsKM,IFtKX,CEsKgByb,AH8EA7G,ACpPF,CAAd,EAAiB7c,KAAxB,IDoPmCid,KG9EjB,EAAlB,WH8EuB,CAA+BJ,YAAYla,MAA3C,CAAvB;AG7EA,AH8EA,ADdA,AEtOD,UEsKOghB,CJgED5K,ECcE,GDdP,CACG5a,MIjEgBqkB,AJgEnB,CACU,MCaK/L,kBG9E6BgN,GH8ErC,CAA8B9F,KG9ErC,IH8EO,EAAyCC,cAAzC,EAAyDlX,GAAzD,CACLmW,YAAY9b,GADP,CAAP;AG7EAR,AHgFD,ADhBW,AOxFd,UHwBQ0Z,KJgEW,MIhEf,CAAgBsI,gBAAgBve,GAAhB,AJgEckV,CIhEM,CJgEJ9E,YAAF,GAAiBsC,OAAhC,KAA4C,CAAjD;AIhE0B,AJgE1B,AOvFd,OPsFI,EAEGzX,MIjE2C0D,CJ+D9C,CAEW,OIjE4C8gB,SAAnB;AAAA,AJiEzB,AOvFf,IAAIroB,GHsBgB,CAAhB,GGtBO6rB,GAAX,CPuFsBjO,COvFN,GPuFUvc,IAAJ,CAAS8D,AEtOV,GFsOC,CAAP;AIhEXA,AJgEW,AOtFbnF,AL/IE,OFmOA,EOpFK6rB,CHsBDniB,EGtBN,CAAWoiB,AL/IF,KAAKjf,EK+Id,CHsBE,AGtBiB,GHsBCoa,EFrKX,CAAc,KAAKpa,CK+IH,MNuGN,CGjFiBE,AFrKb,CAAcxF,MAAd,CEqKH,EAAlB,AFrK4C,CAArC,EAAwC5B,GAA/C;AEsKAR,AHiFA,ADjBA,AOtFA7D,AL/ID,UEqKKknB,AHiFA,CAAC,ADjBAxJ,AOtFE+M,KNuGGlL,EF7OOtI,CC4NjB,AOtFA,CPsFcpT,AOtFE6mB,GPsFhB,CIhEA,EGtBA,CHsBsB,CAACrY,AHiFvB,EAAwB,EGjFF,GAAQ0T,eAAR,GAA0BgB,SAA3B,GAAwCE,UAA7D;AACApjB,AHiFA,ADjBD,AOtFA,GAFD,OHwBMwE,AHiFE8Y,SGjFN,GAAgByE,YHiFc,GGjF9B,EHiFmCrG,YAAL,CAC3BjL,oBAD2B,GAE3B7S,MAF2B,CAEpB;AGlFV,AHkFU,AMxGZ,eNwGoBiQ,KAAKP,aAAb;AGjFV,AHiFU,AMvGZzS,ONqGgC,CAA9B,CMrGK6rB,GAAP,CAAWI,MAAX,CAAkB,ILhJG,QKgJG;AHuBtB9mB,AHiFA,AMvGA7D,ALhJA,UEsKIsI,AHiFE0N,CMvGCyU,ELhJA,GEsKP,EFtKYlf,CKgJZ,CAAgBmf,INuGI,EMvGpB,ALhJO,CAAcvkB,EFqOdtC,IErOA,CFqO+B,AEpOpC,QDsPyBsd,ECtPxBlb,MAAD,EAASuF,OAAT,IDsPkB,CAApB;AGhFD,AHiFC,ADlBA3H,AOrFD,ALhJG,GK8IJ,OPuFMnB,CCkBC8c,GDlBL,CErOuBvZ,QDuPvB,CCvPgCuF,EDuPZwK,MCvPoB/P,KDuPxC,CCvPE;ADwPH,ADlBCpC,AOrFH,ALjJK,OADK,EAEL,CFqOEkE,AEvOG,CAAP,QFuOA;AACA,AEpOD,6BFoOciD,MAAb,CACEnH,GADF,EAEE,KAAK4Z,GAAL,CAASvU,MAAT,CAAgB3E,CAFlB,EAGE,KAAKkZ,GAAL,CAASvU,MAAT,CAAgB1E,CAHlB,EAIE,KAAKiT,OAAL,CAAapO,MAJf;AAMAxF,UAAIsL,SAAJ,GAAgB,KAAKsI,OAAL,CAAa5P,KIrEH,AJqEV,CAAmB4D,QAAnB,EAAhB;AIpEA,AJqEA5H,UIrEMsjB,AJqEF9X,IAAJ,YCYIwN,CGjFmBlX,KAAKG,KAAL,CAAW,IHiFNqa,CGjFWla,MAAL,GAAc6f,GHiFD,mBGjFxB,CAAvB;AACA,AHiFA,ADZAjiB,UIrEMujB,AHiFAlP,ADZFyF,IAAJ,QCYkBd,MGjFMsK,WHiFW,IAAnC,EGjFyCrB,sBAAzC;;AAEA,AHiFA,ADZA,UIrEMuB,AJqEAzJ,CCYDiC,ODXH,UItEsB,IHiFxB,CGjF6B5Z,EHiFA,IGjFL,GAAcmhB,EJsErBvQ,UAAU,ECYzB,CGlFF,AHiF6B,EAE3B8H,ADb8B3C,QAA9B,IAA0CnF,OAA1C,GAAoD,GCWzB,EAG3B,ADdyDY,KCcpDoI,EDd+C,CAAaxW,MADnE,YCeE,GAA6BwT,cAHF,CAA7B;AGhFA,UAAMyK,QF1MWxD,QE2MfsD,kBAAkBtB,sBAAlB,GAA2C,KAAK7f,MADlD;AHsFA,ADfA,UCgBE,KAAK4Z,qBAAL,IAA8B,CAA9B,IACA,KAAKuB,iBAAL,CAAuBjB,WAAvB,CAFF,EAGE;AGtFF,AHuFE,ADlBFtc,UIrEMkjB,AJqEFhf,GCkBGoV,MDlBP,GIpEEkK,EHsFA,CAAiBxM,YAAjB,EAA+B3C,CGtFboP,QHsFlB,EAA0CnH,GGtF1C,GACI,KAAKla,AHqFT,MGrFI,GAAcmhB,eADlB,GAEI,KAAKnhB,MAAL,IAAemhB,kBAAkBtB,sBAAjC,CAHN;AHwFC,ADlBD,OCaA,MAKO,gBDlBM9a,MAAb,CACEnH,GADF,EAEE+Z,QAAQ,KAAKH,GAAL,CAASvU,MAAT,CAAgB3E,CAAxB,GAA4B,KAAKkT,OAAL,CAAa0D,IAF3C,EAGE,KAAKsC,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GAAoB,KAAKiT,OAAL,CAAayD,IAHnC,EAIE,KAAKzD,OAAL,CAAa2D,SAJf;AIjEA,AHoFE,ADbF,aIvEO2L,AHoFA5J,SGpFP,EHoFE,CAAiBvC,IDbN5P,MAAb,CACEnH,CCYA,EAA+BqU,ADbjC,EAEE0F,OCWA,CDXQ,CCWkCuC,IDX7B1C,GAAL,CAASvU,GCWjB,GDXQ,CAAgB3E,CAAxB,GAA4B,KAAKkT,OAAL,CAAa0D,IAF3C,EAGE,KAAKsC,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GAAoB,KAAKiT,OAAL,CAAayD,IAHnC,EAIE,KAAKzD,OAAL,CAAa2D,SAJf;AItED,AHoFE,ADRDvX,UAAIsL,SAAJ,GAAgB,KAAKsI,OAAL,CAAa5P,KAAb,CAAmBkJ,MAAnB,CAA0B,GAA1B,EAA+BtF,QAA/B,EAAhB;AACA5H,UAAIwL,IAAJ;ACSA,UAAI,KAAK4M,MAAL,KAAgB,CAApB,EAAuB;AACrB,ADRF,aCQO2D,WGhOY,CHgOjB,IAAqB/C,cAArB;AG/NF,AHgOC,ADRDhZ,OCMA,GDNIkE,GIxNG,AHgOA,KGhOKue,CJwNZ,IIxNO,CAAWrgB,MAAlB;AACD,AHgOG,ADRFpC,UAAIqE,GCQG0X,GDRP,CACEhC,QCOA,ADPQ,GCOY,CAApB,CDPaH,GAAL,CAASvU,MAAT,CAAgB3E,CAAxB,GAA4B,KAAKkT,OAAL,CAAa8D,UAD3C,EAEE,KAAKkC,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GAAoB,KAAKiT,OAAL,CAAa6D,MAFnC;ACSC,ADLDzX,UAAI6V,gBAAJ,CACEkE,QAAQ,KAAKH,GAAL,CAASvU,MAAT,CAAgB3E,CAD1B,EAEE,KAAKkZ,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GAAoB,KAAKiT,OAAL,CAAa6D,MAAjC,GAA0C,KAAK7D,OAAL,CAAa+D,UAFzD,EAGEoC,QAAQ,KAAKH,GAAL,CAASvU,MAAT,CAAgB3E,CAAxB,GAA4B,KAAKkT,OAAL,CAAa8D,UAH3C,EAIE,KAAKkC,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GAAoB,KAAKiT,OAAL,CAAa6D,MAJnC;ACMD,ADACzX,UAAIwE,SAAJ,GAAgB,KAAKoP,OAAL,CAAa4D,cAA7B;AACAxX,UAAIuE,WAAJ,GIjOmB,AJiOD,KAAKqP,OAAL,CAAa5P,KAAb,CAAmBkJ,MAAnB,CAA0B,GAA1B,EAA+BtF,QAA/B,EAAlB;AIhOA,AJiOA5H,UAAIyE,GIjOG,GJiOP,EIjOYge,KAAL,CAAWhjB,KAAlB;AACD,sCHgOiB6c,aAA4B;AAC5C,ADCA,UCDMkB,wBAAwB,KAAKC,uCAAL,EAA9B;AACA,ADCAzd,UCAEsc,ADAEpY,SAAJ,GCAc0N,EAAZ,KAAmB,KAAK+J,YAAxB,IACAW,YAAYla,MAAZ,GAAqBwY,kBAArB,GAA0C4C,qBAF5C,EAGE;AACA,ADFF,WAAKxD,ECEEiC,WGpOU,AHoOf,ADFF,CAAmBjc,ECEEmb,CDFrB,EAAwBpB,QAAQ,CCECqB,IDFIxH,OAAL,CAAapO,MAAb,GAAsB,CAAtD,CCEE;AGnOF,AHoOE,ADFF,WAAKwU,EIlOE,EHoOE,GGpOGyI,CHoOV,IGpOK,CAAWjiB,AJkOlB,CAAmBR,EIlOnB,CJkOA,EAAwB+Z,QAAQ,KAAKnG,OAAL,CAAapO,MAAb,GAAsB,CAAtD;AIjOD,AHoOE,ADFDxF,UAAIwE,SAAJ,GAAgB,KAAKoP,OAAL,CAAakE,aAA7B;AACA9X,UAAIuE,WAAJ,GAAkB,KAAKqP,OAAL,CAAa5P,KAAb,CAAmBkJ,MAAnB,CAA0B,GAA1B,EAA+BtF,QAA/B,EAAlB;ACGA,ADFA5H,UCEM0d,ADFFjZ,MAAJ,gBCE4B6X,YAAY5J,yBAAZ,CAC1B,KAAKkJ,sBADqB,CAA5B;wBGpOuC;AACvC,AHuOA,ADJA5b,UInOI,AHuOE2d,ADJFxe,KInOKmjB,EJmOT,gBInOI,CAAwBlgB,AHwO1Bob,MGxOF,EAAoC,gBHwOV,KAAKhC,iBAD/B;AGtOE,AJmOH,YInOS/B,WACJ,KAAK6I,kBAAL,CAAwBhgB,MAAxB,CACE,UAAC6X,GAAD,EAAMnK,SAAN;AAAA,AHuON,UACE0N,OGxOwBvD,MAAMnK,UAAUjV,AHyOxC2iB,KGzOI,eHyOgB/K,qBAApB,GAA4CgL,qBAF9C,EAGE;AG1OI,AH2OJ,SG5OE,EAEE,CAFF,CH4OG1B,GGzOC,KAAKqG,GHyOX,GAAmBnH,YGzOb,AHyOyBE,CGzODjZ,MAJ9B,qBH6OA;AGxOA,AHyOA,aAAK8Z,EGzOE,KAAK9Z,IHyOZ,CAAiB5E,CGzOV,GAAcic,AHyOrB,CAAsBiE,IDTZ1d,GIhOV,EJgOyCia,OAAe,GCSxD;AGxOD,AHyOC,ADTFja,UAAIqE,KCSK,CDTT,CACE4V,ECQA,MDRQ,GAAR,GAAc,KAAKL,GAAL,CAASvU,MAAT,CAAgB3E,CADhC,EAEE,KAAKkZ,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GAAoB,KAAKiT,OAAL,CAAagE,OAFnC;ACUC,ADND5X,UAAI6V,gBAAJ,CACEoE,QAAQ,GAAR,GAAc,KAAKL,GAAL,CAASvU,MAAT,CAAgB3E,CADhC,EAEE,KAAKkZ,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GACE,CAAC,KAAKiT,OAAL,CAAagE,OAAb,GAAuB,KAAKhE,OAAL,CAAaiE,UAArC,IAAmD,IAHvD,EAIEoC,QAAQ,KAAKL,GAAL,CAASvU,MAAT,CAAgB3E,CAJ1B,EAKE,KAAKkZ,GAAL,CAASvU,MAAT,CAAgB1E,CAAhB,GAAoB,KAAKiT,OAAL,CAAaiE,UALnC;AIlOA,AJyOD,aIzOQ,KAAKzV,MAAL,IAAe,oBAAU0U,SAAV,GAAsB,GAArC,CAAP;AACD,AHyOC,UAAIwF,YAAY1K,EAAZ,kCAAJ,EAA4C;AAC1C,YAAMgM,eAAetB,YAAY1K,EAAjC;AACA,YAAMiM,YDhMe,QCgMKD,aAAaE,2BAAb,EAA1B;AACA,ADhMF,UAAM5D,ECgMA2D,QDhMU,KAAKrF,ICgMnB,CDhMc,CCgMS,ED/LrB,KAAKA,KAAL,CAAWlW,MAAX,CAAkB,UAAC6X,GAAD,EAAM1B,GAAN;ACgMlB,ADhMkB,cCgMZsF,CDhM0B5D,MAAM1B,IAAI9B,UAAxB,OCiMhB2F,YAAYla,MAAZ,GAAqByb,kBAAkBlL,qBADzC;ADhMkB,OAAlB,EAAsD,CAAtD,IACA,KAAK6F,KAAL,CAAWpW,MAFC,GAGZ,CAHJ;ACoMI,ADhMJ,UAAMgY,ICgME2D,EDhMI,EIrIKoE,GJqIAvO,OAAL,CAAawD,MAAb,GAAsB8C,ICgMEyD,GDhMpC,kBCgMI,EAAuD;AACrD,ADhMN,aAAO,ICgMI1B,WAAL,GAAmBd,GD/LvB,KAAKnV,IC+L8BqV,ID/LnC,CAAc3a,CADT,EAEL,KAAKsF,QAAL,CAAcrF,CAAd,GAAkB,EC8Ld,GD9LmBiT,OAAL,CAAasD,SAA/B,GAA2CkD,GAFtC,CAAP;ACiMM,AD7LP,iBC6LY8B,WAAL,CAAiB1e,IAAjB,CAAsBqgB,iBAAtB;AACA,mBAAO,IAAP;AACD;AACF,wBD9La;AAChB,UAAMhH,YAAY,KAAKA,SAAvB;AC+LE,YAAMmH,oBAAoBJ,aAAaK,2BAAb,EAA1B;AACA,AD9LF,YC8LMD,CD9LC,oBC8LoBA,CD9LTnH,UAAUnW,CAArB,EAAwBmW,QC8LkB,ED9LRlW,CAAlC,CC8LL,CD9L0C,CC8LW,ID9LNiT,OAAL,CAAapO,MAAlD,CAAP;AC+LI,AD9LL,cC8LW0Y,4BACJ5B,YAAYla,MAAZ,GAAqB4b,kBAAkBlL,0BADzC;AAEA,cAAIoL,4BAA4BP,qBAAhC,EAAuD;AACrD,iBAAK1B,WAAL,GAAmBd,YAAYE,4BAA/B;AACA,iBAAKa,ODhMS,ICgMd,CAAiB1e,IAAjB,CAAsBwgB,iBAAtB;AACA,ADhMN,aAAO,KAAK7F,CCgMC,IAAP,GDhMN;ACiMK,ADhMN;ACiMI;AACF;wBDhMwB;ACkMzB,ADjMA,UCiMI,GDjMG,ECiMEgG,eDjMMjI,qBCiMX,ADjMG,CCiMuCoG,ADjMT,CAA9B,EAAiC,KAAKnE,GCiMzC,CAAJ,EAA4D,EDjMrD,CAAP;ACkME,ADjMH,aCiMQ8D,WAAL,GAAmBd,YAAYG,0BAA/B;AACA,eAAO,IAAP;AACD;wBDjMqB;ACmMtB,ADlMA,aAAO,KAAKjB,WAAL,CAAiBrf,KAAjB,CAAuB,KAAKod,MAA5B,CAAP;ACmMA,ADlMD;ACmMC;AACA;AACA,wBDnM4B;ACoM5B,ADnMA,aAAO,KAAKC,gBAAZ;ACoMA,ADnMD;ACoMC;AACA;AACA;AACA;AACA;AACA,kBDhSiBH;ACiSjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO,KAAP;AACD;;;yDAEoCoE,aAA4B;AAC/D,UAAM8B,kBAAkB,KAAKjT,QAAL,GAAgBzN,SAAhB,2BAAxB;AACA,UAAM2gB,WAAW,KAAKtB,iBAAtB;AACA,UAAMuB,YAAYD,SAAShZ,MAA3B;AACA,UAAMkZ,gBAAgB,KAAKC,+BAA3B;AACA,UAAMC,aAAaJ,SAASK,UAAT,CAAoBhE,aAApB,CAAnB;AACA,UAAMiE,mBAAmBP,gBAAgBQ,sBAAhB,CAAuCH,UAAvC,CAAzB;;AAN+D;AAAA;AAAA;;AAAA;AAQ/D,6BAAoBE,gBAApB,8HAAsC;AAAA,cAA3B9d,KAA2B;;AACpC;AACA,cAAIA,UAAU,IAAd,EAAoB;;AAEpB;AACA,cAAMge,gBAAgBhe,MAAMkc,iBAA5B;AACA,cAAM+B,iBAAiBD,cAAcxZ,MAArC;AACA,cAAI,CAACgZ,SAASU,gBAAT,CAA0BF,aAA1B,CAAL,EAA+C;;AAE/C;AACA;AACA;AACA,cAAMG,qBAAqBne,MAAM2d,+BAAjC;;AAEA;AACA,cAAMS,sBAAsBX,UAAU1Y,UAAV,CAAqBiZ,cAAcxZ,MAAnC,CAA5B;AACA,cAAM6Z,mBAAmBX,cAAc3Y,UAAd,CAAyBoZ,kBAAzB,CAAzB;AACA,cAAIE,mBAAmBD,mBAAvB,EAA4C;;AAE5C;AACA;AACA;AACA,cAAME,iBAAiBb,UAAU1Y,UAAV,CAAqBoZ,kBAArB,CAAvB;AACA,cAAMI,sBAAsBN,eAAelZ,UAAf,CAA0B2Y,aAA1B,CAA5B;AACA,cAAIY,iBAAiBC,mBAArB,EAA0C;AACxC;AACD;;AAED;AACA;AACA;AACA,cACED,iBAAiBC,mBAAjB,GACA;AACA;AAHF,YAIE;AACA;AACD;;AAED;AACA,cAAID,mBAAmBC,mBAAvB,EAA4C;AAC1C,mBAAOtd,KAAKC,MAAL,KAAgB,GAAvB;AACD;;AAED;AACA;AACA;AACA,cAAI,KAAKga,YAAL,GAAoBlB,QAApB,IAAgC,CAACha,MAAMwe,SAA3C,EAAsD;AACpD,iBAAKC,kBAAL;AACA,mBAAO,KAAP;AACD;;AAED;AACA;AACA,cAAIze,MAAM0e,YAAN,CAAmB,IAAnB,CAAJ,EAA8B;;AAE9B,eAAKrD,WAAL,CAAiB1e,IAAjB,CAAsBqD,KAAtB;AACD;AAjE8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmE/D,UAAI,KAAKqb,WAAL,CAAiB9Z,MAArB,EAA6B,OAAO,IAAP;;AAE7B,aAAO,KAAP;AACD;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;yCAEqB;AACnB,WAAK4Z,qBAAL,GAA6BlB,yBAA7B;AACD;;;gCAEW0E,cAAsBnL,WAAmBiI,aAAmB;AACtE,UAAM9C,YAAY,KAAKpB,MAAvB;AACA,WAAKA,MAAL,GAAc,qBACZ,CADY,EAEZtB,SAFY,EAGZ,KAAKsB,MAAL,GAAcoH,eAAenL,SAHjB,CAAd;AAKA,UAAMoF,WAAW,CAACD,YAAY,KAAKpB,MAAlB,IAA4B,CAA7C;AACA,WAAKwD,sBAAL,GAA8B,qBAC5B,CAD4B,EAE5BU,YAAYla,MAFgB,EAG5B,KAAKwZ,sBAAL,GAA8BnC,WAAWpF,SAHb,CAA9B;AAKD;;;sCAEiBiI,aAAmB;AACnC,UAAI,KAAKV,sBAAL,KAAgCU,YAAYla,MAAhD,EAAwD;AACtD,YAAI,KAAKqd,UAAT,EAAqB;AACrB,aAAKC,wBAAL,CAA8BpD,WAA9B;AACD;AACF;;;iCAEY;AACX,UAAI,KAAKmD,UAAL,IAAmB,KAAK5D,IAAL,IAAa,KAAKC,cAAL,GAAsBd,aAA1D,EAAyE;AACvE,aAAK2E,OAAL;AACD;AACF;;;6CAEwBrD,aAAmB;AAC1C,UAAM5K,WAAW4K,YAAY1K,EAA7B;AACA,UAAMO,cAAc,KAAKwJ,YAAzB;AACA,UAAIjK,SAAS5D,mBAAb,EAAkC;AAChC4D,iBAASkO,gBAAT,CAA0B,IAA1B;AACA,YAAIlO,aAAaS,WAAjB,EAA8B;AAC5B,eAAK0N,mBAAL;AACD;AACF;AACF;;;0CAEqB;AACpB,WAAKC,KAAL;AACD;;;8BAES;AACR,WAAK3U,QAAL,GAAgBC,WAAhB,CAA4B,IAA5B;AACD;;;4BAEO;AACN,WAAK0Q,cAAL,GAAsB,KAAKD,IAA3B;AACD;;;wBA1f8B;AAC7B,aAAO,KAAKH,YAAZ;AACD;;;wBAEuB;AACtB,+BAAU,KAAKA,YAAf,EAA6B,6BAA7B;AACA,aAAO,KAAKA,YAAL,CAAkByB,kBAAlB,CAAqC,KAAKvB,sBAA1C,CAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;wBAEkC;AAChC,UAAMU,cAAc,KAAKZ,YAAzB;AACA,+BAAUY,WAAV,EAAuB,6BAAvB;AACA,UAAMyD,eAAe,KAAKtC,uCAAL,EAArB;AACA,aAAO,KAAKuC,6BAAL,CAAmC1D,WAAnC,EAAgDyD,YAAhD,CAAP;AACD;;;wBAE+B;AAC9B,UAAM1a,SAAS,KAAKyX,kBAApB;AACA,aAAO,qBAAWzX,OAAO3E,CAAlB,EAAqB2E,OAAO1E,CAA5B,EAA+B,KAAK8a,UAApC,CAAP;AACD;;;wBAE8C;AAC7C,UAAMa,cAAc,KAAKZ,YAAzB;AACA,+BAAUY,WAAV,EAAuB,6BAAvB;AACA,UAAMyD,eAAe,KAAKtC,uCAAL,EAArB;AACA,aAAO,KAAKuC,6BAAL,CAAmC1D,WAAnC,EAAgDyD,eAAe,CAA/D,CAAP;AACD;;;wBAEmC;AAClC,aAAO,KAAKnE,sBAAZ;AACD;;;wBAEwC;AACvC,+BAAU,KAAKF,YAAf,EAA6B,4BAA7B;AACA,aAAO,KAAKA,YAAL,CAAkBtZ,MAAlB,GAA2B,KAAKwZ,sBAAvC;AACD;;;wBAEqC;AACpC,aAAO,KAAKD,YAAZ;AACD;;;wBAEmB;AAClB,aAAO,KAAKvD,MAAZ;AACD;;;wBAEwB;AACvB,aAAO,KAAKrd,KAAL,KAAe,CAAtB;AACD;;;wBAEyB;AACxB,aAAO,KAAKghB,YAAZ;AACD;;;wBAEmC;AAClC,aAAO,KAAKE,WAAZ;AACD;;;wBAsEyB;AACxB,aAAO,KAAKH,cAAL,KAAwB,IAA/B;AACD;;;;;;AA5JkBP,UACZzE,YAAYA;AADAyE,UAEZJ,cAAcA;kBAFFI","file":"scripts.94fd8154.map","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// @flow\nimport invariant from 'invariant';\nimport type SceneObject from './SceneObject';\nimport type SceneSystem from './SceneSystem';\n\nconst speed = 1;\nconst scale = 1;\nconst repeatUpdate = 1;\n\nexport default class Scene {\n  _canvas: HTMLCanvasElement;\n  _ctx: CanvasRenderingContext2D;\n  _scaleFactor: number;\n  _children: SceneObject[] = [];\n  _isPlaying: boolean = false;\n  _frameHandle: string | null = null;\n  _lastElapsedTime: number | null = null;\n  _systemsByName: { [name: string]: ?SceneSystem } = {};\n  _systems: SceneSystem[] = [];\n\n  constructor(width: number, height: number, scaleFactor: number = 1) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.width = width * scaleFactor;\n    this._canvas.height = height * scaleFactor;\n    this._canvas.style.width = `${width}px`;\n    this._canvas.style.height = `${height}px`;\n    this._ctx = this._canvas.getContext('2d');\n    this._scaleFactor = scaleFactor * scale;\n\n    this._setupVisiblityChange();\n  }\n\n  get width(): number {\n    return this._canvas.width / this._scaleFactor;\n  }\n\n  get height(): number {\n    return this._canvas.height / this._scaleFactor;\n  }\n\n  get scaleFactor(): number {\n    return this._scaleFactor;\n  }\n\n  get isPlaying(): boolean {\n    return this._frameHandle !== null && this._isPlaying;\n  }\n\n  set isPlaying(newValue: boolean) {\n    invariant(\n      this._frameHandle !== null,\n      'cannot set isPlaying without calling start',\n    );\n    this._isPlaying = newValue;\n  }\n\n  get children(): SceneObject[] {\n    return this._children;\n  }\n\n  appendTo(element: HTMLElement) {\n    element.appendChild(this._canvas);\n  }\n\n  hasSystem(systemType: Class<SceneSystem>): boolean {\n    invariant(systemType.systemName, 'system must have name');\n    return (\n      Object.prototype.hasOwnProperty.call(\n        this._systemsByName,\n        systemType.systemName,\n      ) && !!this._systemsByName[systemType.systemName]\n    );\n  }\n\n  getSystem<T: SceneSystem>(systemType: Class<T>): T {\n    const name = systemType.systemName;\n    invariant(name, 'system must have name');\n\n    const system = this._systemsByName[name];\n    invariant(system, `system ${name} not found`);\n    invariant(\n      system instanceof systemType,\n      `system ${name} is wrong instance type`,\n    );\n\n    return system;\n  }\n\n  addSystem(system: SceneSystem) {\n    invariant(\n      !this.hasSystem(system.constructor),\n      'only one system of each type allowed',\n    );\n    this._systemsByName[system.constructor.systemName] = system;\n    this._systems.push(system);\n    system.afterAddToScene(this);\n  }\n\n  removeSystem(systemType: Class<SceneSystem>) {\n    const system = this.getSystem(systemType);\n    system.beforeRemoveFromScene(this);\n    delete this._systemsByName[systemType.systemName];\n    this._systems = this._systems.filter(s => s !== system);\n  }\n\n  addChild(child: SceneObject) {\n    this._children.push(child);\n    child.onAddedToScene(this);\n  }\n\n  addChildBefore(targetChild: SceneObject, newChild: SceneObject) {\n    const index = this._children.indexOf(targetChild);\n    invariant(index !== -1, 'target child must be present');\n\n    this.addChildAtIndex(index, newChild);\n  }\n\n  addChildAfter(targetChild: SceneObject, newChild: SceneObject) {\n    const index = this._children.indexOf(targetChild);\n    invariant(index !== -1, 'target child must be present');\n\n    this.addChildAtIndex(index + 1, newChild);\n  }\n\n  addChildAtIndex(index: number, child: SceneObject) {\n    this._children.splice(index, 0, child);\n    child.onAddedToScene(this);\n  }\n\n  removeChild(child: SceneObject): boolean {\n    const index = this._children.indexOf(child);\n    if (index === -1) return false;\n\n    this.removeChildAtIndex(index);\n    return true;\n  }\n\n  removeChildAtIndex(index: number): SceneObject {\n    const child = this._children[index];\n    this._children.splice(index, 1);\n    child.onRemovedFromScene();\n    return child;\n  }\n\n  update(delta: number) {\n    for (let i = 0; i < repeatUpdate; i++) {\n      this._systems.forEach(system => system.beforeUpdate(delta));\n      this._children.forEach(child => child.update(delta));\n      this._systems.forEach(system => system.afterUpdate(delta));\n    }\n  }\n\n  draw(elapsedTime: number) {\n    this._ctx.save();\n    this._ctx.scale(this._scaleFactor, this._scaleFactor);\n    this._ctx.clearRect(0, 0, this.width, this.height);\n\n    this._systems.forEach(system => system.beforeDraw(this._ctx, elapsedTime));\n    this._children\n      .sort((a, b) => a.getCurrentZ() - b.getCurrentZ())\n      .forEach(child => child.draw(this._ctx, elapsedTime));\n    this._systems.forEach(system => system.afterDraw(this._ctx, elapsedTime));\n\n    this._ctx.restore();\n  }\n\n  start() {\n    this._isPlaying = true;\n    this._frameHandle = window.requestAnimationFrame(this._tick);\n  }\n\n  stop() {\n    if (this._frameHandle !== null) {\n      window.cancelAnimationFrame(this._frameHandle);\n      this._frameHandle = null;\n    }\n    this._isPlaying = false;\n    this._lastElapsedTime = null;\n  }\n\n  _tick = (elapsedTime: number) => {\n    elapsedTime = elapsedTime * speed;\n    const lastElapsedTime = this._lastElapsedTime;\n    if (lastElapsedTime !== null) {\n      const deltaTime = elapsedTime - lastElapsedTime;\n      if (this.isPlaying) {\n        this.update(deltaTime);\n        this.draw(elapsedTime);\n      }\n    }\n\n    this._lastElapsedTime = elapsedTime;\n    this._frameHandle = window.requestAnimationFrame(this._tick);\n  };\n\n  _setupVisiblityChange() {\n    let playOnVisible = false;\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden && this.isPlaying) {\n        playOnVisible = true;\n        this.stop();\n      }\n      if (playOnVisible && !document.hidden) {\n        playOnVisible = false;\n        this.start();\n      }\n    });\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport type Scene from './Scene';\n\nconst constructorIdCounts = {};\n\nconst getNextCount = (name: string): string => {\n  if (!constructorIdCounts[name]) constructorIdCounts[name] = 0;\n  return `${name}@${constructorIdCounts[name]++}`;\n};\n\nexport default class SceneObject {\n  id: string = getNextCount(this.constructor.name);\n  _scene: Scene | null = null;\n\n  getScene(): Scene {\n    invariant(this._scene, 'scene must be present');\n    return this._scene;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  draw(ctx: CanvasRenderingContext2D, elapsedTime: number) {}\n\n  // eslint-disable-next-line no-unused-vars\n  update(delta: number) {}\n\n  getCurrentZ(): number {\n    return 0;\n  }\n\n  addTo(scene: Scene): this {\n    scene.addChild(this);\n    return this;\n  }\n\n  onAddedToScene(scene: Scene) {\n    this._scene = scene;\n  }\n\n  onRemovedFromScene() {\n    this._scene = null;\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\n\nconst isSlopeVertical = (slope: number) =>\n  slope === Infinity || slope === -Infinity;\n\nexport default class Line2 {\n  static fromSlopeAndDisplacement(slope: number, displacement: number) {\n    invariant(\n      !isSlopeVertical(slope),\n      'cannot create vertical line from displacement',\n    );\n\n    const start = new Vector2(0, displacement);\n    const end = new Vector2(1, slope + displacement);\n    return new Line2(start, end);\n  }\n\n  static fromSlopeAndPoint(slope: number, point: Vector2): Line2 {\n    if (isSlopeVertical(slope)) {\n      return new Line2(point, new Vector2(point.x, point.y + 1));\n    }\n\n    const displacement = point.y - point.x * slope;\n    return Line2.fromSlopeAndDisplacement(slope, displacement);\n  }\n\n  start: Vector2;\n  end: Vector2;\n\n  constructor(a: Vector2, b: Vector2) {\n    this.start = a;\n    this.end = b;\n  }\n\n  get delta(): Vector2 {\n    return this.end.subtract(this.start);\n  }\n\n  get slope(): number {\n    return (this.end.y - this.start.y) / (this.end.x - this.start.x);\n  }\n\n  get displacement(): number {\n    return this.start.y - this.start.x * this.slope;\n  }\n\n  get isVertical(): boolean {\n    return isSlopeVertical(this.slope);\n  }\n\n  get verticalX(): number {\n    invariant(\n      this.isVertical,\n      'verticalX is not defined on non vertical lines',\n    );\n    return this.start.x;\n  }\n\n  get perpendicularSlope(): number {\n    if (this.isVertical) return 0;\n    return -1 / this.slope;\n  }\n\n  isPerpendicularTo(other: Line2): boolean {\n    return (this.isVertical && other.isVertical) || this.slope === other.slope;\n  }\n\n  perpendicularLineThroughPoint(point: Vector2): Line2 {\n    return Line2.fromSlopeAndPoint(this.perpendicularSlope, point);\n  }\n\n  pointAtIntersectionWith(other: Line2): Vector2 {\n    invariant(\n      !this.isPerpendicularTo(other),\n      'perpendicular lines do not intersect',\n    );\n\n    let x;\n    if (this.isVertical) {\n      x = this.verticalX;\n    } else if (other.isVertical) {\n      x = other.verticalX;\n    } else {\n      x = (this.displacement - other.displacement) / (other.slope - this.slope);\n    }\n\n    const y = this.isVertical\n      ? other.slope * x + other.displacement\n      : this.slope * x + this.displacement;\n\n    return new Vector2(x, y);\n  }\n}\n","// @flow\n\nexport const lerp = (a: number, b: number, n: number): number =>\n  a + n * (b - a);\n\nexport const mapRange = (\n  a1: number,\n  b1: number,\n  a2: number,\n  b2: number,\n  n: number,\n): number => lerp(a2, b2, (n - a1) / (b1 - a1));\n\nexport const constrain = (min: number, max: number, n: number): number =>\n  Math.min(max, Math.max(min, n));\n\nexport const random = (min: number, max: number): number =>\n  lerp(min, max, Math.random());\n\nexport const randomInt = (min: number, max: number): number =>\n  Math.floor(random(min, max));\n\nexport const sample = <T>(arr: T[]): T => arr[randomInt(0, arr.length)];\n\nexport const flatten = <T>(arr: T[][]): T[] =>\n  arr.reduce((a, b) => a.concat(b), []);\n\nexport const uniq = <T>(arr: T[]): T[] =>\n  arr.filter((item, i) => arr.indexOf(item) === i);\n\nexport const compact = <T>(arr: (?T)[]): T[] =>\n  // $FlowFixMe\n  arr.filter(item => item != null);\n\nexport const normaliseAngle = (angle: number): number =>\n  Math.atan2(Math.sin(angle), Math.cos(angle));\n\nexport const varyAbsolute = (base: number, amount: number): number =>\n  random(base - amount, base + amount);\n\nexport const varyRelative = (base: number, amount: number): number =>\n  varyAbsolute(base, base * amount);\n\nexport const times = <T>(count: number, fn: number => T): T[] => {\n  const result = [];\n  for (let i = 0; i < count; i++) {\n    result.push(fn(i));\n  }\n  return result;\n};\n\nexport const shuffle = <T>(arr: T[]): T[] =>\n  arr\n    .map(item => [item, Math.random()])\n    .sort((a, b) => a[1] - b[1])\n    .map(entry => entry[0]);\n","// @flow\nimport invariant from 'invariant';\nimport Line2 from './Line2';\nimport { lerp } from '../util';\n\nexport type Vector2ish = Vector2 | { x: number, y: number } | [number, number];\n\nexport default class Vector2 {\n  x: number;\n  y: number;\n\n  static from(vector: Vector2ish): Vector2 {\n    if (vector instanceof Vector2) {\n      return new Vector2(vector.x, vector.y);\n    }\n    if (Array.isArray(vector)) {\n      invariant(typeof vector[0] === 'number', 'vector[0] must be a number');\n      invariant(typeof vector[1] === 'number', 'vector[1] must be a number');\n      return new Vector2(vector[0], vector[1]);\n    }\n    if (vector && typeof vector === 'object') {\n      invariant(typeof vector.x === 'number', 'vector.x must be a number');\n      invariant(typeof vector.y === 'number', 'vector.y must be a number');\n      return new Vector2(vector.x, vector.y);\n    }\n    throw new Error('invalid type to create vector');\n  }\n\n  static fromMagnitudeAndAngle(magnitude: number, angle: number): Vector2 {\n    const x = magnitude * Math.cos(angle);\n    const y = magnitude * Math.sin(angle);\n    return new Vector2(x, y);\n  }\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get magnitudeSquared(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  get magnitude(): number {\n    return Math.sqrt(this.magnitudeSquared);\n  }\n\n  get angle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  toString(): string {\n    return `Vector2(${this.x}, ${this.y})`;\n  }\n\n  debugDraw(color: string) {\n    const ctx: CanvasRenderingContext2D = window.debugContext;\n    ctx.beginPath();\n    const size = 3 * window.HAIRLINE;\n    ctx.moveTo(this.x - size, this.y - size);\n    ctx.lineTo(this.x + size, this.y + size);\n    ctx.moveTo(this.x - size, this.y + size);\n    ctx.lineTo(this.x + size, this.y - size);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = window.HAIRLINE;\n    ctx.stroke();\n  }\n\n  angleBetween(other: Vector2): number {\n    return other.subtract(this).angle;\n  }\n\n  distanceTo(other: Vector2): number {\n    return other.subtract(this).magnitude;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  scale(factor: number): Vector2 {\n    return new Vector2(this.x * factor, this.y * factor);\n  }\n\n  withMagnitude(magnitude: number): Vector2 {\n    return this.scale(magnitude / this.magnitude);\n  }\n\n  normal(): Vector2 {\n    return new Vector2(-this.y, this.x);\n  }\n\n  invert(): Vector2 {\n    return this.scale(-1);\n  }\n\n  equals(other: Vector2): boolean {\n    return this.x === other.x && this.y === other.y;\n  }\n\n  lineThrough(other: Vector2): Line2 {\n    return new Line2(this, other);\n  }\n\n  lerp(other: Vector2, amt: number): Vector2 {\n    return new Vector2(lerp(this.x, other.x, amt), lerp(this.y, other.y, amt));\n  }\n}\n","// @flow\nimport Vector2 from './Vector2';\n\nexport default class Rect {\n  center: Vector2;\n  width: number;\n  height: number;\n\n  static fromLeftTopRightBottom(\n    left: number,\n    top: number,\n    right: number,\n    bottom: number,\n  ): Rect {\n    const width = right - left;\n    const height = bottom - top;\n    const centerX = left + width / 2;\n    const centerY = top + height / 2;\n    return new Rect(centerX, centerY, width, height);\n  }\n\n  constructor(centerX: number, centerY: number, width: number, height: number) {\n    this.center = new Vector2(centerX, centerY);\n    this.width = width;\n    this.height = height;\n  }\n\n  get left(): number {\n    return this.center.x - this.width / 2;\n  }\n\n  get top(): number {\n    return this.center.y - this.height / 2;\n  }\n\n  get right(): number {\n    return this.center.x + this.width / 2;\n  }\n\n  get bottom(): number {\n    return this.center.y + this.height / 2;\n  }\n\n  toString(): string {\n    return `Rect((${this.left}, ${this.top}), (${this.right}, ${this.bottom}))`;\n  }\n\n  debugDraw(color: string) {\n    const ctx: CanvasRenderingContext2D = window.debugContext;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 1;\n    ctx.strokeRect(this.left, this.top, this.width, this.height);\n  }\n\n  containsPoint(point: Vector2): boolean {\n    return !(\n      point.x < this.left ||\n      point.x > this.right ||\n      point.y < this.top ||\n      point.y > this.bottom\n    );\n  }\n\n  intersectsRect(other: Rect): boolean {\n    return !(\n      this.right < other.left ||\n      this.left > other.right ||\n      this.bottom < other.top ||\n      this.top > other.bottom\n    );\n  }\n}\n","// @flow\nimport Vector2 from './Vector2';\nimport Rect from './Rect';\n\nexport default class Circle {\n  center: Vector2;\n  radius: number;\n\n  constructor(x: number, y: number, radius: number) {\n    this.center = new Vector2(x, y);\n    this.radius = radius;\n  }\n\n  get circumference(): number {\n    return 2 * Math.PI * this.radius;\n  }\n\n  get boundingBox(): Rect {\n    return new Rect(\n      this.center.x,\n      this.center.y,\n      this.radius * 2,\n      this.radius * 2,\n    );\n  }\n\n  debugDraw(color: string) {\n    const ctx: CanvasRenderingContext2D = window.debugContext;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.arc(this.center.x, this.center.y, this.radius, 0, Math.PI * 2, false);\n    ctx.stroke();\n  }\n\n  pointOnCircumference(radians: number): Vector2 {\n    return new Vector2(\n      this.center.x + Math.cos(radians) * this.radius,\n      this.center.y + Math.sin(radians) * this.radius,\n    );\n  }\n\n  containsPoint(point: Vector2): boolean {\n    return point.distanceTo(this.center) < this.radius;\n  }\n\n  intersectsCircle(other: Circle): boolean {\n    return this.center.distanceTo(other.center) < this.radius + other.radius;\n  }\n\n  withRadius(radius: number): Circle {\n    return new Circle(this.center.x, this.center.y, radius);\n  }\n}\n","// @flow\nimport { constrain } from '../../util';\nimport Vector2 from '../Vector2';\nimport Line2 from '../Line2';\nimport type { PathSegment } from './Path';\n\nexport default class StraightPathSegment implements PathSegment {\n  line: Line2;\n\n  constructor(start: Vector2, end: Vector2) {\n    this.line = new Line2(start, end);\n    Object.freeze(this);\n  }\n\n  get start(): Vector2 {\n    return this.line.start;\n  }\n\n  get end(): Vector2 {\n    return this.line.end;\n  }\n\n  get delta(): Vector2 {\n    return this.end.subtract(this.start);\n  }\n\n  get length(): number {\n    return this.delta.magnitude;\n  }\n\n  get angle(): number {\n    return this.delta.angle;\n  }\n\n  getPointAtPosition(position: number): Vector2 {\n    const constrainedPosition = constrain(0, this.length, position);\n    return this.delta.withMagnitude(constrainedPosition).add(this.start);\n  }\n\n  getAngleAtPosition(): number {\n    return this.delta.angle;\n  }\n}\n","// @flow\nimport { constrain, mapRange } from '../../util';\nimport Vector2 from '../Vector2';\nimport Circle from '../Circle';\nimport type { PathSegment } from './Path';\nimport StraightPathSegment from './StraightPathSegment';\nimport Line2 from '../Line2';\n\nexport default class CirclePathSegment implements PathSegment {\n  static withinCircle(\n    containingCircle: Circle,\n    entryAngle: number,\n    exitAngle: number,\n  ): CirclePathSegment | StraightPathSegment {\n    entryAngle = entryAngle + Math.PI;\n    const entryPoint = containingCircle.pointOnCircumference(entryAngle);\n    const exitPoint = containingCircle.pointOnCircumference(exitAngle);\n\n    const entryLineNormal = new Line2(\n      containingCircle.center,\n      entryPoint,\n    ).perpendicularLineThroughPoint(entryPoint);\n    const exitLineNormal = new Line2(\n      containingCircle.center,\n      exitPoint,\n    ).perpendicularLineThroughPoint(exitPoint);\n\n    if (entryLineNormal.isPerpendicularTo(exitLineNormal)) {\n      return new StraightPathSegment(entryPoint, exitPoint);\n    }\n\n    const roadCircleCenter = entryLineNormal.pointAtIntersectionWith(\n      exitLineNormal,\n    );\n    const roadCircleRadius = entryPoint.distanceTo(roadCircleCenter);\n\n    // containingCircle.center.debugDraw('lime');\n    // roadCircleCenter.debugDraw('blue');\n    // entryPoint.debugDraw('magenta');\n    // exitPoint.debugDraw('red');\n\n    return new CirclePathSegment(\n      roadCircleCenter,\n      roadCircleRadius,\n      entryPoint.subtract(roadCircleCenter).angle,\n      exitPoint.subtract(roadCircleCenter).angle,\n    );\n  }\n\n  circle: Circle;\n  startAngle: number;\n  endAngle: number;\n\n  constructor(\n    center: Vector2,\n    radius: number,\n    startAngle: number,\n    endAngle: number,\n  ) {\n    this.circle = new Circle(center.x, center.y, radius);\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    Object.freeze(this);\n  }\n\n  get start(): Vector2 {\n    return this.circle.pointOnCircumference(this.startAngle);\n  }\n\n  get end(): Vector2 {\n    return this.circle.pointOnCircumference(this.endAngle);\n  }\n\n  get angleDifference(): number {\n    return Math.atan2(\n      Math.sin(this.endAngle - this.startAngle),\n      Math.cos(this.endAngle - this.startAngle),\n    );\n  }\n\n  get length(): number {\n    const proportion = Math.abs(this.angleDifference) / (Math.PI * 2);\n    return this.circle.circumference * proportion;\n  }\n\n  get isAnticlockwise(): boolean {\n    return this.angleDifference < 0;\n  }\n\n  getPointAtPosition(position: number): Vector2 {\n    const angle = mapRange(\n      0,\n      this.length,\n      this.startAngle,\n      this.startAngle + this.angleDifference,\n      constrain(0, this.length, position),\n    );\n    return this.circle.pointOnCircumference(angle);\n  }\n\n  getAngleAtPosition(position: number): number {\n    if (this.isAnticlockwise) {\n      return (\n        mapRange(\n          0,\n          this.length,\n          this.startAngle,\n          this.startAngle + this.angleDifference,\n          constrain(0, this.length, position),\n        ) -\n        Math.PI / 2\n      );\n    } else {\n      return (\n        mapRange(\n          0,\n          this.length,\n          this.startAngle,\n          this.startAngle + this.angleDifference,\n          constrain(0, this.length, position),\n        ) +\n        Math.PI / 2\n      );\n    }\n  }\n}\n","// @flow\nimport type Path from './geom/path/Path';\nimport StraightPathSegment from './geom/path/StraightPathSegment';\nimport CirclePathSegment from './geom/path/CirclePathSegment';\n\nexport default {\n  circle(ctx: CanvasRenderingContext2D, x: number, y: number, radius: number) {\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n  },\n  path(ctx: CanvasRenderingContext2D, path: Path) {\n    path.segments.forEach((segment, i) => {\n      if (i === 0) ctx.moveTo(segment.start.x, segment.start.y);\n      if (segment instanceof StraightPathSegment) {\n        ctx.lineTo(segment.end.x, segment.end.y);\n      } else if (segment instanceof CirclePathSegment) {\n        ctx.arc(\n          segment.circle.center.x,\n          segment.circle.center.y,\n          segment.circle.radius,\n          segment.startAngle,\n          segment.endAngle,\n          segment.isAnticlockwise,\n        );\n      } else {\n        throw new Error(`Unknown path segment type: ${segment.toString()}`);\n      }\n    });\n  },\n};\n","// @flow\n// https://gist.github.com/rezoner/713615dabedb59a15470\n// http://gsgd.co.uk/sandbox/jquery/easing/\nexport const reverse = (easing: number => number) => (n: number): number =>\n  easing(1 - n);\n\nexport const linear = (n: number): number => n;\n\nexport const inQuad = (t: number): number => t * t;\n\nexport const outQuad = (t: number): number => t * (2 - t);\n\nexport const inOutQuad = (t: number): number =>\n  t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n\nexport const inCubic = (t: number): number => t * t * t;\n\nexport const outCubic = (t: number): number => --t * t * t + 1;\n\nexport const inOutCubic = (t: number): number =>\n  t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\nexport const inQuart = (t: number): number => t * t * t * t;\n\nexport const outQuart = (t: number): number => 1 - --t * t * t * t;\n\nexport const inOutQuart = (t: number): number =>\n  t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n\nexport const inQuint = (t: number): number => t * t * t * t * t;\n\nexport const outQuint = (t: number): number => 1 + --t * t * t * t * t;\n\nexport const inOutQuint = (t: number): number =>\n  t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n\nexport const inSine = (t: number): number =>\n  -1 * Math.cos(t / 1 * (Math.PI * 0.5)) + 1;\n\nexport const outSine = (t: number): number => Math.sin(t / 1 * (Math.PI * 0.5));\n\nexport const inOutSine = (t: number): number =>\n  -1 / 2 * (Math.cos(Math.PI * t) - 1);\n\nexport const inExpo = (t: number): number =>\n  t == 0 ? 0 : Math.pow(2, 10 * (t - 1));\n\nexport const outExpo = (t: number): number =>\n  t == 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n\nexport const inOutExpo = (t: number): number => {\n  if (t == 0) return 0;\n  if (t == 1) return 1;\n  if ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n  return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n};\n\nexport const inCirc = (t: number): number => -1 * (Math.sqrt(1 - t * t) - 1);\n\nexport const outCirc = (t: number): number => Math.sqrt(1 - (t = t - 1) * t);\n\nexport const inOutCirc = (t: number): number => {\n  if ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n  return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n};\n\nexport const inElastic = (t: number): number => {\n  let s = 1.70158;\n  let p = 0;\n  let a = 1;\n  if (t == 0) return 0;\n  if (t == 1) return 1;\n  if (!p) p = 0.3;\n  if (a < 1) {\n    a = 1;\n    s = p / 4;\n  } else {\n    s = p / (2 * Math.PI) * Math.asin(1 / a);\n  }\n  return -(\n    a *\n    Math.pow(2, 10 * (t -= 1)) *\n    Math.sin((t - s) * (2 * Math.PI) / p)\n  );\n};\n\nexport const outElastic = (t: number): number => {\n  let s = 1.70158;\n  let p = 0;\n  let a = 1;\n  if (t == 0) return 0;\n  if (t == 1) return 1;\n  if (!p) p = 0.3;\n  if (a < 1) {\n    a = 1;\n    s = p / 4;\n  } else {\n    s = p / (2 * Math.PI) * Math.asin(1 / a);\n  }\n  return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n};\n\nexport const inOutElastic = (t: number): number => {\n  let s = 1.70158;\n  let p = 0;\n  let a = 1;\n  if (t == 0) return 0;\n  if ((t /= 1 / 2) == 2) return 1;\n  if (!p) p = 0.3 * 1.5;\n  if (a < 1) {\n    a = 1;\n    s = p / 4;\n  } else {\n    s = p / (2 * Math.PI) * Math.asin(1 / a);\n  }\n  if (t < 1)\n    return (\n      -0.5 *\n      (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p))\n    );\n  return (\n    a *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t - s) * (2 * Math.PI) / p) *\n      0.5 +\n    1\n  );\n};\n\nexport const inBack = (s: number = 1.70158) => (t: number): number => {\n  return 1 * t * t * ((s + 1) * t - s);\n};\n\nexport const outBack = (s: number = 1.70158) => (t: number): number => {\n  t = t - 1;\n  return 1 * (t * t * ((s + 1) * t + s) + 1);\n};\n\nexport const inOutBack = (s: number = 1.70158) => (t: number): number => {\n  if ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= 1.525) + 1) * t - s));\n  return 1 / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n};\n\nexport const inBounce = (t: number): number => {\n  return 1 - outBounce(1 - t);\n};\n\nexport const outBounce = (t: number): number => {\n  if ((t /= 1) < 1 / 2.75) {\n    return 7.5625 * t * t;\n  } else if (t < 2 / 2.75) {\n    return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n  } else if (t < 2.5 / 2.75) {\n    return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n  } else {\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  }\n};\n\nexport const inOutBounce = (t: number): number => {\n  if (t < 1 / 2) return inBounce(t * 2) * 0.5;\n  return outBounce(t * 2 - 1) * 0.5 + 0.5;\n};\n","// @flow\nimport type Color from 'color';\nimport SceneObject from '../lib/core/SceneObject';\nimport ShapeHelpers from '../lib/ShapeHelpers';\nimport Circle from '../lib/geom/Circle';\nimport { linear } from '../lib/easings';\nimport { lerp } from '../lib/util';\n\ntype PulseOptions = {|\n  x: number,\n  y: number,\n  startRadius: number,\n  endRadius: number,\n  duration: number,\n  color: Color,\n  easeRadius?: number => number,\n  easeOpacity?: number => number,\n  removeOnComplete?: boolean,\n|};\n\nexport default class Pulse extends SceneObject {\n  _circle: Circle;\n  _startRadius: number;\n  _endRadius: number;\n  _duration: number;\n  _color: Color;\n  _progress: number;\n  _easeRadius: number => number;\n  _easeOpacity: number => number;\n  _removeOnComplete: boolean;\n\n  constructor({\n    x,\n    y,\n    startRadius,\n    endRadius,\n    duration,\n    color,\n    easeRadius = linear,\n    easeOpacity = linear,\n    removeOnComplete = false,\n  }: PulseOptions) {\n    super();\n    this._circle = new Circle(x, y, startRadius);\n    this._startRadius = startRadius;\n    this._endRadius = endRadius;\n    this._duration = duration;\n    this._color = color;\n    this._progress = 0;\n    this._easeRadius = easeRadius;\n    this._easeOpacity = easeOpacity;\n    this._removeOnComplete = removeOnComplete;\n  }\n\n  update(deltaTime: number) {\n    const deltaProgress = deltaTime / this._duration;\n    this._progress = Math.min(1, this._progress + deltaProgress);\n    this._circle.radius = lerp(\n      this._startRadius,\n      this._endRadius,\n      this._easeRadius(this._progress),\n    );\n\n    if (this._progress === 1 && this._removeOnComplete) {\n      this.getScene().removeChild(this);\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    const opacity = this._easeOpacity(this._progress);\n    ctx.fillStyle = this._color.fade(opacity).toString();\n    ShapeHelpers.circle(\n      ctx,\n      this._circle.center.x,\n      this._circle.center.y,\n      this._circle.radius,\n    );\n    ctx.fill();\n  }\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar v;\n\n\tif (max === 0) {\n\t\ts = 0;\n\t} else {\n\t\ts = (delta / max * 1000) / 10;\n\t}\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tv = ((max / 255) * 1000) / 10;\n\n\treturn [h, s, v];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (!obj) {\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","// @flow\nimport Color from 'color';\n\n// https://coolors.co/f8ffe5-06d6a0-1b9aaa-ef476f-ffc43d\nexport const LIGHT_BG = Object.freeze(Color('#F8FFE5'));\nexport const TEAL = Object.freeze(Color('#06D6A0'));\nexport const BLUE = Object.freeze(Color('#1B9AAA'));\nexport const RED = Object.freeze(Color('#EF476F'));\nexport const YELLOW = Object.freeze(Color('#FFC43D'));\n","// @flow\n\nexport type ConnectionDirection = 'IN' | 'OUT';\nconst ConnectionDirections: {| IN: 'IN', OUT: 'OUT' |} = {\n  IN: 'IN',\n  OUT: 'OUT',\n};\n\nexport default ConnectionDirections;\n","// @flow\nimport { sample } from '../../lib/util';\nimport type Road from '../Road';\nimport ConnectionDirections from './ConnectionDirections';\nimport type { ConnectionDirection } from './ConnectionDirections';\n\nexport default class ConnectionSet {\n  incoming: Road[] = [];\n  outgoing: Road[] = [];\n\n  add(target: Road, direction: ConnectionDirection) {\n    switch (direction) {\n      case ConnectionDirections.IN:\n        this.addIncoming(target);\n        break;\n      case ConnectionDirections.OUT:\n        this.addOutgoing(target);\n        break;\n      default:\n        throw new Error(`unknow connection direction ${direction}`);\n    }\n  }\n\n  addIncoming(target: Road) {\n    this.incoming.push(target);\n  }\n\n  addOutgoing(target: Road) {\n    this.outgoing.push(target);\n  }\n\n  sampleIncoming(): Road {\n    return sample(this.incoming);\n  }\n\n  sampleOutgoing(): Road {\n    return sample(this.outgoing);\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport SceneObject from '../../lib/core/SceneObject';\nimport Circle from '../../lib/geom/Circle';\nimport type Vector2 from '../../lib/geom/Vector2';\nimport ShapeHelpers from '../../lib/ShapeHelpers';\nimport { inBack, reverse, linear } from '../../lib/easings';\nimport { constrain, mapRange } from '../../lib/util';\nimport Pulse from '../../effects/Pulse';\nimport { RED } from '../../colors';\nimport ConnectionSet from '../lib/ConnectionSet';\nimport type { ConnectionDirection } from '../lib/ConnectionDirections';\nimport type Road from '../Road';\nimport type { NetworkNode } from './NetworkNode';\n\nconst DEFAULT_COOLDOWN = 1000;\n\nconst RADIUS = 20;\nconst VISUAL_CONNECTION_RADIUS = 30;\nconst PULSE_RADIUS = 25;\n\nconst CLOCK_FADE_DURATION = 150;\nconst PULSE_DURATION = 500;\n\nconst MAIN_COLOR = RED.lighten(0.2).desaturate(0.5);\nconst CLOCK_COLOR = RED.darken(0.2);\nconst PULSE_COLOR = RED.lighten(0.2).fade(0.4);\n\nexport default class Consumer extends SceneObject implements NetworkNode {\n  isDestination = true;\n  _circle: Circle;\n  _visualConnectionCircle: Circle;\n  _cooldown: number;\n  _timer: number = 0;\n  _connectionSet: ConnectionSet = new ConnectionSet();\n\n  constructor(x: number, y: number, cooldown: number = DEFAULT_COOLDOWN) {\n    super();\n    this._circle = new Circle(x, y, RADIUS);\n    this._visualConnectionCircle = new Circle(x, y, VISUAL_CONNECTION_RADIUS);\n    this._cooldown = cooldown;\n  }\n\n  get position(): Vector2 {\n    return this._circle.center;\n  }\n\n  get canConsumeTraveller(): boolean {\n    return this._timer >= this._cooldown;\n  }\n\n  get incomingConnections(): Road[] {\n    return this._connectionSet.incoming;\n  }\n\n  get outgoingConnections(): Road[] {\n    return this._connectionSet.outgoing;\n  }\n\n  getVisualConnectionPointAtAngle(radians: number): Vector2 {\n    return this._visualConnectionCircle.pointOnCircumference(radians);\n  }\n\n  getAllReachableNodes(visited: Set<NetworkNode> = new Set()): NetworkNode[] {\n    visited.add(this);\n    return [this];\n  }\n\n  connectTo(node: Road, direction: ConnectionDirection) {\n    this._connectionSet.add(node, direction);\n  }\n\n  consumeTraveller() {\n    invariant(this.canConsumeTraveller, 'must be ready to consumer traveller');\n    this._resetTimer();\n    this._pulse();\n  }\n\n  update(delta: number) {\n    this._timer = constrain(0, this._cooldown, this._timer + delta);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const progress = this._timer / this._cooldown;\n    const colorMixAmount = constrain(\n      0,\n      1,\n      mapRange(0, CLOCK_FADE_DURATION, 1, 0, this._timer),\n    );\n    const bgColor = MAIN_COLOR.mix(CLOCK_COLOR, colorMixAmount);\n\n    ctx.beginPath();\n    ctx.fillStyle = bgColor.toString();\n    ShapeHelpers.circle(\n      ctx,\n      this._circle.center.x,\n      this._circle.center.y,\n      this._circle.radius,\n    );\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.fillStyle = CLOCK_COLOR.toString();\n    ctx.moveTo(this._circle.center.x, this._circle.center.y);\n    ShapeHelpers.circle(\n      ctx,\n      this._circle.center.x,\n      this._circle.center.y,\n      this._circle.radius * progress,\n    );\n    ctx.fill();\n  }\n\n  _resetTimer() {\n    this._timer = 0;\n  }\n\n  _pulse() {\n    this.getScene().addChildBefore(\n      this,\n      new Pulse({\n        x: this._circle.center.x,\n        y: this._circle.center.y,\n        endRadius: RADIUS,\n        startRadius: PULSE_RADIUS,\n        duration: PULSE_DURATION,\n        color: PULSE_COLOR,\n        easeRadius: inBack(4),\n        easeOpacity: reverse(linear),\n        removeOnComplete: true,\n      }),\n    );\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport Scene from './Scene';\n\nconst DEFAULT_NAME = '$$AbstractSceneSystem$$';\n\nexport default class SceneSystem {\n  static systemName = DEFAULT_NAME;\n  _scene: Scene | null = null;\n\n  constructor() {\n    invariant(\n      this.constructor !== SceneSystem,\n      'SceneSystem is an abstract class that must be extended',\n    );\n    invariant(\n      this.constructor.systemName !== DEFAULT_NAME,\n      'classes extending SceneSystem must override SceneSystem.systemName',\n    );\n  }\n\n  getScene(): Scene {\n    invariant(this._scene, 'scene is required');\n    return this._scene;\n  }\n\n  afterAddToScene(scene: Scene) {\n    this._scene = scene;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  beforeRemoveFromScene(scene: Scene) {\n    this._scene = null;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  beforeUpdate(delta: number) {}\n\n  // eslint-disable-next-line no-unused-vars\n  afterUpdate(delta: number) {}\n\n  // eslint-disable-next-line no-unused-vars\n  beforeDraw(ctx: CanvasRenderingContext2D, time: number) {}\n\n  // eslint-disable-next-line no-unused-vars\n  afterDraw(ctx: CanvasRenderingContext2D, time: number) {}\n}\n","// @flow\nimport Rect from '../geom/Rect';\nimport type Circle from '../geom/Circle';\nimport Vector2 from '../geom/Vector2';\n\ntype Subdivisions<T> = [QuadTree<T>, QuadTree<T>, QuadTree<T>, QuadTree<T>];\n\nexport default class QuadTree<T> {\n  static NODE_CAPACITY = 4;\n\n  boundary: Rect;\n  _items: (T | void)[] = [];\n  _nextItemIndex: number = 0;\n  _subdivisions: null | Subdivisions<T> = null;\n  _getPosition: T => Vector2;\n\n  constructor(boundary: Rect, getPosition: T => Vector2) {\n    this.boundary = boundary;\n    this._getPosition = getPosition;\n  }\n\n  debugDraw(color: string) {\n    this.boundary.debugDraw(color);\n    if (this._subdivisions) {\n      this._subdivisions.forEach(subdivision => subdivision.debugDraw(color));\n    }\n  }\n\n  insert(item: T): boolean {\n    const point = this._getPosition(item);\n    if (!this.boundary.containsPoint(point)) return false;\n\n    if (this._nextItemIndex < QuadTree.NODE_CAPACITY) {\n      this._items[this._nextItemIndex] = item;\n      this._nextItemIndex++;\n      return true;\n    }\n\n    const subdivisions = this._getSubdivisions();\n\n    if (subdivisions[0].insert(item)) return true;\n    if (subdivisions[1].insert(item)) return true;\n    if (subdivisions[2].insert(item)) return true;\n    if (subdivisions[3].insert(item)) return true;\n\n    throw new Error('Couldnt insert item');\n  }\n\n  remove(item: T): boolean {\n    const point = this._getPosition(item);\n    if (!this.boundary.containsPoint(point)) return false;\n\n    const index = this._items.indexOf(item);\n    if (index !== -1) {\n      this._items.splice(index, 1);\n      this._nextItemIndex--;\n      return true;\n    }\n\n    const subdivisions = this._subdivisions;\n    if (subdivisions) {\n      if (subdivisions[0].remove(item)) return true;\n      if (subdivisions[1].remove(item)) return true;\n      if (subdivisions[2].remove(item)) return true;\n      if (subdivisions[3].remove(item)) return true;\n    }\n\n    return false;\n  }\n\n  clear() {\n    for (let i = 0; i < this._nextItemIndex; i++) {\n      this._items[i] = undefined;\n      this._nextItemIndex = 0;\n    }\n\n    if (this._subdivisions) {\n      this._subdivisions.forEach(subdivision => subdivision.clear());\n    }\n  }\n\n  findItemsInRect(rect: Rect): T[] {\n    const foundItems = [];\n\n    if (!this.boundary.intersectsRect(rect)) return foundItems;\n\n    for (let i = 0; i < this._nextItemIndex; i++) {\n      const item = this._items[i];\n      if (item == null) continue;\n      const point = this._getPosition(item);\n      if (rect.containsPoint(point)) foundItems.push(item);\n    }\n\n    const subdivisions = this._subdivisions;\n    if (!subdivisions) return foundItems;\n\n    if (subdivisions[0].boundary.intersectsRect(rect)) {\n      foundItems.push(...subdivisions[0].findItemsInRect(rect));\n    }\n    if (subdivisions[1].boundary.intersectsRect(rect)) {\n      foundItems.push(...subdivisions[1].findItemsInRect(rect));\n    }\n    if (subdivisions[2].boundary.intersectsRect(rect)) {\n      foundItems.push(...subdivisions[2].findItemsInRect(rect));\n    }\n    if (subdivisions[3].boundary.intersectsRect(rect)) {\n      foundItems.push(...subdivisions[3].findItemsInRect(rect));\n    }\n\n    return foundItems;\n  }\n\n  findItemsInCircle(circle: Circle): T[] {\n    return this.findItemsInRect(circle.boundingBox).filter(item =>\n      circle.containsPoint(this._getPosition(item)),\n    );\n  }\n\n  _getSubdivisions(): Subdivisions<T> {\n    if (this._subdivisions) return this._subdivisions;\n\n    const subdivisions = [\n      new QuadTree(\n        Rect.fromLeftTopRightBottom(\n          this.boundary.left,\n          this.boundary.top,\n          this.boundary.center.x,\n          this.boundary.center.y,\n        ),\n        this._getPosition,\n      ),\n      new QuadTree(\n        Rect.fromLeftTopRightBottom(\n          this.boundary.center.x,\n          this.boundary.top,\n          this.boundary.right,\n          this.boundary.center.y,\n        ),\n        this._getPosition,\n      ),\n      new QuadTree(\n        Rect.fromLeftTopRightBottom(\n          this.boundary.left,\n          this.boundary.center.y,\n          this.boundary.center.x,\n          this.boundary.bottom,\n        ),\n        this._getPosition,\n      ),\n      new QuadTree(\n        Rect.fromLeftTopRightBottom(\n          this.boundary.center.x,\n          this.boundary.center.y,\n          this.boundary.right,\n          this.boundary.bottom,\n        ),\n        this._getPosition,\n      ),\n    ];\n\n    this._subdivisions = subdivisions;\n    return subdivisions;\n  }\n}\n","// @flow\nimport type Scene from '../lib/core/Scene';\nimport SceneSystem from '../lib/core/SceneSystem';\nimport QuadTree from '../lib/ds/QuadTree';\nimport type Circle from '../lib/geom/Circle';\nimport Rect from '../lib/geom/Rect';\nimport Traveller from '../entities/Traveller';\n\nexport default class TravellerFinder extends SceneSystem {\n  static systemName = 'TravellerFinder';\n\n  _quadTree: QuadTree<Traveller>;\n\n  removeTraveller(traveller: Traveller) {\n    this._quadTree.remove(traveller);\n  }\n\n  afterAddToScene(scene: Scene) {\n    super.afterAddToScene(scene);\n    this._quadTree = new QuadTree(\n      Rect.fromLeftTopRightBottom(0, 0, scene.width, scene.height),\n      traveller => traveller.position,\n    );\n  }\n\n  beforeUpdate() {\n    const scene = this.getScene();\n    this._quadTree.clear();\n    scene.children.forEach(child => {\n      if (child instanceof Traveller) {\n        this._quadTree.insert(child);\n      }\n    });\n    // this._quadTree.debugDraw('red');\n  }\n\n  findTravellersInCircle(circle: Circle): Array<Traveller> {\n    return this._quadTree.findItemsInCircle(circle);\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport type Road from '../Road';\nimport type { NetworkNode } from '../networkNodes/NetworkNode';\n\nconst PathFinder = {\n  getNextRoad(initialNode: NetworkNode, destinationNode: NetworkNode): Road {\n    const remainingNodes = new Set(initialNode.getAllReachableNodes());\n    remainingNodes.add(initialNode);\n    invariant(\n      remainingNodes.has(destinationNode),\n      'destination must be reachable',\n    );\n    const bestCosts = new Map();\n    const prevRoads = new Map();\n\n    bestCosts.set(initialNode, 0);\n\n    while (remainingNodes.size) {\n      const { node, cost } = PathFinder._nodeWithShortestDistance(\n        remainingNodes,\n        bestCosts,\n      );\n      remainingNodes.delete(node);\n\n      if (node === destinationNode) {\n        return PathFinder._nextRoadFromRoute(\n          prevRoads,\n          initialNode,\n          destinationNode,\n        );\n      }\n\n      PathFinder._updateNeighbours(node, bestCosts, cost, prevRoads);\n    }\n\n    throw new Error('unreachable i hope');\n  },\n\n  _nodeWithShortestDistance(\n    nodes: Set<NetworkNode>,\n    costs: Map<NetworkNode, ?number>,\n  ): { node: NetworkNode, cost: number } {\n    let bestCost = Infinity;\n    let bestNode = null;\n\n    nodes.forEach(node => {\n      const cost = costs.get(node);\n      if (cost != null && cost <= bestCost) {\n        bestCost = cost;\n        bestNode = node;\n      }\n    });\n\n    invariant(bestNode, 'node must be found');\n    return { node: bestNode, cost: bestCost };\n  },\n  _updateNeighbours(\n    node: NetworkNode,\n    bestCosts: Map<NetworkNode, ?number>,\n    cost: number,\n    prevRoads: Map<NetworkNode, Road>,\n  ) {\n    node.outgoingConnections.forEach(road => {\n      const nextNode = road.to;\n      const nextNodeCost = bestCosts.get(nextNode);\n      const altNextNodeCost = cost + road.expectedTimeFromStartToEnd;\n      if (nextNodeCost == null || altNextNodeCost <= nextNodeCost) {\n        bestCosts.set(nextNode, altNextNodeCost);\n        prevRoads.set(nextNode, road);\n      }\n    });\n  },\n  _nextRoadFromRoute(\n    prevRoads: Map<NetworkNode, Road>,\n    start: NetworkNode,\n    finish: NetworkNode,\n  ): Road {\n    let node = finish;\n    while (prevRoads.has(node)) {\n      const road = prevRoads.get(node);\n      invariant(road, 'road must exist');\n      node = road.from;\n      if (node === start) return road;\n    }\n\n    throw new Error('prev road must be found');\n  },\n};\n\nexport default PathFinder;\n","// @flow\nimport invariant from 'invariant';\nimport Vector2 from '../../lib/geom/Vector2';\nimport { uniq, flatten } from '../../lib/util';\nimport ConnectionSet from '../lib/ConnectionSet';\nimport type { ConnectionDirection } from '../lib/ConnectionDirections';\nimport PathFinder from '../lib/PathFinder';\nimport type Road from '../Road';\nimport type Traveller from '../Traveller';\nimport type { NetworkNode } from './NetworkNode';\n\nexport default class Intersection implements NetworkNode {\n  isDestination = false;\n  position: Vector2;\n  _connectionSet: ConnectionSet = new ConnectionSet();\n\n  constructor(x: number, y: number) {\n    this.position = new Vector2(x, y);\n  }\n\n  get incomingConnections(): Road[] {\n    return this._connectionSet.incoming;\n  }\n\n  get outgoingConnections(): Road[] {\n    return this._connectionSet.outgoing;\n  }\n\n  get canConsumeTraveller(): boolean {\n    return true;\n  }\n\n  consumeTraveller(traveller: Traveller) {\n    const destination = traveller.destination;\n    invariant(destination, 'traveller must have destination');\n\n    const nextRoad = PathFinder.getNextRoad(this, destination);\n    invariant(\n      this.outgoingConnections.includes(nextRoad),\n      'nextRoad must be from this intersection',\n    );\n\n    traveller.removeFromCurrentRoad();\n    nextRoad.addTravellerAtStart(traveller);\n  }\n\n  getAllReachableNodes(visited: Set<NetworkNode> = new Set()): NetworkNode[] {\n    visited.add(this);\n    return uniq(\n      flatten(\n        this._connectionSet.outgoing.map(road =>\n          road.getAllReachableNodes(visited),\n        ),\n      ),\n    );\n  }\n\n  getVisualConnectionPointAtAngle(): Vector2 {\n    return this.position;\n  }\n\n  getClosestOutgoingTraveller(): Traveller | null {\n    let bestTraveller = null;\n    let shortestDistance = Infinity;\n    this.outgoingConnections.forEach(road => {\n      const traveller = road.getTravellerAfterPosition(-1);\n      if (traveller && traveller.positionOnCurrentRoad < shortestDistance) {\n        bestTraveller = traveller;\n        shortestDistance = traveller.positionOnCurrentRoad;\n      }\n    });\n\n    return bestTraveller;\n  }\n\n  getClosestIncomingTraveller(): Traveller | null {\n    let bestTraveller = null;\n    let shortestDistance = Infinity;\n    this.incomingConnections.forEach(road => {\n      const traveller = road.getTravellerBeforePosition(road.length);\n      if (\n        traveller &&\n        traveller.distanceToEndOfCurrentRoad < shortestDistance\n      ) {\n        bestTraveller = traveller;\n        shortestDistance = traveller.distanceToEndOfCurrentRoad;\n      }\n    });\n\n    return bestTraveller;\n  }\n\n  connectTo(node: Road, direction: ConnectionDirection) {\n    this._connectionSet.add(node, direction);\n  }\n}\n","// @flow\n// import Ellipse from '../lib/geom/Ellipse';\nimport type Color from 'color';\nimport Vector2 from '../../lib/geom/Vector2';\nimport { normaliseAngle, constrain, lerp, mapRange } from '../../lib/util';\n\n// const HIP_HEIGHT = 10;\nconst Y_SCALE = 0.3;\n// const LEG_WIDTH = 4;\n// // const LEG_LENGTH = 12;\n// // const KNEE_POSITION = 0.5;\n// const KNEE_SCALE = 1.3;\n// const LEG_MAX_LIFT = 0.3;\n// const KNEE_MAX_OUT = 14;\n// const STEP_DURATION = 0.2;\n// const REST_DURATION = 0.2;\n// const STEP_THRESHOLD = 0.2;\n// const FULL_STEP_DIST = 20;\n// const MIN_STEP_LIFT = 0.1;\n// const BASE_COLOR = BLUE.lighten(0.2);\n// const DARK_COLOR = BLUE;\n\nconst HALF_PI = Math.PI / 2;\n\nconst getLegRadius = ({ radius, hipHeight, legWidth }: PalLegConfig) =>\n  Math.sqrt(radius * radius - (radius - hipHeight) * (radius - hipHeight)) -\n  legWidth;\n\nexport type PalLegConfig = {|\n  +radius: number,\n  +hipHeight: number,\n  +legWidth: number,\n  +kneeScale: number,\n  +stepRestDuration: number,\n  +stepDuration: number,\n  +stepThreshold: number,\n  +fullStepDistance: number,\n  +color: Color,\n  +legMaxLift: number,\n  +kneeMaxOut: number,\n|};\n\nexport interface LegHaver {\n  +heading: number;\n  +headingVelocity: number;\n  +position: Vector2;\n  +velocity: Vector2;\n  +hipCenter: Vector2;\n  canLiftLeg(leg: PalLeg): boolean;\n}\n\nexport default class PalLeg {\n  _owner: LegHaver;\n  _config: PalLegConfig;\n  _angleOffset: number;\n  _hipRadius: number;\n  _kneeRadius: number;\n  _floorRadius: number;\n  _lastFootOnFloorXY: Vector2;\n  _lastFootOnFloorPalPosition: Vector2;\n  _stepProgress: number = 0;\n  _restTimer: number = 0;\n  _currentStepMaxLift: number = 1;\n\n  constructor(owner: LegHaver, config: PalLegConfig, angleOffset: number) {\n    this._owner = owner;\n    this._config = config;\n    this._angleOffset = angleOffset;\n    this._hipRadius = getLegRadius(config);\n    this._kneeRadius = getLegRadius(config) * config.kneeScale;\n    this._floorRadius = getLegRadius(config);\n\n    this._lastFootOnFloorXY = this._getIdealFootRestingXY();\n    this._lastFootOnFloorPalPosition = this._owner.position;\n  }\n\n  get angle(): number {\n    return this._owner.heading + this._angleOffset;\n  }\n\n  get isStepping(): boolean {\n    return this._stepProgress > 0;\n  }\n\n  get isResting(): boolean {\n    return this._restTimer > 0;\n  }\n\n  get liftAmount(): number {\n    return Math.sin(this._stepProgress * Math.PI) * this._currentStepMaxLift;\n  }\n\n  get stepProgress(): number {\n    return this._stepProgress;\n  }\n\n  update(dtSeconds: number) {\n    this._restTimer = constrain(\n      0,\n      this._config.stepRestDuration,\n      this._restTimer - dtSeconds,\n    );\n    if (this.isResting) return;\n\n    if (this.isStepping) {\n      this._stepProgress = constrain(\n        0,\n        1,\n        this._stepProgress + dtSeconds / this._config.stepDuration,\n      );\n\n      if (this._stepProgress === 1) {\n        this._lastFootOnFloorXY = this._getCurrentFootXY();\n        this._lastFootOnFloorPalPosition = this._owner.position;\n        this._stepProgress = 0;\n        this._restTimer = this._config.stepDuration;\n      }\n    } else {\n      const footLeanDistance = this._getCurrentFootXY().distanceTo(\n        this._getIdealFootRestingXY(),\n      );\n      if (\n        footLeanDistance > this._config.stepThreshold &&\n        this._owner.canLiftLeg(this)\n      ) {\n        this._currentStepMaxLift = constrain(\n          0,\n          1,\n          mapRange(\n            this._config.stepThreshold,\n            this._config.fullStepDistance,\n            0.1,\n            1,\n            footLeanDistance,\n          ),\n        );\n        this._stepProgress = constrain(\n          0,\n          1,\n          this._stepProgress + dtSeconds / this._config.stepDuration,\n        );\n      }\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n\n    // hip.debugDraw('lime');\n    // knee.debugDraw('cyan');\n    // foot.debugDraw('red');\n\n    const colorDarkenAmount = constrain(\n      0,\n      1,\n      Math.abs(normaliseAngle(-HALF_PI - this.angle) / HALF_PI),\n    );\n    const legColor = this._config.color.darken(\n      0.2 * (1 - colorDarkenAmount * colorDarkenAmount),\n    );\n\n    const hip = this._projectZ(\n      this._getCurrentHipXY(),\n      this._getCurrentHipZ(),\n      this._getCurrentHipOrigin(),\n    );\n    const knee = this._projectZ(\n      this._getCurrentKneeXY(),\n      this._getCurrentKneeZ(),\n      this._getCurrentKneeOrigin(),\n    );\n    const foot = this._projectZ(\n      this._getCurrentFootXY(),\n      this._getCurrentFootZ(),\n      this._getCurrentFootOrigin(),\n    );\n\n    ctx.moveTo(hip.x, hip.y);\n    ctx.quadraticCurveTo(knee.x, knee.y, foot.x, foot.y);\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = legColor.toString();\n    ctx.lineWidth = this._config.legWidth;\n    ctx.stroke();\n  }\n\n  _projectZ(\n    xy: Vector2,\n    z: number,\n    origin: Vector2 = this._owner.position,\n  ): Vector2 {\n    return new Vector2(xy.x, origin.y - z + (xy.y - origin.y) * Y_SCALE);\n  }\n\n  _getIdealFootRestingXY(): Vector2 {\n    return this._owner.position.add(\n      Vector2.fromMagnitudeAndAngle(\n        this._floorRadius,\n        this._owner.heading + this._angleOffset,\n      ),\n    );\n  }\n\n  _getPredictedIdealFootXYAtEndOfOfStep(): Vector2 {\n    const timeRemaining =\n      (1.4 - this._stepProgress) * this._config.stepDuration;\n\n    const predictedPosition = this._owner.velocity\n      .scale(timeRemaining)\n      .add(this._owner.position);\n\n    const predictedHeading =\n      this._owner.heading + this._owner.headingVelocity * timeRemaining;\n\n    return predictedPosition.add(\n      Vector2.fromMagnitudeAndAngle(\n        this._floorRadius,\n        predictedHeading + this._angleOffset,\n      ),\n    );\n  }\n\n  // _getFootLiftVector(): Vector2 {\n  //   return new Vector2(0, LEG_LENGTH * LEG_MAX_LIFT * this._liftAmt * -1);\n  // }\n\n  _getCurrentFootXY(): Vector2 {\n    // console.log('isStepping', this.isStepping);\n    if (this.isStepping) {\n      const start = this._lastFootOnFloorXY;\n      const target = this._getPredictedIdealFootXYAtEndOfOfStep();\n      return start.lerp(target, this._stepProgress);\n    }\n\n    return this._lastFootOnFloorXY;\n  }\n\n  _getCurrentFootZ(): number {\n    return lerp(\n      0,\n      this._getCurrentHipZ() * this._config.legMaxLift,\n      this.liftAmount,\n    );\n  }\n\n  _getCurrentFootOrigin(): Vector2 {\n    if (this.isStepping) {\n      return this._lastFootOnFloorPalPosition.lerp(\n        this._owner.position,\n        this._stepProgress,\n      );\n    }\n\n    return this._lastFootOnFloorPalPosition;\n  }\n\n  _getCurrentKneeXY(): Vector2 {\n    return this._owner.position\n      .add(\n        Vector2.fromMagnitudeAndAngle(\n          this._kneeRadius,\n          this._owner.heading + this._angleOffset,\n        ),\n      )\n      .add(\n        Vector2.fromMagnitudeAndAngle(\n          this.liftAmount * this._config.kneeMaxOut,\n          this._owner.heading,\n        ),\n      );\n  }\n\n  _getCurrentKneeZ(): number {\n    return (this._getCurrentFootZ() + this._getCurrentHipZ()) / 2;\n  }\n\n  _getCurrentKneeOrigin(): Vector2 {\n    return this._getCurrentHipOrigin().lerp(this._getCurrentFootOrigin(), 0.5);\n  }\n\n  _getCurrentHipXY(): Vector2 {\n    return this._owner.position.add(\n      Vector2.fromMagnitudeAndAngle(\n        this._hipRadius,\n        this._owner.heading + this._angleOffset,\n      ),\n    );\n    // return this._hipEllipse\n    //   .pointOnCircumference(this.angle)\n    //   .add(this._pal.bod.center);\n  }\n\n  _getCurrentHipZ(): number {\n    return (\n      this._owner.position.y -\n      this._owner.hipCenter.y -\n      (this._config.radius - this._config.hipHeight)\n    );\n  }\n\n  _getCurrentHipOrigin(): Vector2 {\n    return this._owner.position;\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport type Color from 'color';\nimport SceneObject from '../../lib/core/SceneObject';\nimport Vector2 from '../../lib/geom/Vector2';\nimport Circle from '../../lib/geom/Circle';\nimport ShapeHelpers from '../../lib/ShapeHelpers';\nimport {\n  lerp,\n  constrain,\n  normaliseAngle,\n  varyRelative,\n  varyAbsolute,\n  random,\n  randomInt,\n  flatten,\n  times,\n  shuffle,\n} from '../../lib/util';\nimport { BLUE } from '../../colors';\nimport PalLeg, { type PalLegConfig } from './PalLeg';\n\n// const RADIUS = 14;\n// const BOD_HEIGHT = 25;\n// const BOD_BOB = 15;\n\n// const EYE_Y = 6;\n// const EYE_X = 5;\n// const EYE_RADIUS = 2;\n// const MOUTH_THICKNESS = 2;\n// const MOUTH_Y = 2;\n// const MOUTH_WIDTH = 8;\n// const MOUNT_SMILE = 4;\n// const BUTT_TOP = 6;\n// const BUTT_BOTTOM = 12;\n// const BUTT_THICKNESS = 1.4;\n\n// const BOD_COLOR = BLUE.lighten(0.2);\n// const FACE_COLOR = BLUE.darken(0.3);\n// const BUTT_COLOR = BLUE.darken(0.1);\n\nconst MAX_SPEED = 80;\nconst ACCELERATION = 200;\nconst DECELERATION = 200;\n\nconst HALF_PI = Math.PI / 2;\n\nexport type PalConfig = {|\n  radius: number,\n  bodHeight: number,\n  bodBob: number,\n  eyeY: number,\n  eyeX: number,\n  eyeRadius: number,\n  mouthThickness: number,\n  mouthY: number,\n  mouthWidth: number,\n  mouthSmile: number,\n  buttTop: number,\n  buttBottom: number,\n  buttThickness: number,\n  color: Color,\n  legPairs: number,\n  ...PalLegConfig,\n|};\n\nconst generateRandomPalConfig = (): PalConfig => {\n  const radius = varyRelative(14, 0.2);\n  const hipHeight = varyRelative(radius * 0.7, 0.3);\n  const bodHeight = varyRelative(radius * 2, 0.3);\n  const legLength = bodHeight - (radius - hipHeight); // typical: 24\n\n  return {\n    radius,\n    bodHeight,\n    bodBob: varyRelative(radius, 0.2),\n    eyeY: varyRelative(radius * 0.5, 0.2),\n    eyeX: varyRelative(radius * 0.4, 0.3),\n    eyeRadius: varyRelative(radius * 0.15, 0.4),\n    mouthThickness: varyRelative(radius * 0.15, 0.4),\n    mouthY: varyAbsolute(0, radius * 0.2),\n    mouthWidth: varyRelative(radius * 0.5, 0.3),\n    mouthSmile: varyRelative(radius * 0.3, 0.3),\n    buttTop: varyRelative(radius * 0.4, 0.2),\n    buttBottom: varyRelative(radius * 0.85, 0.15),\n    buttThickness: varyRelative(radius * 0.1, 0.5),\n    color: BLUE.lighten(random(-0.2, 0.2))\n      .saturate(random(-0.2, 0.2))\n      .rotate(random(-10, 10)),\n    hipHeight,\n    kneeScale: varyAbsolute(1.3, 0.3),\n    legMaxLift: random(0.2, 0.5),\n    kneeMaxOut: varyRelative(legLength * 0.6, 0.4),\n    stepDuration: varyRelative(legLength * 0.01, 0.4),\n    stepRestDuration: varyRelative(legLength * 0.0083, 0.4),\n    stepThreshold: varyRelative(legLength * 0.01, 0.4),\n    fullStepDistance: varyRelative(legLength * 0.7, 0.4),\n    legWidth: varyRelative(radius * 0.3, 0.4),\n    legPairs: randomInt(1, 4),\n  };\n};\n\nexport default class Pal extends SceneObject {\n  _target: Vector2;\n  _heading: number = 0;\n  _speed: number = 0;\n  _headingVelocity: number = 0;\n  position: Vector2;\n  _config: PalConfig;\n\n  _legs: PalLeg[];\n\n  constructor(\n    x: number,\n    y: number,\n    config: PalConfig = generateRandomPalConfig(),\n  ) {\n    super();\n    this.position = new Vector2(x, y);\n    this._config = config;\n    this._target = new Vector2(x, y);\n    this._heading = Math.PI / 2;\n    const legConfig = {\n      radius: config.radius,\n      color: config.color,\n      fullStepDistance: config.fullStepDistance,\n      hipHeight: config.hipHeight,\n      kneeMaxOut: config.kneeMaxOut,\n      kneeScale: config.kneeScale,\n      legMaxLift: config.legMaxLift,\n      legWidth: config.legWidth,\n      stepDuration: config.stepDuration,\n      stepRestDuration: config.stepRestDuration,\n      stepThreshold: config.stepThreshold,\n    };\n\n    this._legs = shuffle(\n      flatten(\n        times(config.legPairs, n => {\n          const progress = (n + 1) / (config.legPairs + 1);\n          return [\n            new PalLeg(\n              this,\n              legConfig,\n              lerp(HALF_PI - 1, HALF_PI + 1, progress),\n            ),\n            new PalLeg(\n              this,\n              legConfig,\n              lerp(-HALF_PI + 1, -HALF_PI - 1, progress),\n            ),\n          ];\n        }),\n      ),\n    );\n  }\n\n  get hipCenter(): Vector2 {\n    const avgLift = this._legs\n      ? this._legs.reduce((sum, leg) => sum + leg.liftAmount, 0) /\n        this._legs.length\n      : 0;\n    const bob = this._config.bodBob * avgLift;\n    return new Vector2(\n      this.position.x,\n      this.position.y - this._config.bodHeight - bob,\n    );\n  }\n\n  get bod(): Circle {\n    const hipCenter = this.hipCenter;\n\n    return new Circle(hipCenter.x, hipCenter.y, this._config.radius);\n  }\n\n  get heading(): number {\n    return this._heading;\n  }\n\n  get _headingVec(): Vector2 {\n    return Vector2.fromMagnitudeAndAngle(1, this._heading);\n  }\n\n  get velocity(): Vector2 {\n    return this._headingVec.scale(this._speed);\n  }\n\n  get headingVelocity(): number {\n    return this._headingVelocity;\n  }\n\n  setTarget(x: number, y: number) {\n    this._target = new Vector2(x, y);\n  }\n\n  canLiftLeg(leg: PalLeg): boolean {\n    invariant(this._legs.includes(leg), 'whos leg even is this');\n    const enoughLegsOnFloor =\n      this._legs.filter(l => l !== leg && !l.isStepping).length >\n      Math.floor(Math.log(this._legs.length));\n\n    const anyStepsJustStarted = this._legs.some(\n      leg =>\n        leg.stepProgress > 0 &&\n        leg.stepProgress < 1 / (this._legs.length / 1.5),\n    );\n\n    return enoughLegsOnFloor && !anyStepsJustStarted;\n  }\n\n  update(dtMilliseconds: number) {\n    const dtSeconds = dtMilliseconds / 1000;\n    const angleToTarget = this.position.angleBetween(this._target);\n    const angleDelta = normaliseAngle(angleToTarget - this._heading);\n    const lastHeading = this._heading;\n    this._heading += angleDelta / 10;\n    this._headingVelocity =\n      normaliseAngle(this._heading - lastHeading) / dtSeconds;\n    const distance = this._target.distanceTo(this.position);\n    if (distance > 15) {\n      this._accelerate(ACCELERATION, dtSeconds);\n    } else {\n      this._accelerate(-DECELERATION, dtSeconds);\n    }\n    this._legs.forEach(leg => leg.update(dtSeconds));\n  }\n\n  updateWithPosition(position: Vector2, heading: number, dtSeconds: number) {\n    const lastPosition = this.position;\n    const lastHeading = this._heading;\n\n    this._heading = heading;\n    this._headingVelocity =\n      normaliseAngle(this._heading - lastHeading) / dtSeconds;\n    this._speed = lastPosition.distanceTo(position) / dtSeconds;\n    this.position = position;\n    this._legs.forEach(leg => leg.update(dtSeconds));\n  }\n\n  _accelerate(amt: number, dtSeconds: number) {\n    const lastSpeed = this._speed;\n    this._speed = constrain(0, MAX_SPEED, this._speed + amt * dtSeconds);\n    const avgSpeed = (lastSpeed + this._speed) / 2;\n    this.position = this.position.add(\n      Vector2.fromMagnitudeAndAngle(avgSpeed * dtSeconds, this._heading),\n    );\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const heading = normaliseAngle(this._heading);\n\n    ctx.setLineDash([]);\n    ctx.beginPath();\n    ctx.ellipse(\n      this.position.x,\n      this.position.y,\n      this.bod.radius * 0.8,\n      this.bod.radius * 0.8 * 0.3,\n      0,\n      0,\n      2 * Math.PI,\n    );\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n    ctx.fill();\n\n    this._legs\n      .filter(l => normaliseAngle(l._angleOffset + heading) < 0)\n      .forEach(leg => leg.draw(ctx));\n    this._legs\n      .filter(l => normaliseAngle(l._angleOffset + heading) >= 0)\n      .forEach(leg => leg.draw(ctx));\n    this._drawBod(ctx);\n  }\n\n  _drawBod(ctx: CanvasRenderingContext2D) {\n    ctx.save();\n    ctx.beginPath();\n    ShapeHelpers.circle(\n      ctx,\n      this.bod.center.x,\n      this.bod.center.y,\n      this._config.radius,\n    );\n    ctx.fillStyle = this._config.color.toString();\n    ctx.fill();\n    ctx.clip();\n\n    const faceX =\n      normaliseAngle(HALF_PI - this._heading) / HALF_PI * this._config.radius;\n\n    // EYES\n    ctx.beginPath();\n    ShapeHelpers.circle(\n      ctx,\n      faceX + this.bod.center.x + this._config.eyeX,\n      this.bod.center.y - this._config.eyeY,\n      this._config.eyeRadius,\n    );\n    ShapeHelpers.circle(\n      ctx,\n      faceX + this.bod.center.x - this._config.eyeX,\n      this.bod.center.y - this._config.eyeY,\n      this._config.eyeRadius,\n    );\n    ctx.fillStyle = this._config.color.darken(0.5).toString();\n    ctx.fill();\n\n    // MOUTH\n    ctx.beginPath();\n    ctx.moveTo(\n      faceX + this.bod.center.x - this._config.mouthWidth,\n      this.bod.center.y - this._config.mouthY,\n    );\n    ctx.quadraticCurveTo(\n      faceX + this.bod.center.x,\n      this.bod.center.y - this._config.mouthY + this._config.mouthSmile,\n      faceX + this.bod.center.x + this._config.mouthWidth,\n      this.bod.center.y - this._config.mouthY,\n    );\n    ctx.lineWidth = this._config.mouthThickness;\n    ctx.strokeStyle = this._config.color.darken(0.5).toString();\n    ctx.stroke();\n\n    // BUTT\n    ctx.beginPath();\n    this._makeButtLine(ctx, faceX + this._config.radius * 2);\n    this._makeButtLine(ctx, faceX - this._config.radius * 2);\n    ctx.lineWidth = this._config.buttThickness;\n    ctx.strokeStyle = this._config.color.darken(0.3).toString();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  _makeButtLine(ctx: CanvasRenderingContext2D, buttX: number) {\n    ctx.moveTo(\n      buttX * 1.6 + this.bod.center.x,\n      this.bod.center.y + this._config.buttTop,\n    );\n    ctx.quadraticCurveTo(\n      buttX * 1.7 + this.bod.center.x,\n      this.bod.center.y +\n        (this._config.buttTop + this._config.buttBottom) * 0.65,\n      buttX + this.bod.center.x,\n      this.bod.center.y + this._config.buttBottom,\n    );\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport SceneObject from '../lib/core/SceneObject';\nimport Circle from '../lib/geom/Circle';\nimport Vector2 from '../lib/geom/Vector2';\n// import ShapeHelpers from '../lib/ShapeHelpers';\nimport { outBack, inBack } from '../lib/easings';\nimport { sample, constrain, mapRange, random } from '../lib/util';\nimport TravellerFinder from '../systems/TravellerFinder';\n// import { BLUE } from '../colors';\nimport type { NetworkNode } from './networkNodes/NetworkNode';\nimport Intersection from './networkNodes/Intersection';\nimport type Road from './Road';\nimport Pal from './pal/Pal';\n\n// const TRAVELLER_COLOR = BLUE.fade(0.4);\n// const TRAVELLER_RADIUS = 14;\nconst MIN_TRAVELLER_COMFORTABLE_RADIUS = 60;\nconst MAX_TRAVELLER_COMFORTABLE_RADIUS = 60;\nconst MIN_TRAVELLER_SAFE_RADIUS = 30;\nconst MAX_TRAVELLER_SAFE_RADIUS = 30;\nconst NEARBY_RADIUS = 200;\n\nconst INITIAL_SPEED = 5;\nconst MAX_SPEED = 80;\nconst ACCELERATION = 200;\nconst DECELERATION = -200;\nconst ROAD_END_OVERSHOOT = 0;\n\nconst PATIENCE = 1500;\nconst FORCE_ACCELERATE_DURATION = 100;\n\nconst ENTER_DURATION = 400;\nconst EXIT_DURATION = 400;\n\nconst enterEase = outBack(3);\nconst exitEase = inBack(3);\n\nconst StopReasons: {|\n  STOPPED_FOR_DESTINATION: 'STOPPED_FOR_DESTINATION',\n  STOPPED_FOR_TRAFFIC_IN_FRONT: 'STOPPED_FOR_TRAFFIC_IN_FRONT',\n  STOPPED_FOR_TRAFFIC_NEARBY: 'STOPPED_FOR_TRAFFIC_NEARBY',\n|} = {\n  STOPPED_FOR_DESTINATION: 'STOPPED_FOR_DESTINATION',\n  STOPPED_FOR_TRAFFIC_IN_FRONT: 'STOPPED_FOR_TRAFFIC_IN_FRONT',\n  STOPPED_FOR_TRAFFIC_NEARBY: 'STOPPED_FOR_TRAFFIC_NEARBY',\n};\n\nexport type StopReason = $Values<typeof StopReasons>;\n\nexport default class Traveller extends SceneObject {\n  static MAX_SPEED = MAX_SPEED;\n  static StopReasons = StopReasons;\n\n  comfortableRadius = random(\n    MIN_TRAVELLER_COMFORTABLE_RADIUS,\n    MAX_TRAVELLER_COMFORTABLE_RADIUS,\n  );\n  safeRadius = random(MIN_TRAVELLER_SAFE_RADIUS, MAX_TRAVELLER_SAFE_RADIUS);\n  _currentRoad: Road | null = null;\n  _destination: NetworkNode | null = null;\n  _positionOnCurrentRoad: number = 0;\n  _speed: number = INITIAL_SPEED;\n  _age: number = 0;\n  _exitStartedAt: number | null = null;\n  _stoppedTime: number = 0;\n  _forceAccelerateTimer: number = 0;\n  _stopReason: StopReason | null = null;\n  _stoppedFor: Traveller[] = [];\n  _pal: Pal | null = null;\n\n  get currentRoad(): Road | null {\n    return this._currentRoad;\n  }\n\n  get position(): Vector2 {\n    invariant(this._currentRoad, 'currentRoad must be defined');\n    return this._currentRoad.getPointAtPosition(this._positionOnCurrentRoad);\n  }\n\n  // get predictedPositionInDirectionOfTravel(): Vector2 {\n  //   invariant(this._currentRoad, 'currentRoad must be defined');\n  //   return this._getPredictedPointForPosition(\n  //     this._currentRoad,\n  //     this._positionOnCurrentRoad + 1,\n  //   );\n  // }\n\n  get predictedStopPoint(): Vector2 {\n    const currentRoad = this._currentRoad;\n    invariant(currentRoad, 'currentRoad must be defined');\n    const stopPosition = this._getPredictedStopPositionIfDecelerating();\n    return this._getPredictedPointForPosition(currentRoad, stopPosition);\n  }\n\n  get predictedStopArea(): Circle {\n    const center = this.predictedStopPoint;\n    return new Circle(center.x, center.y, this.safeRadius);\n  }\n\n  get potentialNextPredictedStopPoint(): Vector2 {\n    const currentRoad = this._currentRoad;\n    invariant(currentRoad, 'currentRoad must be defined');\n    const stopPosition = this._getPredictedStopPositionIfDecelerating();\n    return this._getPredictedPointForPosition(currentRoad, stopPosition + 1);\n  }\n\n  get positionOnCurrentRoad(): number {\n    return this._positionOnCurrentRoad;\n  }\n\n  get distanceToEndOfCurrentRoad(): number {\n    invariant(this._currentRoad, 'traveller is not on a road');\n    return this._currentRoad.length - this._positionOnCurrentRoad;\n  }\n\n  get destination(): NetworkNode | null {\n    return this._destination;\n  }\n\n  get speed(): number {\n    return this._speed;\n  }\n\n  get isStopped(): boolean {\n    return this.speed === 0;\n  }\n\n  get stoppedTime(): number {\n    return this._stoppedTime;\n  }\n\n  get stopReason(): StopReason | null {\n    return this._stopReason;\n  }\n\n  isStoppedFor(other: Traveller): boolean {\n    return this._stoppedFor.includes(other);\n  }\n\n  onAddedToRoad(road: Road) {\n    this._currentRoad = road;\n    this._positionOnCurrentRoad = 0;\n    if (!this._destination) {\n      this._pickDestination();\n    }\n  }\n\n  onRemovedFromRoad() {\n    this.getScene()\n      .getSystem(TravellerFinder)\n      .removeTraveller(this);\n    this._currentRoad = null;\n  }\n\n  onRemovedFromScene() {\n    this.removeFromCurrentRoad();\n  }\n\n  removeFromCurrentRoad() {\n    if (this._currentRoad) this._currentRoad.removeTraveller(this);\n  }\n\n  update(dtMilliseconds: number) {\n    this._age += dtMilliseconds;\n    this._stopReason = null;\n    this._stoppedFor = [];\n\n    const currentRoad = this._currentRoad;\n    invariant(currentRoad, 'current road must be defined');\n\n    this._move(dtMilliseconds, currentRoad);\n\n    this._getPal().updateWithPosition(\n      this.position,\n      currentRoad.getAngleAtPosition(this._positionOnCurrentRoad),\n      dtMilliseconds / 1000,\n    );\n    if (window.debugDraw) this._debugDraw();\n\n    this._checkAtEndOfRoad(currentRoad);\n    this._checkExit();\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const currentRoad = this._currentRoad;\n    invariant(currentRoad, 'current road must be defined');\n\n    this._getPal().draw(ctx);\n\n    // const position = this.position;\n    // const scale =\n    //   this._getEnterTransitionScale() * this._getExitTransitionScale();\n\n    // ctx.beginPath();\n    // ctx.fillStyle = TRAVELLER_COLOR.toString();\n    // ShapeHelpers.circle(ctx, position.x, position.y, TRAVELLER_RADIUS * scale);\n    // ctx.fill();\n  }\n\n  getCurrentZ(): number {\n    return this.position.y;\n  }\n\n  get _isExiting(): boolean {\n    return this._exitStartedAt !== null;\n  }\n\n  _getPal(): Pal {\n    if (!this._pal) {\n      this._pal = new Pal(this.position.x, this.position.y);\n    }\n\n    return this._pal;\n  }\n\n  _debugDraw() {\n    const currentRoad = this._currentRoad;\n    if (!currentRoad) return;\n\n    const predictedStopPoint = this.predictedStopPoint;\n    new Circle(\n      this.position.x,\n      this.position.y,\n      this.comfortableRadius,\n    ).debugDraw('rgba(0, 255, 0, 0.4)');\n    new Circle(this.position.x, this.position.y, this.safeRadius).debugDraw(\n      this._forceAccelerateTimer ? 'cyan' : 'red',\n    );\n    predictedStopPoint.debugDraw('lime');\n    this.predictedStopArea.debugDraw('rgba(255, 0, 255, 0.5)');\n\n    const ctx: CanvasRenderingContext2D = window.debugContext;\n    ctx.fillText(\n      `${this.id} ${Math.round(this._stoppedTime)}`,\n      this.position.x,\n      this.position.y,\n    );\n  }\n\n  _getEnterTransitionScale() {\n    return enterEase(\n      constrain(0, 1, mapRange(0, ENTER_DURATION, 0, 1, this._age)),\n    );\n  }\n\n  _getExitTransitionScale() {\n    if (this._exitStartedAt === null) return 1;\n    return (\n      1 -\n      exitEase(\n        constrain(\n          0,\n          1,\n          mapRange(\n            this._exitStartedAt,\n            this._exitStartedAt + EXIT_DURATION,\n            0,\n            1,\n            this._age,\n          ),\n        ),\n      )\n    );\n  }\n\n  _getPredictedStopPositionIfDecelerating(): number {\n    const timeToStop = -this._speed / DECELERATION;\n    return (\n      this._positionOnCurrentRoad +\n      this._speed * timeToStop +\n      0.5 * DECELERATION * timeToStop * timeToStop\n    );\n  }\n\n  _getPredictedPointForPosition(currentRoad: Road, position: number): Vector2 {\n    if (position <= currentRoad.length) {\n      return currentRoad.getPointAtPosition(position);\n    }\n\n    const overshoot = position - currentRoad.length;\n    const overshootAngle = currentRoad.getAngleAtPosition(currentRoad.length);\n    return Vector2.fromMagnitudeAndAngle(overshoot, overshootAngle).add(\n      currentRoad.end,\n    );\n  }\n\n  _pickDestination() {\n    if (!this._currentRoad) return;\n    const potentialDestinations = this._currentRoad\n      .getAllReachableNodes()\n      .filter(node => node.isDestination);\n    const destination = sample(potentialDestinations);\n    this._destination = destination;\n  }\n\n  _move(dtMilliseconds: number, currentRoad: Road) {\n    const dtSeconds = dtMilliseconds / 1000;\n\n    this._forceAccelerateTimer = constrain(\n      0,\n      FORCE_ACCELERATE_DURATION,\n      this._forceAccelerateTimer - dtMilliseconds,\n    );\n\n    if (\n      this._forceAccelerateTimer <= 0 &&\n      this._shouldDecelerate(currentRoad)\n    ) {\n      this._accelerate(DECELERATION, dtSeconds, currentRoad);\n    } else {\n      this._accelerate(ACCELERATION, dtSeconds, currentRoad);\n    }\n\n    if (this._speed === 0) {\n      this._stoppedTime += dtMilliseconds;\n    } else {\n      this._stoppedTime = 0;\n    }\n  }\n\n  _shouldDecelerate(currentRoad: Road): boolean {\n    const predictedStopPosition = this._getPredictedStopPositionIfDecelerating();\n    if (\n      currentRoad.to === this._destination &&\n      currentRoad.length + ROAD_END_OVERSHOOT < predictedStopPosition\n    ) {\n      this._stopReason = StopReasons.STOPPED_FOR_DESTINATION;\n      return true;\n    }\n\n    const nextTravellerOnRoad = currentRoad.getTravellerAfterPosition(\n      this._positionOnCurrentRoad,\n    );\n\n    const safeStopAheadPosition =\n      predictedStopPosition + this.comfortableRadius;\n\n    if (\n      nextTravellerOnRoad &&\n      nextTravellerOnRoad.positionOnCurrentRoad < safeStopAheadPosition\n    ) {\n      this._stopReason = StopReasons.STOPPED_FOR_TRAFFIC_IN_FRONT;\n      this._stoppedFor.push(nextTravellerOnRoad);\n      return true;\n    }\n\n    if (currentRoad.to instanceof Intersection) {\n      const intersection = currentRoad.to;\n      const outgoingTraveller = intersection.getClosestOutgoingTraveller();\n      if (outgoingTraveller) {\n        const outgoingTravellerPosition =\n          currentRoad.length + outgoingTraveller.positionOnCurrentRoad;\n\n        if (outgoingTravellerPosition < safeStopAheadPosition) {\n          this._stopReason = StopReasons.STOPPED_FOR_TRAFFIC_IN_FRONT;\n          this._stoppedFor.push(outgoingTraveller);\n          return true;\n        }\n      }\n\n      const incomingTraveller = intersection.getClosestIncomingTraveller();\n      if (incomingTraveller && incomingTraveller !== this) {\n        const incomingTravellerPosition =\n          currentRoad.length - incomingTraveller.distanceToEndOfCurrentRoad;\n        if (incomingTravellerPosition < safeStopAheadPosition) {\n          this._stopReason = StopReasons.STOPPED_FOR_TRAFFIC_IN_FRONT;\n          this._stoppedFor.push(incomingTraveller);\n          return true;\n        }\n      }\n    }\n\n    if (this._shouldDecelerateForNearbyTravellers(currentRoad)) {\n      this._stopReason = StopReasons.STOPPED_FOR_TRAFFIC_NEARBY;\n      return true;\n    }\n\n    // const currentPoint = this.position;\n    // const currentSafeCircle = new Circle(\n    //   currentPoint.x,\n    //   currentPoint.y,\n    //   this.safeRadius,\n    // );\n    // if (\n    //   this._shouldDecelerateForTravellersInCircle(\n    //     currentRoad,\n    //     currentSafeCircle,\n    //   )\n    // ) {\n    //   return true;\n    // }\n\n    // const predictedStopPoint = this._getPredictedStopPointIfDecelerating(\n    //   currentRoad,\n    // );\n    // const predictedSafeCircle = new Circle(\n    //   predictedStopPoint.x,\n    //   predictedStopPoint.y,\n    //   this.safeRadius,\n    // );\n    // if (\n    //   this._shouldDecelerateForTravellersInCircle(\n    //     currentRoad,\n    //     predictedSafeCircle,\n    //   )\n    // ) {\n    //   return true;\n    // }\n\n    return false;\n  }\n\n  _shouldDecelerateForNearbyTravellers(currentRoad: Road): boolean {\n    const travellerFinder = this.getScene().getSystem(TravellerFinder);\n    const stopArea = this.predictedStopArea;\n    const stopPoint = stopArea.center;\n    const nextStopPoint = this.potentialNextPredictedStopPoint;\n    const searchArea = stopArea.withRadius(NEARBY_RADIUS);\n    const nearbyTravellers = travellerFinder.findTravellersInCircle(searchArea);\n\n    for (const other of nearbyTravellers) {\n      // cannot crash into self\n      if (other === this) continue;\n\n      // if we both started breaking now, we would be a safe distance so we're fine\n      const otherStopArea = other.predictedStopArea;\n      const otherStopPoint = otherStopArea.center;\n      if (!stopArea.intersectsCircle(otherStopArea)) continue;\n\n      // currently we think other will stop at the center of otherStopArea.\n      // otherNextStopPoint is one pixel further forward based other's current\n      // heading\n      const otherNextStopPoint = other.potentialNextPredictedStopPoint;\n\n      // if we're moving away from each other, everything is fine:\n      const currentStopDistance = stopPoint.distanceTo(otherStopArea.center);\n      const nextStopDistance = nextStopPoint.distanceTo(otherNextStopPoint);\n      if (nextStopDistance > currentStopDistance) continue;\n\n      // who is moving in a direction that's headed more towards the other's\n      // stop position? if they're moving towards me but i'm moving more\n      // orthagonally relative to them, they should slow down\n      const approachAmount = stopPoint.distanceTo(otherNextStopPoint);\n      const otherApproachAmount = otherStopPoint.distanceTo(nextStopPoint);\n      if (approachAmount < otherApproachAmount) {\n        continue;\n      }\n\n      // so we know we're moving towards them faster than they're moving\n      // towards us, but how much? If it's barely any and we're not already too\n      // close to them, we could just keep going\n      if (\n        approachAmount - otherApproachAmount <\n        0.15\n        // approachAmount > this.safeRadius * 0.8\n      ) {\n        continue;\n      }\n\n      // if there's a clash... just randomly tie-break\n      if (approachAmount === otherApproachAmount) {\n        return Math.random() < 0.5;\n      }\n\n      // if we've been waiting around for fuckin ever just slam that fuckin\n      // pedal to the floor like ugh (in reality just nudge forward a little)\n      // (unless the other one is stopped to cus otherwise we'll just crash)\n      if (this._stoppedTime > PATIENCE && !other.isStopped) {\n        this._forceAcceleration();\n        return false;\n      }\n\n      // attempt to break deadlocks. i guess this is the equivalent of 'other'\n      // waving at the current traveller to continue\n      if (other.isStoppedFor(this)) continue;\n\n      this._stoppedFor.push(other);\n    }\n\n    if (this._stoppedFor.length) return true;\n\n    return false;\n  }\n\n  // _shouldDecelerateForTravellersInCircle(currentRoad: Road, circle: Circle) {\n  //   const travellerFinder = this.getScene().getSystem(TravellerFinder);\n  //   const overlappingTravellers = travellerFinder.findTravellersInCircle(\n  //     circle,\n  //   );\n\n  //   const currentPosition = this.position;\n  //   const nextPosition = this.predictedPositionInDirectionOfTravel;\n\n  //   const clashingTravellers = overlappingTravellers.filter(other => {\n  //     if (other === this) return false;\n  //     if (other.currentRoad === currentRoad) return false;\n\n  // const currentDistance = currentPosition.distanceTo(other.position);\n  // const nextDistance = nextPosition.distanceTo(other.position);\n\n  // const isGettingCloser = nextDistance < currentDistance;\n  // if (!isGettingCloser) return false;\n\n  // const otherNextPosition = other.predictedPositionInDirectionOfTravel;\n  // const otherNextDistance = currentPosition.distanceTo(otherNextPosition);\n  // const thisMoveDelta = nextDistance - currentDistance;\n  // const otherMoveDelta = otherNextDistance - currentDistance;\n  // if (thisMoveDelta < otherMoveDelta) return true;\n\n  // if (this.isStopped && !other.isStopped) return true;\n\n  // if (this.isStopped && other.isStopped) {\n  //   if (this.stoppedTime === other.stoppedTime && this.id < other.id)\n  //     return false;\n  //   if (this.stoppedTime < other.stoppedTime) return false;\n  // }\n\n  //     return true;\n  //   });\n\n  //   return clashingTravellers.length > 0;\n  // }\n\n  _forceAcceleration() {\n    this._forceAccelerateTimer = FORCE_ACCELERATE_DURATION;\n  }\n\n  _accelerate(acceleration: number, dtSeconds: number, currentRoad: Road) {\n    const lastSpeed = this._speed;\n    this._speed = constrain(\n      0,\n      MAX_SPEED,\n      this._speed + acceleration * dtSeconds,\n    );\n    const avgSpeed = (lastSpeed + this._speed) / 2;\n    this._positionOnCurrentRoad = constrain(\n      0,\n      currentRoad.length,\n      this._positionOnCurrentRoad + avgSpeed * dtSeconds,\n    );\n  }\n\n  _checkAtEndOfRoad(currentRoad: Road) {\n    if (this._positionOnCurrentRoad === currentRoad.length) {\n      if (this._isExiting) return;\n      this._onReachEndOfCurrentRoad(currentRoad);\n    }\n  }\n\n  _checkExit() {\n    if (this._isExiting && this._age >= this._exitStartedAt + EXIT_DURATION) {\n      this._onExit();\n    }\n  }\n\n  _onReachEndOfCurrentRoad(currentRoad: Road) {\n    const nextNode = currentRoad.to;\n    const destination = this._destination;\n    if (nextNode.canConsumeTraveller) {\n      nextNode.consumeTraveller(this);\n      if (nextNode === destination) {\n        this._onReachDestination();\n      }\n    }\n  }\n\n  _onReachDestination() {\n    this._exit();\n  }\n\n  _onExit() {\n    this.getScene().removeChild(this);\n  }\n\n  _exit() {\n    this._exitStartedAt = this._age;\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport { constrain, compact } from '../../util';\nimport Circle from '../Circle';\nimport Vector2 from '../Vector2';\nimport type { Vector2ish } from '../Vector2';\nimport StraightPathSegment from './StraightPathSegment';\nimport CirclePathSegment from './CirclePathSegment';\n\nexport interface PathSegment {\n  +start: Vector2;\n  +end: Vector2;\n  +length: number;\n  getPointAtPosition(position: number): Vector2;\n  getAngleAtPosition(position: number): number;\n}\n\nexport default class Path implements PathSegment {\n  static straightThroughPoints(...points: Vector2ish[]): Path {\n    let lastPoint = Vector2.from(points.shift());\n    const path = new Path();\n\n    points.map(Vector2.from).forEach(point => {\n      path.addSegment(new StraightPathSegment(lastPoint, point));\n      lastPoint = point;\n    });\n\n    return path;\n  }\n\n  segments: PathSegment[] = [];\n\n  constructor(...segments: PathSegment[]) {\n    this.addSegments(...segments);\n  }\n\n  get start(): Vector2 {\n    return this.segments[0].start;\n  }\n\n  get end(): Vector2 {\n    return this.segments[this.segments.length - 1].end;\n  }\n\n  get length(): number {\n    return this.segments.reduce(\n      (length, segment) => length + segment.length,\n      0,\n    );\n  }\n\n  getPointAtPosition(position: number): Vector2 {\n    const constrained = constrain(0, this.length, position);\n    let soFar = 0;\n    for (const segment of this.segments) {\n      if (constrained <= soFar + segment.length) {\n        return segment.getPointAtPosition(constrained - soFar);\n      }\n      soFar += segment.length;\n    }\n    throw new Error('this is supposed to be unreachable oops');\n  }\n\n  getAngleAtPosition(position: number): number {\n    const constrained = constrain(0, this.length, position);\n    let soFar = 0;\n    for (const segment of this.segments) {\n      if (constrained <= soFar + segment.length) {\n        return segment.getAngleAtPosition(constrained - soFar);\n      }\n      soFar += segment.length;\n    }\n    throw new Error('this is supposed to be unreachable oops');\n  }\n\n  addSegment(segment: PathSegment): this {\n    const lastSegment = this.segments[this.segments.length - 1];\n    if (lastSegment) {\n      invariant(\n        lastSegment.end.equals(segment.start),\n        `segments must neatly join together - ${lastSegment.end.toString()} !== ${segment.start.toString()}`,\n      );\n    }\n    this.segments.push(segment);\n    return this;\n  }\n\n  addSegments(...segments: PathSegment[]): this {\n    segments.forEach(segment => this.addSegment(segment));\n    return this;\n  }\n\n  autoRound(radius: number): this {\n    const newSegments = this.segments.map((segment, i): PathSegment | null => {\n      const lastSegment = i === 0 ? null : this.segments[i - 1];\n      if (!lastSegment) {\n        if (segment instanceof StraightPathSegment) return null;\n        return segment;\n      }\n\n      if (!(segment instanceof StraightPathSegment)) return segment;\n      if (!(lastSegment instanceof StraightPathSegment)) return null;\n\n      invariant(lastSegment.end.equals(segment.start), 'segments must join');\n\n      const entryAngle = lastSegment.angle;\n      const exitAngle = segment.angle;\n      const usableRadius = Math.min(\n        radius,\n        lastSegment.length / 2,\n        segment.length / 2,\n      );\n\n      const containingCircle = new Circle(\n        segment.start.x,\n        segment.start.y,\n        usableRadius,\n      );\n\n      return CirclePathSegment.withinCircle(\n        containingCircle,\n        entryAngle,\n        exitAngle,\n      );\n    });\n\n    const compacted = compact(newSegments);\n\n    const start = this.start;\n    const end = this.end;\n    let lastPoint = start;\n    this.segments = [];\n\n    compacted.forEach(segment => {\n      if (segment.start.equals(lastPoint)) {\n        this.addSegment(segment);\n      } else {\n        this.addSegment(new StraightPathSegment(lastPoint, segment.start));\n        this.addSegment(segment);\n      }\n\n      lastPoint = segment.end;\n    });\n\n    if (!lastPoint.equals(end)) {\n      this.addSegment(new StraightPathSegment(lastPoint, end));\n    }\n\n    return this;\n  }\n\n  freeze(): this {\n    Object.freeze(this);\n    return this;\n  }\n}\n","// @flow\nimport { compact } from '../lib/util';\nimport SceneObject from '../lib/core/SceneObject';\nimport type Scene from '../lib/core/Scene';\nimport Vector2 from '../lib/geom/Vector2';\nimport Circle from '../lib/geom/Circle';\nimport CirclePathSegment from '../lib/geom/path/CirclePathSegment';\nimport Path from '../lib/geom/path/Path';\nimport Road from './Road';\nimport Intersection from './networkNodes/Intersection';\nimport ConnectionDirections from './lib/ConnectionDirections';\nimport type { ConnectionDirection } from './lib/ConnectionDirections';\n\nexport default class Junction extends SceneObject {\n  _circle: Circle;\n  _intersectionsByAngle: { [angleString: string]: ?Intersection } = {};\n  _incomingIntersections: Set<Intersection> = new Set();\n  _outgoingIntersections: Set<Intersection> = new Set();\n  _roads: Road[] = [];\n\n  constructor(x: number, y: number, radius: number) {\n    super();\n    this._circle = new Circle(x, y, radius);\n  }\n\n  get position(): Vector2 {\n    return this._circle.center;\n  }\n\n  onAddedToScene(scene: Scene) {\n    super.onAddedToScene(scene);\n    this._roads.forEach(road => scene.addChild(road));\n  }\n\n  getVisualConnectionPointAtAngle(radians: number): Vector2 {\n    return this._circle.pointOnCircumference(radians);\n  }\n\n  connectToRoadAtAngle(\n    road: Road,\n    angle: number,\n    direction: ConnectionDirection,\n  ): Intersection {\n    const intersection = this._intersectionAtAngle(angle);\n    intersection.connectTo(road, direction);\n\n    const isIncoming =\n      direction === ConnectionDirections.IN ||\n      this._incomingIntersections.has(intersection);\n\n    const isOutgoing =\n      direction === ConnectionDirections.OUT ||\n      this._outgoingIntersections.has(intersection);\n\n    if (isIncoming) this._incomingIntersections.add(intersection);\n    if (isOutgoing) this._outgoingIntersections.add(intersection);\n\n    this._intersections.forEach(other => {\n      if (other === intersection) return;\n\n      if (isIncoming && this._outgoingIntersections.has(other)) {\n        const path = new Path(\n          CirclePathSegment.withinCircle(\n            this._circle,\n            this._circle.center.subtract(intersection.position).angle,\n            other.position.subtract(this._circle.center).angle,\n          ),\n        );\n\n        this._addRoad(new Road(intersection, other, { path }));\n      }\n\n      if (isOutgoing && this._incomingIntersections.has(other)) {\n        const path = new Path(\n          CirclePathSegment.withinCircle(\n            this._circle,\n            this._circle.center.subtract(other.position).angle,\n            intersection.position.subtract(this._circle.center).angle,\n          ),\n        );\n        this._addRoad(new Road(other, intersection, { path }));\n      }\n    });\n\n    return intersection;\n  }\n\n  _intersectionAtAngle(angle: number): Intersection {\n    const angleStr = angle.toString();\n    if (this._intersectionsByAngle[angleStr]) {\n      return this._intersectionsByAngle[angleStr];\n    }\n\n    const intersection = this._createIntersectionAtAngle(angle);\n    this._intersectionsByAngle[angleStr] = intersection;\n    return intersection;\n  }\n\n  _createIntersectionAtAngle(angle: number): Intersection {\n    const position = this.getVisualConnectionPointAtAngle(angle);\n    return new Intersection(position.x, position.y);\n  }\n\n  get _intersections(): Intersection[] {\n    return compact(\n      Object.keys(this._intersectionsByAngle).map(\n        angle => this._intersectionsByAngle[angle],\n      ),\n    );\n  }\n\n  _addRoad(road: Road) {\n    this._roads.push(road);\n    if (this._scene) {\n      this._scene.addChild(road);\n    }\n  }\n}\n","// @flow\nimport SceneObject from '../lib/core/SceneObject';\nimport Path from '../lib/geom/path/Path';\nimport StraightPathSegment from '../lib/geom/path/StraightPathSegment';\nimport Vector2 from '../lib/geom/Vector2';\nimport type { Vector2ish } from '../lib/geom/Vector2';\nimport ShapeHelpers from '../lib/ShapeHelpers';\nimport { YELLOW } from '../colors';\nimport ConnectionDirections from './lib/ConnectionDirections';\nimport type { NetworkNode } from './networkNodes/NetworkNode';\nimport Junction from './Junction';\nimport Traveller from './Traveller';\n\n// const ROAD_OUTER_COLOR = BLUE;\n// const ROAD_INNER_COLOR = LIGHT_BG;\nconst ROAD_DASH_COLOR = YELLOW.darken(0.2);\n// const ROAD_OUTER_WIDTH = 12;\n// const ROAD_INNER_WIDTH = 13;\nconst ROAD_DASH_WIDTH = 3;\nconst ROAD_IDEAL_DASH = [5, 10];\nconst ROAD_IDEAL_DASH_LENGTH = ROAD_IDEAL_DASH.reduce((a, b) => a + b, 0);\nconst ROAD_DASH_SPEED = 0.05;\n\nexport type RoadOptions = {|\n  autoRound?: number,\n  points?: Vector2ish[],\n  path?: Path,\n|};\n\nexport default class Road extends SceneObject {\n  isNode = false;\n  from: NetworkNode;\n  to: NetworkNode;\n  _path: Path;\n  _currentTravellers: Traveller[] = [];\n\n  constructor(\n    from: NetworkNode | Junction,\n    to: NetworkNode | Junction,\n    { points, autoRound, path }: RoadOptions = {},\n  ) {\n    super();\n\n    const angleFrom = points\n      ? from.position.angleBetween(Vector2.from(points[0]))\n      : from.position.angleBetween(to.position);\n\n    const angleTo = points\n      ? to.position.angleBetween(Vector2.from(points[points.length - 1]))\n      : to.position.angleBetween(from.position);\n\n    if (path) {\n      this._path = path;\n    } else if (points) {\n      this._path = Path.straightThroughPoints(\n        from.getVisualConnectionPointAtAngle(angleFrom),\n        ...points,\n        to.getVisualConnectionPointAtAngle(angleTo),\n      );\n    } else {\n      this._path = new Path().addSegment(\n        new StraightPathSegment(\n          from.getVisualConnectionPointAtAngle(angleFrom),\n          to.getVisualConnectionPointAtAngle(angleTo),\n        ),\n      );\n    }\n\n    if (autoRound != null) {\n      this._path.autoRound(autoRound);\n    }\n\n    if (from instanceof Junction) {\n      this.from = from.connectToRoadAtAngle(\n        this,\n        angleFrom,\n        ConnectionDirections.OUT,\n      );\n    } else {\n      this.from = from;\n      from.connectTo(this, ConnectionDirections.OUT);\n    }\n\n    if (to instanceof Junction) {\n      this.to = to.connectToRoadAtAngle(this, angleTo, ConnectionDirections.IN);\n    } else {\n      this.to = to;\n      to.connectTo(this, ConnectionDirections.IN);\n    }\n  }\n\n  get length(): number {\n    return this._path.length;\n  }\n\n  get start(): Vector2 {\n    return this._path.start;\n  }\n\n  get end(): Vector2 {\n    return this._path.end;\n  }\n\n  get expectedTimeFromStartToEnd(): number {\n    if (this._currentTravellers.length) {\n      const avgSpeed =\n        this._currentTravellers.reduce(\n          (sum, traveller) => sum + traveller.speed,\n          0,\n        ) / this._currentTravellers.length;\n      return this.length / avgSpeed;\n    }\n\n    return this.length / (Traveller.MAX_SPEED * 0.7);\n  }\n\n  canAddTravellerAtStart(): boolean {\n    const nextTraveller = this.getTravellerAfterPosition(0);\n    if (!nextTraveller) return true;\n    return (\n      nextTraveller.positionOnCurrentRoad > nextTraveller.comfortableRadius\n    );\n  }\n\n  addTravellerAtStart(traveller: Traveller) {\n    this._currentTravellers.push(traveller);\n    traveller.onAddedToRoad(this);\n  }\n\n  removeTraveller(traveller: Traveller): boolean {\n    const index = this._currentTravellers.indexOf(traveller);\n    if (index === -1) return false;\n    this.removeTravellerAtIndex(index);\n    return true;\n  }\n\n  removeTravellerAtIndex(index: number): Traveller {\n    const traveller = this._currentTravellers[index];\n    this._currentTravellers.splice(index, 1);\n    traveller.onRemovedFromRoad();\n    return traveller;\n  }\n\n  getAllReachableNodes(visited: Set<NetworkNode> = new Set()): NetworkNode[] {\n    const nodes = [];\n    if (visited.has(this.to)) return nodes;\n    return [...this.to.getAllReachableNodes(visited), this.to];\n  }\n\n  getPointAtPosition(position: number): Vector2 {\n    return this._path.getPointAtPosition(position);\n  }\n\n  getAngleAtPosition(position: number): number {\n    return this._path.getAngleAtPosition(position);\n  }\n\n  getTravellerAfterPosition(position: number): Traveller | null {\n    let bestTraveller = null;\n    let bestDistance = Infinity;\n\n    this._currentTravellers.forEach(traveller => {\n      const distance = traveller.positionOnCurrentRoad - position;\n      if (distance <= 0) return;\n      if (distance < bestDistance) {\n        bestDistance = distance;\n        bestTraveller = traveller;\n      }\n    });\n\n    return bestTraveller;\n  }\n\n  getTravellerBeforePosition(position: number): Traveller | null {\n    let bestTraveller = null;\n    let bestDistance = Infinity;\n\n    this._currentTravellers.forEach(traveller => {\n      const distance = position - traveller.positionOnCurrentRoad;\n      if (distance <= 0) return;\n      if (distance < bestDistance) {\n        bestDistance = distance;\n        bestTraveller = traveller;\n      }\n    });\n\n    return bestTraveller;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, time: number) {\n    ctx.beginPath();\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ShapeHelpers.path(ctx, this._path);\n\n    // ctx.strokeStyle = ROAD_OUTER_COLOR.toString();\n    // ctx.lineWidth = ROAD_OUTER_WIDTH;\n    // ctx.stroke();\n\n    // ctx.strokeStyle = ROAD_INNER_COLOR.toString();\n    // ctx.lineWidth = ROAD_INNER_WIDTH;\n    // ctx.stroke();\n\n    const dashScale = this._getLineDashScale();\n    const dashLength = ROAD_IDEAL_DASH_LENGTH * dashScale;\n    ctx.setLineDash(ROAD_IDEAL_DASH.map(length => length * dashScale));\n    ctx.strokeStyle = ROAD_DASH_COLOR.toString();\n    ctx.lineDashOffset = (-time * ROAD_DASH_SPEED * dashScale) % dashLength;\n    ctx.lineWidth = ROAD_DASH_WIDTH;\n    // ctx.strokeStyle = 'black';\n    // ctx.lineWidth = 1;\n    ctx.stroke();\n  }\n\n  _getLineDashScale(): number {\n    const wholeDashCount = Math.floor(this.length / ROAD_IDEAL_DASH_LENGTH);\n    const wholeDashLength = wholeDashCount * ROAD_IDEAL_DASH_LENGTH;\n\n    const roundDownLength = this.length - wholeDashLength;\n    const roundUpLength =\n      wholeDashLength + ROAD_IDEAL_DASH_LENGTH - this.length;\n\n    const dashScale =\n      roundDownLength < roundUpLength\n        ? this.length / wholeDashLength\n        : this.length / (wholeDashLength + ROAD_IDEAL_DASH_LENGTH);\n\n    return dashScale;\n  }\n}\n","// @flow\nimport SceneObject from '../../lib/core/SceneObject';\nimport Circle from '../../lib/geom/Circle';\nimport type Vector2 from '../../lib/geom/Vector2';\nimport ShapeHelpers from '../../lib/ShapeHelpers';\nimport { outSine } from '../../lib/easings';\nimport { mapRange, constrain, flatten, uniq } from '../../lib/util';\nimport Pulse from '../../effects/Pulse';\nimport { TEAL } from '../../colors';\nimport ConnectionSet from '../lib/ConnectionSet';\nimport type { ConnectionDirection } from '../lib/ConnectionDirections';\nimport Traveller from '../Traveller';\nimport Road from '../Road';\nimport type { NetworkNode } from './NetworkNode';\n\nconst DEFAULT_COOLDOWN = 500;\n\nconst RADIUS = 20;\nconst VISUAL_CONNECTION_RADIUS = 30;\nconst CLOCK_RADIUS = RADIUS * 0.7;\nconst PULSE_RADIUS = 35;\n\nconst PULSE_DURATION = 500;\nconst CLOCK_FADE_DURATION = 150;\n\nconst MAIN_COLOR = TEAL.lighten(0.1);\nconst CLOCK_COLOR = TEAL.darken(0.1);\nconst PULSE_COLOR = TEAL.lighten(0.2).fade(0.1);\n\nexport default class Producer extends SceneObject implements NetworkNode {\n  isDestination = false;\n  canConsumeTraveller = false;\n  _circle: Circle;\n  _visualConnectionCircle: Circle;\n  _cooldown: number;\n  _timer: number;\n  _connectionSet: ConnectionSet = new ConnectionSet();\n\n  constructor(x: number, y: number, cooldown: number = DEFAULT_COOLDOWN) {\n    super();\n    this._circle = new Circle(x, y, RADIUS);\n    this._visualConnectionCircle = new Circle(x, y, VISUAL_CONNECTION_RADIUS);\n    this._cooldown = cooldown;\n    this._timer = cooldown;\n  }\n\n  get position(): Vector2 {\n    return this._circle.center;\n  }\n\n  get incomingConnections(): Road[] {\n    return this._connectionSet.incoming;\n  }\n\n  get outgoingConnections(): Road[] {\n    return this._connectionSet.outgoing;\n  }\n\n  getAllReachableNodes(\n    visited: Set<NetworkNode> = new Set(),\n  ): Array<NetworkNode> {\n    visited.add(this);\n    return uniq(\n      flatten(\n        this._connectionSet.outgoing.map(road =>\n          road.getAllReachableNodes(visited),\n        ),\n      ),\n    );\n  }\n\n  getVisualConnectionPointAtAngle(radians: number): Vector2 {\n    return this._visualConnectionCircle.pointOnCircumference(radians);\n  }\n\n  consumeTraveller() {\n    throw new Error('producer cannot consume traveller');\n  }\n\n  connectTo(node: Road, direction: ConnectionDirection) {\n    this._connectionSet.add(node, direction);\n  }\n\n  update(delta: number) {\n    this._timer = constrain(0, this._cooldown, this._timer + delta);\n    if (this._timer >= this._cooldown) {\n      this._onTimerEnd();\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const progress = this._timer / this._cooldown;\n\n    const colorMixAmount = constrain(\n      0,\n      1,\n      mapRange(0, CLOCK_FADE_DURATION, 1, 0, this._timer),\n    );\n    const bgColor = MAIN_COLOR.mix(CLOCK_COLOR, colorMixAmount);\n\n    ctx.beginPath();\n    ctx.fillStyle = bgColor.toString();\n    ShapeHelpers.circle(\n      ctx,\n      this._circle.center.x,\n      this._circle.center.y,\n      this._circle.radius,\n    );\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.fillStyle = CLOCK_COLOR.toString();\n    ctx.moveTo(this._circle.center.x, this._circle.center.y);\n    ctx.arc(\n      this._circle.center.x,\n      this._circle.center.y,\n      this._circle.radius,\n      -Math.PI / 2,\n      progress * 2 * Math.PI - Math.PI / 2,\n      false,\n    );\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.fillStyle = MAIN_COLOR.toString();\n    ShapeHelpers.circle(\n      ctx,\n      this._circle.center.x,\n      this._circle.center.y,\n      CLOCK_RADIUS,\n    );\n    ctx.fill();\n  }\n\n  _resetTimer() {\n    this._timer = 0;\n  }\n\n  _onTimerEnd() {\n    const didEmitTraveller = this._attemptEmitTraveller();\n    if (didEmitTraveller) {\n      this._pulse();\n      this._resetTimer();\n    }\n  }\n\n  _pulse() {\n    this.getScene().addChildBefore(\n      this,\n      new Pulse({\n        x: this._circle.center.x,\n        y: this._circle.center.y,\n        startRadius: RADIUS,\n        endRadius: PULSE_RADIUS,\n        duration: PULSE_DURATION,\n        color: PULSE_COLOR,\n        easeRadius: outSine,\n        removeOnComplete: true,\n      }),\n    );\n  }\n\n  _attemptEmitTraveller(): boolean {\n    const road = this._connectionSet.sampleOutgoing();\n    if (!(road instanceof Road)) return false;\n\n    if (road.canAddTravellerAtStart()) {\n      const traveller = new Traveller();\n      road.addTravellerAtStart(traveller);\n      this.getScene().addChild(traveller);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","// @flow\nimport type Scene from '../lib/core/Scene';\nimport SceneSystem from '../lib/core/SceneSystem';\n\nexport default class DebugOverlay extends SceneSystem {\n  static systemName = 'DebugOverlay';\n\n  canvas: HTMLCanvasElement = document.createElement('canvas');\n  ctx: CanvasRenderingContext2D = this.canvas.getContext('2d');\n\n  constructor() {\n    super();\n\n    window.debugCanvas = this.canvas;\n    window.debugContext = this.ctx;\n  }\n\n  afterAddToScene(scene: Scene) {\n    super.afterAddToScene(scene);\n    this.canvas.width = scene.width * scene.scaleFactor;\n    this.canvas.height = scene.height * scene.scaleFactor;\n    this.ctx.scale(scene.scaleFactor, scene.scaleFactor);\n    window.HAIRLINE = 1 / scene.scaleFactor;\n  }\n\n  afterDraw(sceneCtx: CanvasRenderingContext2D) {\n    const { width, height } = this.getScene();\n    sceneCtx.drawImage(this.canvas, 0, 0, width, height);\n    this.ctx.clearRect(0, 0, width, height);\n  }\n}\n","// @flow\nimport invariant from 'invariant';\nimport Scene from './lib/core/Scene';\nimport Consumer from './entities/networkNodes/Consumer';\nimport Producer from './entities/networkNodes/Producer';\nimport Road from './entities/Road';\nimport Junction from './entities/Junction';\nimport Pal from './entities/pal/Pal';\nimport DebugOverlay from './systems/DebugOverlay';\nimport TravellerFinder from './systems/TravellerFinder';\n\nconst ROUND = 50;\n\nlet scene;\n\nconst scenario1 = () => {\n  const producer1 = new Producer(100, 100, 500);\n  // const producer2 = new Consumer(100, 300, 2500);\n  const consumer1 = new Consumer(400, 200, 1500);\n  const consumer2 = new Consumer(250, 200, 1500);\n  scene.addChild(producer1);\n  // scene.addChild(producer2);\n  scene.addChild(consumer1);\n  scene.addChild(consumer2);\n\n  const junction1 = new Junction(250, 100, ROUND);\n  scene.addChild(junction1);\n  scene.addChild(new Road(producer1, junction1));\n  scene.addChild(\n    new Road(junction1, consumer1, { points: [[400, 100]], autoRound: ROUND }),\n  );\n  scene.addChild(new Road(junction1, consumer2));\n\n  // const path2 = new Path();\n  // path2.addSegments(\n  //   new StraightPathSegment(new Vector2(130, 300), new Vector2(380, 300)),\n  //   new CirclePathSegment(new Vector2(380, 280), 20, Math.PI * 0.5, 0),\n  //   new StraightPathSegment(new Vector2(400, 280), new Vector2(400, 230)),\n  // );\n  // const road2 = new Road(producer2, consumer1, path2);\n  // scene.addChild(road2);\n};\n\nconst scenario2 = () => {\n  const producer = new Producer(100, 300, 500);\n  const junction = new Junction(300, 300, ROUND);\n  const consumer1 = new Consumer(300, 100, 5000);\n  const consumer2 = new Consumer(500, 300, 5000);\n  const consumer3 = new Consumer(300, 500, 5000);\n\n  scene.addChild(new Road(producer, junction));\n  scene.addChild(new Road(junction, consumer1));\n  scene.addChild(new Road(junction, consumer2));\n  scene.addChild(new Road(junction, consumer3));\n\n  scene.addChild(producer);\n  scene.addChild(junction);\n  scene.addChild(consumer1);\n  scene.addChild(consumer2);\n  scene.addChild(consumer3);\n};\n\nconst scenario3 = () => {\n  const northConsumer = new Consumer(300, 550, 1500);\n  const middleConsumer = new Consumer(100, 450, 1500);\n  const southConsumer = new Consumer(100, 250, 1500);\n  const eastProducer = new Producer(600, 150, 500);\n  const westProducer = new Producer(100, 100, 500);\n  // const westProducer = new Producer(250, 250, 100);\n\n  scene.addChild(northConsumer);\n  scene.addChild(middleConsumer);\n  scene.addChild(southConsumer);\n  scene.addChild(eastProducer);\n  scene.addChild(westProducer);\n\n  const mainJunction = new Junction(300, 150, ROUND);\n  const eastProducerSplit = new Junction(500, 370, ROUND);\n  const southConsumerJoin = new Junction(330, 400, ROUND);\n  scene.addChild(mainJunction);\n  scene.addChild(eastProducerSplit);\n  scene.addChild(southConsumerJoin);\n  scene.addChild(new Road(westProducer, mainJunction));\n  scene.addChild(new Road(eastProducer, eastProducerSplit));\n  scene.addChild(new Road(eastProducerSplit, southConsumerJoin));\n  // scene.addChild(\n  //   new Road(eastProducerSplit, mainJunction, {\n  //     points: [[600, 280], [700, 50], [450, 180], [450, 100], [300, 20]],\n  //     // points: [[400, 100]],\n  //     autoRound: 50,\n  //   }),\n  // );\n  scene.addChild(\n    new Road(eastProducerSplit, mainJunction, {\n      points: [[400, 300], [500, 50]],\n      autoRound: ROUND,\n    }),\n  );\n\n  // scene.addChild(new Road(westProducer, mainJunction));\n  scene.addChild(new Road(mainJunction, southConsumerJoin));\n  scene.addChild(new Road(southConsumerJoin, northConsumer));\n  scene.addChild(new Road(mainJunction, middleConsumer));\n  scene.addChild(new Road(mainJunction, southConsumer));\n};\n\nconst scenario4 = () => {\n  const producer1 = new Producer(100, 100, 1000);\n  const producer2 = new Producer(300, 200, 1000);\n  const producer3 = new Producer(100, 300, 1000);\n  // const producer4 = new Producer(400, 100, 1000);\n  const consumer1 = new Consumer(300, 100, 1000);\n  const consumer2 = new Consumer(100, 200, 1000);\n  const consumer3 = new Consumer(300, 300, 1000);\n  // const consumer4 = new Consumer(430, 300, 1000);\n  scene.addChild(producer1);\n  scene.addChild(producer2);\n  scene.addChild(producer3);\n  // scene.addChild(producer4);\n  scene.addChild(consumer1);\n  scene.addChild(consumer2);\n  scene.addChild(consumer3);\n  // scene.addChild(consumer4);\n\n  const junction = new Junction(200, 200, 30);\n  scene.addChild(junction);\n\n  scene.addChild(new Road(producer1, junction));\n  scene.addChild(new Road(producer2, junction));\n  scene.addChild(new Road(producer3, junction));\n  scene.addChild(new Road(junction, consumer1));\n  scene.addChild(new Road(junction, consumer2));\n  scene.addChild(new Road(junction, consumer3));\n\n  // scene.addChild(\n  //   new Road(producer4, consumer4, {\n  //     points: [[400, 250], [415, 250], [415, 150], [430, 150]],\n  //     autoRound: 30,\n  //   }),\n  // );\n};\n\nconst scenario5 = () => {\n  const pal = new Pal(100, 50);\n  scene.addChild(pal);\n\n  const root = document.getElementById('root');\n  invariant(root, '#root must be present');\n\n  root.addEventListener('mousemove', e => {\n    pal.setTarget(e.offsetX, e.offsetY);\n  });\n};\n\nconst scenario6 = () => {\n  const producer = new Producer(300, 50, 1500).addTo(scene);\n  const consumer = new Consumer(500, 50, 100).addTo(scene);\n  new Road(producer, consumer, {\n    points: [[350, 150], [150, 350], [400, 500], [650, 350], [450, 150]],\n    autoRound: 400,\n  }).addTo(scene);\n};\n\nconst go = () => {\n  if (window.scene) return;\n  scene = new Scene(800, 600, window.devicePixelRatio);\n  window.scene = scene;\n  const root = document.getElementById('root');\n  invariant(root, '#root must be present');\n  scene.appendTo(root);\n\n  scene.addSystem(new DebugOverlay());\n  scene.addSystem(new TravellerFinder());\n\n  scenario3();\n\n  scene.start();\n};\n\ngo();\n\n// auto-refresh in dev mode\n// $FlowFixMe - this isn't included in flow's module typedef\nif (module.hot) {\n  module.hot.dispose(() => {\n    window.location.reload();\n  });\n  // $FlowFixMe\n  module.hot.accept(() => {\n    window.location.reload();\n  });\n}\n"]}